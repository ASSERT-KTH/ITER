bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  zipEncoding  =  current.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getNextZipEntry();	  zipEncoding    =    ZipEncoding.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
2	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncoding.getNextZipEntry();	  zipEncoding    =    ZipEncoding.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
3	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getNextZipEntry();	  zipEncoding    =    ZipEncoding.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
4	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getNextZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getNextZipEntry(current);	  zipEncoding    =    ZipEncoding.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
5	[BUG]  [BUGGY]  this.current.setZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(current);	  this.current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
6	[BUG]  [BUGGY]  this.current.setZipEntry(null,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(null,  current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(null,  current);	  this.current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
7	[BUG]  [BUGGY]  this.current.setZipEntry(null,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(null,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(null,  true);	  this.current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
8	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  getNextZipEntry();	  zipEncoding    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
9	[BUG]  [BUGGY]  zipEncoding  =  getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getZipEntry();	  zipEncoding    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
10	[BUG]  [BUGGY]  zipEncoding  =  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getNextZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getNextZipEntry(current);	  zipEncoding    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
11	[BUG]  [BUGGY]  try  {  current.closeDirectory();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeDirectory();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeDirectory();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
12	[BUG]  [BUGGY]  try  {  current.close();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.close();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.close();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
13	[BUG]  [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
14	[BUG]  [BUGGY]  try  {  closeInputStream();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeInputStream();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeInputStream();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
15	[BUG]  [BUGGY]  try  {  fileNameLen();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  fileNameLen();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  fileNameLen();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
16	[BUG]  [BUGGY]  try  {  current.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    current.getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
17	[BUG]  [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  return  null;	  try    {    current.getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
18	[BUG]  [BUGGY]  try  {  current.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    current.getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
19	[BUG]  [BUGGY]  try  {  current.setNextZipEntry(null);  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setNextZipEntry(null);  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setNextZipEntry(null);  }  catch(IOException  ioe)  {  return  null;	  try    {    current.getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
20	[BUG]  [BUGGY]  try  {  current.getNextZipEntry();  }  catch(Exception  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextZipEntry();  }  catch(Exception  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextZipEntry();  }  catch(Exception  e)  {  return  null;	  try    {    current.getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
21	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFullLength()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFullLength()  +  1;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFullLength()  +  1;	  int    LFH_LEN    =    current.getFullLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
22	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFullLength()  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFullLength()  *  2;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFullLength()  *  2;	  int    LFH_LEN    =    current.getFullLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
23	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFullLength()  *  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFullLength()  *  4;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFullLength()  *  4;	  int    LFH_LEN    =    current.getFullLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
24	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
25	[BUG]  [BUGGY]  try  {  current.reset();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.reset();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.reset();  }  catch(IOException  ioe)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
26	[BUG]  [BUGGY]  if(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
27	[BUG]  [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.removeEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
28	[BUG]  [BUGGY]  try  {  current.setZipEntry(ioe);  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(ioe);  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(ioe);  }  catch(IOException  ioe)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
29	[BUG]  [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
30	[BUG]  [BUGGY]  try  {  zipEncoding  =  current.getZipEncoding();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding  =  current.getZipEncoding();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  current.getZipEncoding();  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
31	[BUG]  [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  ZipEncoding.getEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
32	[BUG]  [BUGGY]  try  {  ZipEncoding  entryEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  ZipEncoding  entryEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  ZipEncoding  entryEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
33	[BUG]  [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance(current);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance(current);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  ZipEncoding.getInstance(current);  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
34	[BUG]  [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getEntry(current);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getEntry(current);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  ZipEncoding.getEntry(current);  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
35	[BUG]  [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance(source);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance(source);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  ZipEncoding.getInstance(source);  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
36	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getNextZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getNextZipEntry(current);	  zipEncoding    =    ZipEncodingUtilities.getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
37	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  0);	  zipEncoding    =    ZipEncodingUtilities.getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
38	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  true);	  zipEncoding    =    ZipEncodingUtilities.getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
39	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  this);	  zipEncoding    =    ZipEncodingUtilities.getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
40	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  open);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  open);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  open);	  zipEncoding    =    ZipEncodingUtilities.getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
41	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  fileNameLen);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  fileNameLen);	  zipEncoding    =    ZipEncodingUtilities.getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
42	[BUG]  [BUGGY]  try  {  current.getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextZipEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
43	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
44	[BUG]  [BUGGY]  try  {  current.getZipEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getZipEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
45	[BUG]  [BUGGY]  try  {  current.setZipEntry(null);  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(null);  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(null);  }  catch(EOFException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
46	[BUG]  [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(),  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(),  current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(new  ZipArchiveEntry(),  current);	  this.current.setZipEntry(new    ZipArchiveEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	127	None	replace
47	[BUG]  [BUGGY]  this.current.addZipEntry(new  ZipArchiveEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.addZipEntry(new  ZipArchiveEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.addZipEntry(new  ZipArchiveEntry());	  this.current.setZipEntry(new    ZipArchiveEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	127	None	replace
48	[BUG]  [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(0));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(0));  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(new  ZipArchiveEntry(0));	  this.current.setZipEntry(new    ZipArchiveEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	127	None	replace
49	[BUG]  [BUGGY]  try  {  current.getZipEncoding();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getZipEncoding();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEncoding();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	144	None	replace
50	[BUG]  [BUGGY]  ZipEncoding  current  =  getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  getZipEncoding();	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	144	None	replace
51	[BUG]  [BUGGY]  try  {  current.close();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.close();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.close();  }  catch(IOException  ioe)  {  return  null;	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	116	None	replace
52	[BUG]  [BUGGY]  try  {  open();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  open();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  open();  }  catch(IOException  ioe)  {  return  null;	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	116	None	replace
53	[BUG]  [BUGGY]  try  {  inflater.close();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  inflater.close();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  inflater.close();  }  catch(IOException  ioe)  {  return  null;	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	116	None	replace
54	[BUG]  [BUGGY]  try  {  this.close();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.close();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.close();  }  catch(IOException  ioe)  {  return  null;	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	116	None	replace
55	[BUG]  [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  init();  }  catch(IOException  ioe)  {  return  null;	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	116	None	replace
56	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
57	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Thread.currentThread().interrupt();	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
58	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwInternal();	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
59	[BUG]  [BUGGY]  aughtExceptionHandler.throwIOException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwIOException( " ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwIOException( " ");	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
60	[BUG]  [BUGGY]  readFully(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFully(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFully(current);	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
61	[BUG]  [BUGGY]  explodeZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  explodeZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	explodeZipEntry();	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
62	[BUG]  [BUGGY]  îndoZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  îndoZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	îndoZipEntry();	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
63	[BUG]  [BUGGY]  this.current.setZipEntry(current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(current,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(current,  null);	  this.current.setZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
64	[BUG]  [BUGGY]  this.current.setZipEntry(null,  null,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(null,  null,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(null,  null,  0);	  this.current.setZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
65	[BUG]  [BUGGY]  this.current.setZipEntry(inflater,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(inflater,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(inflater,  null);	  this.current.setZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
66	[BUG]  [BUGGY]  this.current.setZipEntry(entryEncoding,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(entryEncoding,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(entryEncoding,  null);	  this.current.setZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
67	[BUG]  [BUGGY]  this.current.setZipEntry(null,  null,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(null,  null,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(null,  null,  -1);	  this.current.setZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
68	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Thread.currentThread().setContextClassLoader(current);	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
69	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getNextZipEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getNextZipEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Thread.currentThread().setContextClassLoader(getNextZipEntry());	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
70	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
71	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnsupportedOperationException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwUnsupportedOperationException( " ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwUnsupportedOperationException( " ");	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
72	[BUG]  [BUGGY]  aughtExceptionHandler  <  ZipArchiveEntry>inf  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  ZipArchiveEntry>inf  =  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler  <  ZipArchiveEntry>inf  =  getNextZipEntry();	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
73	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler  <  ZipArchiveEntry>inputStream  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  ZipArchiveEntry>inputStream  =  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler  <  ZipArchiveEntry>inputStream  =  getNextZipEntry();	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
75	[BUG]  [BUGGY]  this.current.setZipEntry(entryEncoding,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(entryEncoding,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(entryEncoding,  true);	  this.current.setZipEntry(entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	125	None	replace
76	[BUG]  [BUGGY]  this.current.setZipEntry(entryEncoding,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(entryEncoding,  current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(entryEncoding,  current);	  this.current.setZipEntry(entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	125	None	replace
77	[BUG]  [BUGGY]  this.current.setZipEntry(entryEncoding,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(entryEncoding,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(entryEncoding,  0);	  this.current.setZipEntry(entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	125	None	replace
78	[BUG]  [BUGGY]  this.current.setZipEntry(entryEncoding,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(entryEncoding,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(entryEncoding,  false);	  this.current.setZipEntry(entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	125	None	replace
79	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getCrcEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getCrcEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getCrcEncoding();	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
80	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  CRC32Utilities.getCrcEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  CRC32Utilities.getCrcEncoding(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  CRC32Utilities.getCrcEncoding(current);	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
81	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getCrcEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getCrcEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  zipEncoding.getCrcEncoding();	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
82	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getCrcEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getCrcEncoding(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  zipEncoding.getCrcEncoding(current);	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
83	[BUG]  [BUGGY]  inflater.closeZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  inflater.closeZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	inflater.closeZipEntry();	  inflater.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
84	[BUG]  [BUGGY]  Inflater  inflater  =  current.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inflater  =  current.getInflater();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inflater  =  current.getInflater();	  inflater.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
85	[BUG]  [BUGGY]  inflater.closeEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  inflater.closeEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	inflater.closeEntry(current);	  inflater.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
86	[BUG]  [BUGGY]  current.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.closeEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.closeEntry();	  inflater.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
87	[BUG]  [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
88	[BUG]  [BUGGY]  try  {  current.setZipEntry(false);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(false);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(false);  }  catch(IOException  e)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
89	[BUG]  [BUGGY]  try  {  current.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
90	[BUG]  [BUGGY]  try  {  current.getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
91	[BUG]  [BUGGY]  try  {  current.getZipEntry();  }  catch(Exception  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getZipEntry();  }  catch(Exception  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEntry();  }  catch(Exception  e)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
92	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inf);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inf);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	128	None	replace
93	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inflater);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	128	None	replace
94	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inflater,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inflater,  current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inflater,  current);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	128	None	replace
95	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.inflater);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	128	None	replace
96	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  source);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	128	None	replace
97	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  null);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    this);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
98	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    this);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
99	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.entryEncoding);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    this);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
100	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this,  entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this,  entryEncoding);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    this);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
101	[BUG]  [BUGGY]  this.current.removeZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.removeZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.removeZipEntry();	  this.current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	129	None	replace
102	[BUG]  [BUGGY]  try  {  current.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	111	None	replace
103	[BUG]  [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	111	None	replace
104	[BUG]  [BUGGY]  try  {  fileNameLen();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  fileNameLen();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  fileNameLen();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	111	None	replace
105	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
106	[BUG]  [BUGGY]  try  {  current.reset();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.reset();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.reset();  }  catch(IOException  e)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
107	[BUG]  [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
108	[BUG]  [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.removeEntry();  }  catch(IOException  e)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
109	[BUG]  [BUGGY]  try  {  current.getEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getEntry();  }  catch(IOException  e)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
110	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  -1);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
111	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  entryEncoding,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  entryEncoding,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  entryEncoding,  this);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
112	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
113	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(Exception  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextZipEntry();  }  catch(Exception  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(Exception  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
114	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
115	[BUG]  [BUGGY]  try  {  current.reset();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.reset();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.reset();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
116	[BUG]  [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
117	[BUG]  [BUGGY]  try  {  current.getEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
118	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
119	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  rehashEntry();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
120	[BUG]  [BUGGY]  try  {  current.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
121	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
122	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
123	[BUG]  [BUGGY]  while(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current  ==  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
124	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  fileNameLen);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  fileNameLen);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
125	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this.entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this.entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this.entryEncoding);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
126	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  source);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
127	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  entryEncoding,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  entryEncoding,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  entryEncoding,  this);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
128	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  fileName);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  fileName);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  fileName);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
129	[BUG]  [BUGGY]  getNextZipEntry(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  getNextZipEntry(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	getNextZipEntry(current,  0);	  getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
130	[BUG]  [BUGGY]  getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  getNextZipEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	getNextZipEntry(null);	  getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
131	[BUG]  [BUGGY]  getNextZipEntry(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  getNextZipEntry(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	getNextZipEntry(current,  true);	  getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
132	[BUG]  [BUGGY]  getNextZipEntry(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  getNextZipEntry(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	getNextZipEntry(current,  false);	  getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
133	[BUG]  [BUGGY]  getNextZipEntry(current,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  getNextZipEntry(current,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	getNextZipEntry(current,  -1);	  getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
134	[BUG]  [BUGGY]  getNextZipEntry(current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  getNextZipEntry(current,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	getNextZipEntry(current,  null);	  getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
135	[BUG]  [BUGGY]  if(current!=  null)  {  exitZipEntry(current);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current!=  null)  {  exitZipEntry(current);  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  exitZipEntry(current);  }	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
136	[BUG]  [BUGGY]  exitZipEntry(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipEntry(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipEntry(current,  true);	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
137	[BUG]  [BUGGY]  exitZipEntry(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipEntry(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipEntry(current,  0);	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
138	[BUG]  [BUGGY]  if(current!=  null)  {  exitZipEntry(current);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current!=  null)  {  exitZipEntry(current);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  exitZipEntry(current);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
139	[BUG]  [BUGGY]  if(current!=  null)  {  exitZipEntry(current);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current!=  null)  {  exitZipEntry(current);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  exitZipEntry(current);  }  else  {  throw  new  IllegalStateException( " ");  }	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
140	[BUG]  [BUGGY]  if(current!=  null)  {  exitZipEntry(current);  }  else  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current!=  null)  {  exitZipEntry(current);  }  else  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  exitZipEntry(current);  }  else  {  return  null;  }	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
141	[BUG]  [BUGGY]  enterZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  enterZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	enterZipEntry(current);	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
142	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    open);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
143	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open,  0);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    open);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
144	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open,  true);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    open);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
145	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open,  fileNameLen);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open,  fileNameLen);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    open);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
146	[BUG]  [BUGGY]  try  {  current.closeZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    current.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
147	[BUG]  [BUGGY]  try  {  current.getEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    current.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
148	[BUG]  [BUGGY]  try  {  current.setEntry(null);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setEntry(null);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setEntry(null);  }  catch(IOException  e)  {  return  null;  }	  try    {    current.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
149	[BUG]  [BUGGY]  try  {  current.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeArchiveEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	131	None	replace
150	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeArchiveEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	131	None	replace
151	[BUG]  [BUGGY]  try  {  current.closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeArchiveEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	131	None	replace
152	[BUG]  [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeArchiveEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	131	None	replace
153	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getValue());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current.getValue());	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
154	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.encode(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.encode(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncoding.encode(current);	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
155	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current,  0);	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
156	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getMethod());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current.getMethod());	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
157	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current,  this);	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
158	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current,  false);	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
159	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current,  true);	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
160	[BUG]  [BUGGY]  try  {  current.close();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.close();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.close();  }  catch(IOException  e)  {  return  null;	  try    {    current.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
161	[BUG]  [BUGGY]  Entry  <  ZipArchiveEntry>  entry  =  currentEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Entry  <  ZipArchiveEntry>  entry  =  currentEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Entry  <  ZipArchiveEntry>  entry  =  currentEntry();	  if(current!=    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
162	[BUG]  [BUGGY]  Entry  <  ZipArchiveEntry>  exitZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Entry  <  ZipArchiveEntry>  exitZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Entry  <  ZipArchiveEntry>  exitZipEntry();	  if(current!=    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
163	[BUG]  [BUGGY]  Entry  <  ZipArchiveEntry>  entry  =  entry.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Entry  <  ZipArchiveEntry>  entry  =  entry.getValue();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Entry  <  ZipArchiveEntry>  entry  =  entry.getValue();	  if(current!=    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
164	[BUG]  [BUGGY]  try  {  current.getZipEncoding();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getZipEncoding();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEncoding();  }  catch(IOException  e)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
165	[BUG]  [BUGGY]  Thread.currentThread().setCurrentInternal();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Thread.currentThread().setCurrentInternal();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Thread.currentThread().setCurrentInternal();	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
166	[BUG]  [BUGGY]  this.current.setZipEntry(inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(inf);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(inf);	  this.current.setZipEntry(inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
167	[BUG]  [BUGGY]  this.current.setZipEntry(inf,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(inf,  current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(inf,  current);	  this.current.setZipEntry(inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
168	[BUG]  [BUGGY]  this.current.setZipEntry(this.inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(this.inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(this.inflater);	  this.current.setZipEntry(inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
169	[BUG]  [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(inf));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(inf));  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(new  ZipArchiveEntry(inf));	  this.current.setZipEntry(inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
170	[BUG]  [BUGGY]  this.current.setZipEntry(inflater,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(inflater,  LFH_LEN);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(inflater,  LFH_LEN);	  this.current.setZipEntry(inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
171	[BUG]  [BUGGY]  openZipDirectory(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipDirectory(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipDirectory(current);	  openZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
172	[BUG]  [BUGGY]  closeZipDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  closeZipDirectory();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	closeZipDirectory();	  openZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
173	[BUG]  [BUGGY]  openZipFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipFile();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipFile();	  openZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
174	[BUG]  [BUGGY]  openFileDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openFileDirectory();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openFileDirectory();	  openZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
175	[BUG]  [BUGGY]  openDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openDirectory();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openDirectory();	  openZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
176	[BUG]  [BUGGY]  try  {  current.setZipEntry(false);  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(false);  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(false);  }  catch(IOException  e)  {  return  null;	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
177	[BUG]  [BUGGY]  try  {  current.getNextEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextEntry();  }  catch(IOException  e)  {  return  null;	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
178	[BUG]  [BUGGY]  current.setZipEntry(this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setZipEntry(this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(this);	  current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
179	[BUG]  [BUGGY]  current.setZipEntry(null,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setZipEntry(null,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(null,  null);	  current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
180	[BUG]  [BUGGY]  current.setZipEntry(getNextZipEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setZipEntry(getNextZipEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(getNextZipEntry());	  current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
181	[BUG]  [BUGGY]  current.setZipEntry(inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setZipEntry(inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(inflater);	  current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
182	[BUG]  [BUGGY]  current.setZipEntry(null,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setZipEntry(null,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(null,  false);	  current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
183	[BUG]  [BUGGY]  current.setZipEntry(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setZipEntry(false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(false);	  current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
184	[BUG]  [BUGGY]  openZipEntry(null,  current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(null,  current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(null,  current,  0);	  openZipEntry(null,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
185	[BUG]  [BUGGY]  openZipEntry(new  ZipArchiveEntry(current,  LFH_LEN));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(new  ZipArchiveEntry(current,  LFH_LEN));  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(new  ZipArchiveEntry(current,  LFH_LEN));	  openZipEntry(null,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
186	[BUG]  [BUGGY]  openZipEntry(new  ZipArchiveEntry(current,  null));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(new  ZipArchiveEntry(current,  null));  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(new  ZipArchiveEntry(current,  null));	  openZipEntry(null,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
187	[BUG]  [BUGGY]  openZipEntry(null,  current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(null,  current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(null,  current,  true);	  openZipEntry(null,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
188	[BUG]  [BUGGY]  openZipEntry(null,  current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(null,  current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(null,  current,  false);	  openZipEntry(null,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
189	[BUG]  [BUGGY]  try  {  current.reset();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.reset();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.reset();  }  catch(IOException  e)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
190	[BUG]  [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.removeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
191	[BUG]  [BUGGY]  openZipEntry(current,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  -1);	  openZipEntry(null,    -1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
192	[BUG]  [BUGGY]  openZipEntry(null,  -1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(null,  -1,  current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(null,  -1,  current);	  openZipEntry(null,    -1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
193	[BUG]  [BUGGY]  openZipEntry(null,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(null,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(null,  0);	  openZipEntry(null,    -1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
194	[BUG]  [BUGGY]  openZipEntry(-1,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(-1,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(-1,  -1);	  openZipEntry(null,    -1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
195	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inf  =  current.getInputStream();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inf  =  current.getInputStream();	  Inflater    inf    =    current.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
196	[BUG]  [BUGGY]  Inflater  inf  =  current.getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inf  =  current.getOutputFile();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inf  =  current.getOutputFile();	  Inflater    inf    =    current.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
197	[BUG]  [BUGGY]  Inflater  inf  =  currentEntry.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inf  =  currentEntry.getInflater();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inf  =  currentEntry.getInflater();	  Inflater    inf    =    current.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
198	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inf  =  current.getInputFile();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inf  =  current.getInputFile();	  Inflater    inf    =    current.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
199	[BUG]  [BUGGY]  Inflater  inf  =  current.getInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inf  =  current.getInput();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inf  =  current.getInput();	  Inflater    inf    =    current.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
200	[BUG]  [BUGGY]  Inflater  inf  =  current.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inf  =  current.getEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inf  =  current.getEntry();	  Inflater    inf    =    current.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
201	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(source);	  ZipEncoding    current    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	139	None	replace
202	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(entryEncoding);	  ZipEncoding    current    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	139	None	replace
203	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(entryEncoding);	  ZipEncoding    current    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	139	None	replace
204	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(this.entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(this.entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(this.entryEncoding);	  ZipEncoding    current    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	139	None	replace
205	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getNextZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getNextZipEntry(current);	  ZipEncoding    current    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	139	None	replace
206	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getNextZipEntry();	  ZipEncoding    current    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	139	None	replace
207	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getEntry();	  ZipEncoding    entryEncoding    =    ZipEncoding.getEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	138	None	replace
208	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getZipEntry();	  ZipEncoding    entryEncoding    =    ZipEncoding.getEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	138	None	replace
209	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  zipEncoding.getEntry();	  ZipEncoding    entryEncoding    =    ZipEncoding.getEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	138	None	replace
210	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(source);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
211	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(this.entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(this.entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(this.entryEncoding);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
212	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(inputStream);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(inputStream);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
213	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  0);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
214	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  true);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
215	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(this);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
216	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.current();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.current();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncoding.current();	  zipEncoding    =    ZipEncoding.current();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	135	None	replace
217	[BUG]  [BUGGY]  zipEncoding  =  current.zipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.zipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.zipEncoding();	  zipEncoding    =    ZipEncoding.current();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	135	None	replace
218	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.currentTimeMillis();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.currentTimeMillis();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.currentTimeMillis();	  zipEncoding    =    ZipEncoding.current();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	135	None	replace
219	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.currentTarget();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.currentTarget();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.currentTarget();	  zipEncoding    =    ZipEncoding.current();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	135	None	replace
220	[BUG]  [BUGGY]  zipEncoding  =  current.zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.zipEncoding;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.zipEncoding;	  zipEncoding    =    ZipEncoding.current();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	135	None	replace
221	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  initEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  initEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  initEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
222	[BUG]  [BUGGY]  try  {  initCurposeFlag();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCurposeFlag();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCurposeFlag();  }  catch(IOException  e)  {  return  null;	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
223	[BUG]  [BUGGY]  try  {  initCrc();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCrc();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCrc();  }  catch(IOException  e)  {  return  null;	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
224	[BUG]  [BUGGY]  try  {  initFile();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initFile();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initFile();  }  catch(IOException  e)  {  return  null;	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
225	[BUG]  [BUGGY]  try  {  initZipEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
226	[BUG]  [BUGGY]  try  {  current.closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeArchiveEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	146	None	replace
227	[BUG]  [BUGGY]  try  {  current.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeArchiveEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	146	None	replace
228	[BUG]  [BUGGY]  try  {  current.deleteZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.deleteZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.deleteZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    current.closeZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
229	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  null);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    this);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
230	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    this);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
231	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this,  entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this,  entryEncoding);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    this);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
232	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  currentDirectory();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(IOException  e)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
233	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
234	[BUG]  [BUGGY]  attempt  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  attempt  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	attempt  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
235	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(EOFException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  currentDirectory();  }  catch(EOFException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(EOFException  ioe)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
236	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(EOFException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  currentDirectory();  }  catch(EOFException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(EOFException  e)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
237	[BUG]  [BUGGY]  openZipPathEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipPathEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipPathEntry();	  openZipFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
238	[BUG]  [BUGGY]  openZipFiles();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipFiles();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipFiles();	  openZipFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
239	[BUG]  [BUGGY]  openZipFileEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipFileEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipFileEntry(current);	  openZipFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
240	[BUG]  [BUGGY]  try  {  current.getZipEncoding();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getZipEncoding();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEncoding();  }  catch(IOException  ioe)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	113	None	replace
241	[BUG]  [BUGGY]  try  {  current.closeEntry();  }  catch(Exception  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeEntry();  }  catch(Exception  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeEntry();  }  catch(Exception  ioe)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	113	None	replace
242	[BUG]  [BUGGY]  try  {  this.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	112	None	replace
243	[BUG]  [BUGGY]  try  {  this.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	112	None	replace
244	[BUG]  [BUGGY]  try  {  this.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.getZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	112	None	replace
245	[BUG]  [BUGGY]  try  {  this.openZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.openZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.openZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	112	None	replace
246	[BUG]  [BUGGY]  try  {  this.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.getNextEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	112	None	replace
247	[BUG]  [BUGGY]  openZipEntry(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  true);	  openZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
248	[BUG]  [BUGGY]  openZipEntry(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  false);	  openZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
249	[BUG]  [BUGGY]  openZipEntry(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  0);	  openZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
250	[BUG]  [BUGGY]  try  {  current.setZip(ioe);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZip(ioe);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZip(ioe);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZip();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
251	[BUG]  [BUGGY]  try  {  current.setZip(null);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZip(null);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZip(null);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZip();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
252	[BUG]  [BUGGY]  try  {  current.close();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.close();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.close();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZip();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
253	[BUG]  [BUGGY]  try  {  current.getEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZip();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
254	[BUG]  [BUGGY]  try  {  current.setZip(inflater);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZip(inflater);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZip(inflater);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZip();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
255	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLowerCase();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLowerCase();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLowerCase();	  int    LFH_LEN    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	151	None	replace
256	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFileNameLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFileNameLen();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFileNameLen();	  int    LFH_LEN    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	151	None	replace
257	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFileName()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFileName()  +  1;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFileName()  +  1;	  int    LFH_LEN    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	151	None	replace
258	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFileNameLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFileNameLength();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFileNameLength();	  int    LFH_LEN    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	151	None	replace
259	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLongValue();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLongValue();	  int    LFH_LEN    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	151	None	replace
260	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  0);	  zipEncoding    =    ZipEncodingUtil.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
261	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  true);	  zipEncoding    =    ZipEncodingUtil.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
262	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  open);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  open);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  open);	  zipEncoding    =    ZipEncodingUtil.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
263	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  fileNameLen);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  fileNameLen);	  zipEncoding    =    ZipEncodingUtil.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
264	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current  +  1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current  +  1);	  zipEncoding    =    ZipEncodingUtil.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
265	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  this);	  zipEncoding    =    ZipEncodingUtil.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
266	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtil.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
267	[BUG]  [BUGGY]  try  {  current.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
268	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
269	[BUG]  [BUGGY]  Entry  <  ZipArchiveEntry>  entry  =  exitZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Entry  <  ZipArchiveEntry>  entry  =  exitZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Entry  <  ZipArchiveEntry>  entry  =  exitZipEntry();	  if(current    ==    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
270	[BUG]  [BUGGY]  ||(current!=  null  &&  current.length()  >  0)||(current  ==  null  &&  current.length()  >  0))  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ||(current!=  null  &&  current.length()  >  0)||(current  ==  null  &&  current.length()  >  0))  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	||(current!=  null  &&  current.length()  >  0)||(current  ==  null  &&  current.length()  >  0))  {  getNextZipEntry();  }	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
271	[BUG]  [BUGGY]  ||(current  ==  null  &&  current.length()  >  0)||(current!=  null  &&  current.length()  >  0))  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ||(current  ==  null  &&  current.length()  >  0)||(current!=  null  &&  current.length()  >  0))  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	||(current  ==  null  &&  current.length()  >  0)||(current!=  null  &&  current.length()  >  0))  {  getNextZipEntry();  }	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
272	[BUG]  [BUGGY]  ||(current!=  null  &&  current.length  >  0)||(current  ==  null  &&  current.length  >  0))  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ||(current!=  null  &&  current.length  >  0)||(current  ==  null  &&  current.length  >  0))  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	||(current!=  null  &&  current.length  >  0)||(current  ==  null  &&  current.length  >  0))  {  getNextZipEntry();  }	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
273	[BUG]  [BUGGY]  ||(current!=  null  &&  current.length()  >  0)||(current  ==  null  &&  current.length()  >  0))  {  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ||(current!=  null  &&  current.length()  >  0)||(current  ==  null  &&  current.length()  >  0))  {  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	||(current!=  null  &&  current.length()  >  0)||(current  ==  null  &&  current.length()  >  0))  {  getNextZipEntry();	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
274	[BUG]  [BUGGY]  ||(current  ==  null  &&  current.length()  >  0)||(current!=  null  &&  current.length()  >  0))  {  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ||(current  ==  null  &&  current.length()  >  0)||(current!=  null  &&  current.length()  >  0))  {  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	||(current  ==  null  &&  current.length()  >  0)||(current!=  null  &&  current.length()  >  0))  {  getNextZipEntry();	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
275	[BUG]  [BUGGY]  try  {  current.close();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.close();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.close();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
276	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
277	[BUG]  [BUGGY]  try  {  open();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  open();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  open();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
278	[BUG]  [BUGGY]  try  {  this.close();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.close();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.close();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
279	[BUG]  [BUGGY]  try  {  inflater.close();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  inflater.close();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  inflater.close();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
280	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
281	[BUG]  [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  exitZipDirectory();  }	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
282	[BUG]  [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  exitZipDirectory();  }  else  {  throw  new  IllegalStateException( " ");  }	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
283	[BUG]  [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  exitZipDirectory();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
284	[BUG]  [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  else  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  else  {  return  current;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  exitZipDirectory();  }  else  {  return  current;  }	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
285	[BUG]  [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  else  {  in.close();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  exitZipDirectory();  }  else  {  in.close();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  exitZipDirectory();  }  else  {  in.close();  }	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
286	[BUG]  [BUGGY]  this.current.setZipEntry(getNextZipEntry(),  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(getNextZipEntry(),  current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(getNextZipEntry(),  current);	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
287	[BUG]  [BUGGY]  this.current.setZipEntry(getNextZipEntry(),  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(getNextZipEntry(),  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(getNextZipEntry(),  true);	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
288	[BUG]  [BUGGY]  this.current.setZipEntry(getNextZipEntry(),  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(getNextZipEntry(),  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(getNextZipEntry(),  null);	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
289	[BUG]  [BUGGY]  this.current.setZipEntry(getCurrentZipEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(getCurrentZipEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(getCurrentZipEntry());	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
290	[BUG]  [BUGGY]  this.current.setZipEntry(getNextZipEntry()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(getNextZipEntry()  +  1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(getNextZipEntry()  +  1);	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
291	[BUG]  [BUGGY]  try  {  current.closeDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
292	[BUG]  [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
293	[BUG]  [BUGGY]  try  {  closeInputStream();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeInputStream();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeInputStream();  }  catch(IOException  e)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
294	[BUG]  [BUGGY]  try  {  current.closeDirectory();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeDirectory();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeDirectory();  }  catch(EOFException  e)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
295	[BUG]  [BUGGY]  current  =  getNextZipEntry().getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current  =  getNextZipEntry().getValue();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  getNextZipEntry().getValue();	  current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
296	[BUG]  [BUGGY]  current  =  getCurrentZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current  =  getCurrentZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  getCurrentZipEntry();	  current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
297	[BUG]  [BUGGY]  current  =  getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current  =  getNextZipEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  getNextZipEntry(null);	  current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
298	[BUG]  [BUGGY]  current  =  getNextZipEntry(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current  =  getNextZipEntry(false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  getNextZipEntry(false);	  current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
299	[BUG]  [BUGGY]  current  =  this.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current  =  this.getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  this.getNextZipEntry();	  current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
300	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
301	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    getNextEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
302	[BUG]  [BUGGY]  try  {  getNextFile();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextFile();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextFile();  }  catch(IOException  e)  {  return  null;	  try    {    getNextEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
303	[BUG]  [BUGGY]  if(current  ==  null)  {  openZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  openZipArchiveEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  openZipArchiveEntry();  }	  openZipArchiveEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
304	[BUG]  [BUGGY]  closeZipArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  closeZipArchiveEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	closeZipArchiveEntry();	  openZipArchiveEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
305	[BUG]  [BUGGY]  if(current  ==  null)  {  openZipArchiveEntry();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  openZipArchiveEntry();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  openZipArchiveEntry();  }  else  {  throw  new  IllegalStateException( " ");  }	  openZipArchiveEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
306	[BUG]  [BUGGY]  if(current  ==  null)  {  openZipArchiveEntry();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  openZipArchiveEntry();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  openZipArchiveEntry();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  openZipArchiveEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
307	[BUG]  [BUGGY]  if(current  ==  null)  {  openZipArchiveEntry();  }  else  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  openZipArchiveEntry();  }  else  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  openZipArchiveEntry();  }  else  {  getNextZipEntry();  }	  openZipArchiveEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
308	[BUG]  [BUGGY]  openZipArchiveEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipArchiveEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipArchiveEntry(current);	  openZipArchiveEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
309	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getEntryEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getEntryEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getEntryEncoding();	  ZipEncoding    entryEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
310	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEncoding(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEncoding(0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getZipEncoding(0);	  ZipEncoding    entryEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
311	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEncoding(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEncoding(false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getZipEncoding(false);	  ZipEncoding    entryEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
312	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEncoding(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEncoding(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getZipEncoding(null);	  ZipEncoding    entryEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
313	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getInstance();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getInstance();	  ZipEncoding    entryEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
314	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getInstance();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  zipEncoding.getInstance();	  ZipEncoding    entryEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
315	[BUG]  [BUGGY]  while(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
316	[BUG]  [BUGGY]  While(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  While(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	While(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
317	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  openEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  openEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  openEntry();  }  catch(IOException  ioe)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
318	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  initZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  initZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  initZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
319	[BUG]  [BUGGY]  try  {  current.initZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.initZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.initZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
320	[BUG]  [BUGGY]  try  {  initZipEntry(current);  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipEntry(current);  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipEntry(current);  }  catch(IOException  e)  {  return  null;	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
321	[BUG]  [BUGGY]  initZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  initZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	initZipEntry();	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
322	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  bytesReadFromStream);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  bytesReadFromStream);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
323	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  fileNameLen);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  fileNameLen);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
324	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.fileNameLen);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.fileNameLen);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
325	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  LFH_LEN);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  LFH_LEN);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
326	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  fileNameLen  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  fileNameLen  +  1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  fileNameLen  +  1);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
327	[BUG]  [BUGGY]  try  {  this.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.getNextZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	133	None	replace
328	[BUG]  [BUGGY]  try  {  this.closeZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.closeZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	133	None	replace
329	[BUG]  [BUGGY]  try  {  this.getZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.getZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.getZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	133	None	replace
330	[BUG]  [BUGGY]  try  {  this.openZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.openZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.openZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	133	None	replace
331	[BUG]  [BUGGY]  try  {  this.current.closeEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.current.closeEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.current.closeEntry();  }  catch(IOException  e)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	133	None	replace
332	[BUG]  [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
333	[BUG]  [BUGGY]  try  {  current.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
334	[BUG]  [BUGGY]  try  {  current.setZipEntry(crc);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(crc);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(crc);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
335	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
336	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  true);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
337	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
338	[BUG]  [BUGGY]  ZipEncoding  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
339	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
340	[BUG]  [BUGGY]  ZIPEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZIPEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZIPEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
341	[BUG]  [BUGGY]  this.current.initZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.initZipEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.initZipEntry(null);	  this.current.initZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	126	None	replace
342	[BUG]  [BUGGY]  this.current.initZipEntry(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.initZipEntry(false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.initZipEntry(false);	  this.current.initZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	126	None	replace
343	[BUG]  [BUGGY]  this.current.initZipEntry(-1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.initZipEntry(-1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.initZipEntry(-1);	  this.current.initZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	126	None	replace
344	[BUG]  [BUGGY]  openZipEntry(null,  null,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(null,  null,  current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(null,  null,  current);	  openZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
345	[BUG]  [BUGGY]  OpenZipEntry  <?>  current  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  OpenZipEntry  <?>  current  =  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	OpenZipEntry  <?>  current  =  getNextZipEntry();	  openZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
346	[BUG]  [BUGGY]  openZipEntry(this,  current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(this,  current,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(this,  current,  null);	  openZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
347	[BUG]  [BUGGY]  OpenZipEntry  <?>  current  =  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  OpenZipEntry  <?>  current  =  getNextZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	OpenZipEntry  <?>  current  =  getNextZipEntry(current);	  openZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
348	[BUG]  [BUGGY]  try  {  current.getZipEncoding();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getZipEncoding();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEncoding();  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	142	None	replace
349	[BUG]  [BUGGY]  try  {  current.getZipEncoding();  }  catch(EOFException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getZipEncoding();  }  catch(EOFException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEncoding();  }  catch(EOFException  e)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	142	None	replace
350	[BUG]  [BUGGY]  return  current.getZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getZipEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getZipEntry(null);	  return    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	149	None	replace
351	[BUG]  [BUGGY]  return  current.getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getNextEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getNextEntry();	  return    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	149	None	replace
352	[BUG]  [BUGGY]  return  current.getZipEntry(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getZipEntry(0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getZipEntry(0);	  return    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	149	None	replace
353	[BUG]  [BUGGY]  return  current.getZipEntry(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getZipEntry(false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getZipEntry(false);	  return    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	149	None	replace
354	[BUG]  [BUGGY]  return  current.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getValue();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getValue();	  return    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	149	None	replace
355	[BUG]  [BUGGY]  readBytesOfEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readBytesOfEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readBytesOfEntry(current);	  readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	140	None	replace
356	[BUG]  [BUGGY]  ReadBytesOfEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ReadBytesOfEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ReadBytesOfEntry();	  readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	140	None	replace
357	[BUG]  [BUGGY]  readFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFully();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFully();	  readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	140	None	replace
358	[BUG]  [BUGGY]  fileNameLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  fileNameLen();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen();	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
359	[BUG]  [BUGGY]  try  {  current.fileNameLen();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.fileNameLen();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.fileNameLen();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
360	[BUG]  [BUGGY]  try  {  current.readFully();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.readFully();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.readFully();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
361	[BUG]  [BUGGY]  try  {  fileNameLen(current);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  fileNameLen(current);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  fileNameLen(current);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
362	[BUG]  [BUGGY]  try  {  current.readFully(fileNameLen());  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.readFully(fileNameLen());  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.readFully(fileNameLen());  }  catch(IOException  ioe)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
363	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  close);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  close);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  close);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    close);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	120	None	replace
364	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  close,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  close,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  close,  0);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    close);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	120	None	replace
365	[BUG]  [BUGGY]  if(inflater!=  null)  {  try  {  inflater.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(inflater!=  null)  {  try  {  inflater.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(inflater!=  null)  {  try  {  inflater.closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    inflater.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	141	None	replace
366	[BUG]  [BUGGY]  if(inflater!=  null)  {  try  {  current.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(inflater!=  null)  {  try  {  current.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(inflater!=  null)  {  try  {  current.closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    inflater.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	141	None	replace
367	[BUG]  [BUGGY]  try  {  current.closeEntry();  }  catch(Exception  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeEntry();  }  catch(Exception  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeEntry();  }  catch(Exception  e)  {  return  null;  }	  try    {    inflater.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	141	None	replace
368	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  closed);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  closed);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  closed);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    closed);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	122	None	replace
369	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
370	[BUG]  [BUGGY]  try  {  current.reset();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.reset();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.reset();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
371	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
372	[BUG]  [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.removeEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
373	[BUG]  [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
374	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(Exception  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  rehashEntry();  }  catch(Exception  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(Exception  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
375	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  0);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
376	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  true);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
377	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  fileNameLen);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  fileNameLen);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
378	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
379	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current  +  1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current  +  1);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
380	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  open);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  open);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  open);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
381	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  this);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
382	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0);	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
383	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  zipEncoding.getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  zipEncoding.getZipEncoding();	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
384	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  closed);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  closed);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  closed);	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
385	[BUG]  [BUGGY]  try  {  startNewZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  startNewZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  startNewZipEntry();  }  catch(IOException  e)  {  return  null;  }	  startNewZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
386	[BUG]  [BUGGY]  try  {  startNewZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  startNewZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  startNewZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  startNewZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
387	[BUG]  [BUGGY]  try  {  startNewZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  startNewZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  startNewZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  startNewZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
388	[BUG]  [BUGGY]  if(current  ==  null)  {  startNewZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  startNewZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  startNewZipEntry();  }	  startNewZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
389	[BUG]  [BUGGY]  try  {  startNewZipEntry();  }  catch(IOException  e)  {  throw  new  RuntimeException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  startNewZipEntry();  }  catch(IOException  e)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  startNewZipEntry();  }  catch(IOException  e)  {  throw  new  RuntimeException( " ");  }	  startNewZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
390	[BUG]  [BUGGY]  byte[]  buf  =  current.getBytes();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  byte[]  buf  =  current.getBytes();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getBytes();	  byte[]    buf    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	110	None	replace
391	[BUG]  [BUGGY]  byte[]  buf  =  current.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  byte[]  buf  =  current.getInputStream();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getInputStream();	  byte[]    buf    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	110	None	replace
392	[BUG]  [BUGGY]  byte[]  buf  =  current.getBuffer();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  byte[]  buf  =  current.getBuffer();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getBuffer();	  byte[]    buf    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	110	None	replace
393	[BUG]  [BUGGY]  byte[]  buf  =  current.getPath();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  byte[]  buf  =  current.getPath();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getPath();	  byte[]    buf    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	110	None	replace
394	[BUG]  [BUGGY]  byte[]  buf  =  current.getFileName()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  byte[]  buf  =  current.getFileName()  +  1;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getFileName()  +  1;	  byte[]    buf    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	110	None	replace
395	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	123	None	replace
396	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  true);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	123	None	replace
397	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	123	None	replace
398	[BUG]  [BUGGY]  ZIPEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZIPEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZIPEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	123	None	replace
399	[BUG]  [BUGGY]  zipEncoding  =  current.getZipEntry(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipEntry(0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipEntry(0);	  zipEncoding    =    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
400	[BUG]  [BUGGY]  zipEncoding  =  current.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getEntry();	  zipEncoding    =    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
401	[BUG]  [BUGGY]  zipEncoding  =  current.getZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipEntry(null);	  zipEncoding    =    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
402	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
403	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
404	[BUG]  [BUGGY]  openDirectoryEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openDirectoryEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openDirectoryEntry();	  openFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
405	[BUG]  [BUGGY]  openFiles();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openFiles();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openFiles();	  openFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
406	[BUG]  [BUGGY]  zipEncoding  =  current.getCurposeFlag();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getCurposeFlag();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getCurposeFlag();	  zipEncoding    =    current.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
407	[BUG]  [BUGGY]  this.current.setNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setNextZipEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setNextZipEntry(null);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
408	[BUG]  [BUGGY]  this.current.setNextEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setNextEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setNextEntry(null);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
409	[BUG]  [BUGGY]  current.setNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setNextZipEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setNextZipEntry(null);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
410	[BUG]  [BUGGY]  this.current.setNextZipEntry(null,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setNextZipEntry(null,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setNextZipEntry(null,  null);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
411	[BUG]  [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  closeZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
412	[BUG]  [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  closeZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
413	[BUG]  [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  throw  new  RuntimeException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeZipEntry();  }  catch(IOException  e)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeZipEntry();  }  catch(IOException  e)  {  throw  new  RuntimeException( " ");  }	  closeZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
414	[BUG]  [BUGGY]  aughtExceptionHandler  <  ZipArchiveEntry>  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  ZipArchiveEntry>  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler  <  ZipArchiveEntry>  getNextZipEntry();	  if(current!=    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
415	[BUG]  [BUGGY]  Thread.currentThread().setContext(getNextZipEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Thread.currentThread().setContext(getNextZipEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Thread.currentThread().setContext(getNextZipEntry());	  if(current!=    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
416	[BUG]  [BUGGY]  try  {  current.reset();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.reset();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.reset();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
417	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
418	[BUG]  [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.removeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.removeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
419	[BUG]  [BUGGY]  try  {  current.setZipEntry(ioe);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(ioe);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(ioe);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
420	[BUG]  [BUGGY]  return  current!=  null?  null  :  current.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current!=  null?  null  :  current.getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current!=  null?  null  :  current.getNextZipEntry();	  return    current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
421	[BUG]  [BUGGY]  return  current  ==  null?  null  :  current.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current  ==  null?  null  :  current.getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current  ==  null?  null  :  current.getNextZipEntry();	  return    current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
422	[BUG]  [BUGGY]  return  current.getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getNextZipEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getNextZipEntry(null);	  return    current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
423	[BUG]  [BUGGY]  return  current.getNextZipEntry(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getNextZipEntry(false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getNextZipEntry(false);	  return    current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
424	[BUG]  [BUGGY]  return  current.getNextZipEntry(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getNextZipEntry(true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getNextZipEntry(true);	  return    current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
425	[BUG]  [BUGGY]  pending  ||(current  ==  null  &&  current.getValue()!=  null))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  pending  ||(current  ==  null  &&  current.getValue()!=  null))  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	pending  ||(current  ==  null  &&  current.getValue()!=  null))  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
426	[BUG]  [BUGGY]  pending  ||(current!=  null  &&  current.getValue()  ==  null))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  pending  ||(current!=  null  &&  current.getValue()  ==  null))  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	pending  ||(current!=  null  &&  current.getValue()  ==  null))  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
427	[BUG]  [BUGGY]  pending  ||(current  ==  null  &&  current.getValue()  ==  null))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  pending  ||(current  ==  null  &&  current.getValue()  ==  null))  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	pending  ||(current  ==  null  &&  current.getValue()  ==  null))  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
428	[BUG]  [BUGGY]  pending  ||(current  ==  null  &&  current.getLength()  >  0))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  pending  ||(current  ==  null  &&  current.getLength()  >  0))  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	pending  ||(current  ==  null  &&  current.getLength()  >  0))  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
429	[BUG]  [BUGGY]  pending  ||(current  ==  null  &&  current.getLength()  >  0))  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  pending  ||(current  ==  null  &&  current.getLength()  >  0))  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	pending  ||(current  ==  null  &&  current.getLength()  >  0))  {  return  null;	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
430	[BUG]  [BUGGY]  pending  ||(current  ==  null  &&  current.getValue()!=  null))  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  pending  ||(current  ==  null  &&  current.getValue()!=  null))  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	pending  ||(current  ==  null  &&  current.getValue()!=  null))  {  return  null;	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
431	[BUG]  [BUGGY]  this.current.flush();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.flush();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.flush();	  this.current.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
432	[BUG]  [BUGGY]  this.current.closeEntry(inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.closeEntry(inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.closeEntry(inflater);	  this.current.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
433	[BUG]  [BUGGY]  this.current.closeEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.closeEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.closeEntry(null);	  this.current.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
434	[BUG]  [BUGGY]  this.current.reset();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.reset();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.reset();	  this.current.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
435	[BUG]  [BUGGY]  fileNameLen  =  current.getFileNameLen()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  fileNameLen  =  current.getFileNameLen()  +  1;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen  =  current.getFileNameLen()  +  1;	  fileNameLen    =    current.getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
436	[BUG]  [BUGGY]  fileNameLen  =  current.getFileNameLen()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  fileNameLen  =  current.getFileNameLen()  -  1;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen  =  current.getFileNameLen()  -  1;	  fileNameLen    =    current.getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
437	[BUG]  [BUGGY]  fileNameLen  =  current.getFileNameLen(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  fileNameLen  =  current.getFileNameLen(0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen  =  current.getFileNameLen(0);	  fileNameLen    =    current.getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
438	[BUG]  [BUGGY]  fileNameLen  =  current.getFileNameLen()  +  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  fileNameLen  =  current.getFileNameLen()  +  LFH_LEN;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen  =  current.getFileNameLen()  +  LFH_LEN;	  fileNameLen    =    current.getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
439	[BUG]  [BUGGY]  fileNameLen  =  current.getFileNameLen()  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  fileNameLen  =  current.getFileNameLen()  +  2;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen  =  current.getFileNameLen()  +  2;	  fileNameLen    =    current.getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
440	[BUG]  [BUGGY]  fileNameLen  =  current.getPurposeFlag();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  fileNameLen  =  current.getPurposeFlag();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen  =  current.getPurposeFlag();	  fileNameLen    =    current.getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
441	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
442	[BUG]  [BUGGY]  try  {  current.reset();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.reset();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.reset();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
443	[BUG]  [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(null);  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
444	[BUG]  [BUGGY]  try  {  current.getEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
445	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
446	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(Exception  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  rehashEntry();  }  catch(Exception  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(Exception  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
447	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLength()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLength()  +  1;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLength()  +  1;	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
448	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLength()  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLength()  *  2;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLength()  *  2;	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
449	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLength()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLength()  -  1;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLength()  -  1;	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
450	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLength()  *  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLength()  *  4;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLength()  *  4;	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
451	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLength()  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLength()  +  2;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLength()  +  2;	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
452	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0L);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0L);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0L);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
453	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  1);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
454	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0,  current.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0,  current.length);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0,  current.length);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
455	[BUG]  [BUGGY]  try  {  current.closeZipEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeZipEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeZipEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    current.closeEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
456	[BUG]  [BUGGY]  try  {  current.getEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    current.closeEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
457	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLongSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLongSize();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLongSize();	  int    LFH_LEN    =    current.getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
458	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFullSize()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFullSize()  +  1;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFullSize()  +  1;	  int    LFH_LEN    =    current.getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
459	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLeastFullSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLeastFullSize();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLeastFullSize();	  int    LFH_LEN    =    current.getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
460	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLowerBound();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLowerBound();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLowerBound();	  int    LFH_LEN    =    current.getFullSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
461	[BUG]  [BUGGY]  try  {  current.closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeArchiveEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeArchiveEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	132	None	replace
462	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncoding.getZipEncoding();	  zipEncoding    =    ZipEncoding.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
463	[BUG]  [BUGGY]  ZipEncoding  zipEncoding  =  current.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  zipEncoding  =  current.getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  zipEncoding  =  current.getZipEncoding();	  zipEncoding    =    ZipEncoding.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
464	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncoding.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncoding.getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncoding.getZipEncoding();	  zipEncoding    =    ZipEncoding.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
465	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getCurrentZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getCurrentZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getCurrentZipEntry();	  zipEncoding    =    ZipEncoding.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
466	[BUG]  [BUGGY]  try  {  this.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
467	[BUG]  [BUGGY]  try  {  this.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
468	[BUG]  [BUGGY]  try  {  this.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
469	[BUG]  [BUGGY]  try  {  this.openZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.openZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.openZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
470	[BUG]  [BUGGY]  try  {  this.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
471	[BUG]  [BUGGY]  try  {  this.close();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.close();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.close();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
472	[BUG]  [BUGGY]  try  {  initCurposeFlag();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCurposeFlag();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCurposeFlag();  }  catch(IOException  e)  {  return  null;  }	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
473	[BUG]  [BUGGY]  try  {  initFile();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initFile();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initFile();  }  catch(IOException  e)  {  return  null;  }	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
474	[BUG]  [BUGGY]  try  {  initCrc();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCrc();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCrc();  }  catch(IOException  e)  {  return  null;  }	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
475	[BUG]  [BUGGY]  try  {  initCurpose();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCurpose();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCurpose();  }  catch(IOException  e)  {  return  null;  }	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
476	[BUG]  [BUGGY]  try  {  initZipEntry();  }  catch(EOFException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipEntry();  }  catch(EOFException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipEntry();  }  catch(EOFException  e)  {  return  null;  }	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
477	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeArchiveEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	130	None	replace
478	[BUG]  [BUGGY]  try  {  current.closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeArchiveEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	130	None	replace
479	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
480	[BUG]  [BUGGY]  ZipEncoding  current  =  zipEncoding.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  zipEncoding.getInstance();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  zipEncoding.getInstance();	  ZipEncoding    current    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
481	[BUG]  [BUGGY]  ZipEncoding  current  =  entryEncoding.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  entryEncoding.getInstance();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  entryEncoding.getInstance();	  ZipEncoding    current    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
482	[BUG]  [BUGGY]  ZipEncoding  current  =  zipEncoding.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  zipEncoding.getEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  zipEncoding.getEntry();	  ZipEncoding    current    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
483	[BUG]  [BUGGY]  ZipEncoding  current  =  this.entryEncoding.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  this.entryEncoding.getInstance();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  this.entryEncoding.getInstance();	  ZipEncoding    current    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
484	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncoding.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncoding.getEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncoding.getEntry();	  ZipEncoding    current    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
485	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getInstance(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getInstance(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncoding.getInstance(current);	  zipEncoding    =    ZipEncoding.getInstance(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	137	None	replace
486	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getInstance(current,  0);	  zipEncoding    =    ZipEncoding.getInstance(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	137	None	replace
487	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getInstance(current,  true);	  zipEncoding    =    ZipEncoding.getInstance(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	137	None	replace
488	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getInstance(current,  -1);	  zipEncoding    =    ZipEncoding.getInstance(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	137	None	replace
489	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getInstance(current,  false);	  zipEncoding    =    ZipEncoding.getInstance(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	137	None	replace
490	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getZipEntry(current);	  zipEncoding    =    ZipEncoding.getInstance(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	137	None	replace
491	[BUG]  [BUGGY]  try  {  open();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  open();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  open();  }  catch(IOException  e)  {  return  null;  }	  try    {    close();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	114	None	replace
492	[BUG]  [BUGGY]  try  {  inflater.close();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  inflater.close();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  inflater.close();  }  catch(IOException  e)  {  return  null;  }	  try    {    close();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	114	None	replace
493	[BUG]  [BUGGY]  try  {  init();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  init();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  init();  }  catch(IOException  e)  {  return  null;  }	  try    {    close();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	114	None	replace
494	[BUG]  [BUGGY]  closed  =  false;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  closed  =  false;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	closed  =  false;	  closed    =    true;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
495	[BUG]  [BUGGY]  shutting  =  true;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  shutting  =  true;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	shutting  =  true;	  closed    =    true;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
496	[BUG]  [BUGGY]  closed  =  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  closed  =  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	closed  =  null;	  closed    =    true;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
497	[BUG]  [BUGGY]  shutting  =  false;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  shutting  =  false;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	shutting  =  false;	  closed    =    true;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
498	[BUG]  [BUGGY]  close  =  false;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  close  =  false;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	close  =  false;	  closed    =    true;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
499	[BUG]  [BUGGY]  int  LFH_LEN  =  current.readFully(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.readFully(true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.readFully(true);	  int    LFH_LEN    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	148	None	replace
500	[BUG]  [BUGGY]  int  LFH_LEN  =  current.readFully(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.readFully(false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.readFully(false);	  int    LFH_LEN    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	148	None	replace
501	[BUG]  [BUGGY]  int  LFH_LEN  =  current.readFully(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.readFully(lengthOfLastRead);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.readFully(lengthOfLastRead);	  int    LFH_LEN    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	148	None	replace
502	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFully();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFully();	  int    LFH_LEN    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	148	None	replace
503	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    open);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
504	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open,  0);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    open);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
505	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open,  true);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    open);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
506	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  currentDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	147	None	replace
507	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	147	None	replace
508	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	147	None	replace
509	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  currentDirectory();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(EOFException  e)  {  return  null;	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	147	None	replace
510	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(EOFException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  currentDirectory();  }  catch(EOFException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(EOFException  ioe)  {  return  null;	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	147	None	replace
511	[BUG]  [BUGGY]  try  {  init();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  init();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  init();  }  catch(IOException  e)  {  return  null;	  try    {    close();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	118	None	replace
512	[BUG]  [BUGGY]  try  {  open();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  open();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  open();  }  catch(IOException  e)  {  return  null;	  try    {    close();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	118	None	replace
513	[BUG]  [BUGGY]  try  {  in.close();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  in.close();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  in.close();  }  catch(IOException  e)  {  return  null;	  try    {    close();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	118	None	replace
514	[BUG]  [BUGGY]  while(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
515	[BUG]  [BUGGY]  While(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  While(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	While(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
516	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  openEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  openEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  openEntry();  }  catch(IOException  e)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
517	[BUG]  [BUGGY]  inflater.flush();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  inflater.flush();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	inflater.flush();	  inflater.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
518	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0L);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0L);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0L);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
519	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  1);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
520	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
521	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0,  current.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0,  current.length);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0,  current.length);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
522	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  -1);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
523	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
524	[BUG]  [BUGGY]  try  {  current.reset();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.reset();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.reset();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
525	[BUG]  [BUGGY]  if(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
526	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
527	[BUG]  [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(null);  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
528	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  rehashEntry();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
529	[BUG]  [BUGGY]  zipEncoding  =  current.getEntryEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getEntryEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getEntryEncoding();	  zipEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
530	[BUG]  [BUGGY]  zipEncoding  =  current.getZipEncoding(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipEncoding(0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipEncoding(0);	  zipEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
531	[BUG]  [BUGGY]  zipEncoding  =  current.getZipEncoding(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipEncoding(false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipEncoding(false);	  zipEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
532	[BUG]  [BUGGY]  zipEncoding  =  current.getZip();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZip();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZip();	  zipEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
533	[BUG]  [BUGGY]  try  {  current.getEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    current.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
534	[BUG]  [BUGGY]  if(current  ==  null)  {  rehashCode();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  rehashCode();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  rehashCode();  }	  rehashCode();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
535	[BUG]  [BUGGY]  if(current!=  null)  {  rehashCode();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current!=  null)  {  rehashCode();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  rehashCode();  }	  rehashCode();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
536	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	throw  new  IllegalStateException( " ");	  rehashCode();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
537	[BUG]  [BUGGY]  if(current  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  rehashCode();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
538	[BUG]  [BUGGY]  if(current  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
539	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	throw  new  IllegalArgumentException( " ");	  rehashCode();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
540	[BUG]  [BUGGY]  try  {  current.initZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.initZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.initZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
541	[BUG]  [BUGGY]  try  {  initZipEntry(current);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipEntry(current);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipEntry(current);  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
542	[BUG]  [BUGGY]  try  {  initFileEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initFileEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initFileEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
543	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
544	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(EOFException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextEntry();  }  catch(EOFException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(EOFException  e)  {  return  null;  }	  try    {    getNextEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
545	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
546	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    getNextEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
547	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
548	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFH_LEN()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFH_LEN()  +  1;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFH_LEN()  +  1;	  int    LFH_LEN    =    current.getFH_LEN();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	152	None	replace
549	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFH_LONG();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFH_LONG();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFH_LONG();	  int    LFH_LEN    =    current.getFH_LEN();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	152	None	replace
550	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLeastFH_LEN();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getLeastFH_LEN();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLeastFH_LEN();	  int    LFH_LEN    =    current.getFH_LEN();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	152	None	replace
551	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  close();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  close();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  close();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	115	None	replace
552	[BUG]  [BUGGY]  try  {  inflater.close();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  inflater.close();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  inflater.close();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	115	None	replace
553	[BUG]  [BUGGY]  try  {  open();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  open();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  open();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	115	None	replace
554	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	115	None	replace
555	[BUG]  [BUGGY]  zipEncoding  =  getZipEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getZipEncoding(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getZipEncoding(current);	  zipEncoding    =    getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
556	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  getZipEncoding();	  zipEncoding    =    getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
557	[BUG]  [BUGGY]  zipEncoding  =  getCrc();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getCrc();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getCrc();	  zipEncoding    =    getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
558	[BUG]  [BUGGY]  exitZip();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZip();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZip();	  exitZipFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
559	[BUG]  [BUGGY]  exitZipFile(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipFile(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipFile(current);	  exitZipFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
560	[BUG]  [BUGGY]  openZipEntry(current,  null,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  null,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  null,  0);	  openZipEntry(current,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
561	[BUG]  [BUGGY]  openZipEntry(current,  null,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  null,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  null,  true);	  openZipEntry(current,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
562	[BUG]  [BUGGY]  openZipEntry(current,  null,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  null,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  null,  -1);	  openZipEntry(current,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
563	[BUG]  [BUGGY]  openZipEntry(current,  null,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  null,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  null,  false);	  openZipEntry(current,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
564	[BUG]  [BUGGY]  openZipEntry(current,  null,  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  null,  1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  null,  1);	  openZipEntry(current,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
565	[BUG]  [BUGGY]  openZipEntry(current,  null,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  null,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  null,  this);	  openZipEntry(current,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
566	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this,  0);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    this);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
567	[BUG]  [BUGGY]  openZipEntry(entryEncoding,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(entryEncoding,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(entryEncoding,  -1);	  openZipEntry(null,    -1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
568	[BUG]  [BUGGY]  try  {  current.getNext();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNext();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNext();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZip();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
569	[BUG]  [BUGGY]  try  {  current.getZip();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getZip();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZip();  }  catch(IOException  e)  {  return  null;  }	  try    {    current.getZip();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
570	[BUG]  [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeArchiveEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	130	None	replace
571	[BUG]  [BUGGY]  try  {  initArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initArchiveEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeArchiveEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	130	None	replace
572	[BUG]  [BUGGY]  try  {  entryEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  entryEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  entryEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	142	None	replace
573	[BUG]  [BUGGY]  try  {  zipEncoding.close();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.close();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.close();  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	142	None	replace
574	[BUG]  [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(EOFException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(EOFException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeEntry();  }  catch(EOFException  e)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	142	None	replace
575	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncoding.current();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncoding.current();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncoding.current();	  zipEncoding    =    ZipEncoding.current();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	135	None	replace
576	[BUG]  [BUGGY]  return  current.getZipArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getZipArchiveEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getZipArchiveEntry();	  return    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	149	None	replace
577	[BUG]  [BUGGY]  return  current.getZipFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getZipFile();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getZipFile();	  return    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	149	None	replace
578	[BUG]  [BUGGY]  return  current.getZipDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getZipDirectory();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getZipDirectory();	  return    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	149	None	replace
579	[BUG]  [BUGGY]  try  {  current.setZipEntry(new  ZipArchiveEntry());  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(new  ZipArchiveEntry());  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(new  ZipArchiveEntry());  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
580	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFH_LEN(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFH_LEN(0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFH_LEN(0);	  int    LFH_LEN    =    current.getFH_LEN();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	152	None	replace
581	[BUG]  [BUGGY]  try  {  openDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  openDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  openDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
582	[BUG]  [BUGGY]  try  {  getNextDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
583	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
584	[BUG]  [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
585	[BUG]  [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
586	[BUG]  [BUGGY]  try  {  return  current;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
587	[BUG]  [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
588	[BUG]  [BUGGY]  try  {  readFully(current);  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  readFully(current);  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  readFully(current);  }  catch(IOException  ioe)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
589	[BUG]  [BUGGY]  try  {  return  current;  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current;  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current;  }  catch(IOException  ioe)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
590	[BUG]  [BUGGY]  closeZipFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  closeZipFileEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	closeZipFileEntry();	  openZipFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
591	[BUG]  [BUGGY]  exitZipDirectory(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipDirectory(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipDirectory(current);	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
592	[BUG]  [BUGGY]  zipEncoding  =  getNextZipDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getNextZipDirectory();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getNextZipDirectory();	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
593	[BUG]  [BUGGY]  startNewZipDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  startNewZipDirectory();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	startNewZipDirectory();	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
594	[BUG]  [BUGGY]  try  {  this.close();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.close();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.close();  }  catch(IOException  e)  {  return  null;  }	  try    {    close();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	114	None	replace
595	[BUG]  [BUGGY]  try  {  close(current);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  close(current);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  close(current);  }  catch(IOException  e)  {  return  null;  }	  try    {    close();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	114	None	replace
596	[BUG]  [BUGGY]  try  {  close(current);  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  close(current);  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  close(current);  }  catch(IOException  ioe)  {  return  null;	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	116	None	replace
597	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  in);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  in);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  in);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    closed);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	122	None	replace
598	[BUG]  [BUGGY]  try  {  initDirectory();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initDirectory();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initDirectory();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
599	[BUG]  [BUGGY]  try  {  openDirectory();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  openDirectory();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  openDirectory();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
600	[BUG]  [BUGGY]  try  {  getNextDirectory();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextDirectory();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextDirectory();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
601	[BUG]  [BUGGY]  try  {  current.deleteZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.deleteZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.deleteZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    current.getZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
602	[BUG]  [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
603	[BUG]  [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
604	[BUG]  [BUGGY]  try  {  getNextFileEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextFileEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextFileEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
605	[BUG]  [BUGGY]  try  {  getNextArchiveEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextArchiveEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextArchiveEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
606	[BUG]  [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
607	[BUG]  [BUGGY]  try  {  getNextFile();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextFile();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextFile();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
608	[BUG]  [BUGGY]  try  {  current  =  getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
609	[BUG]  [BUGGY]  this.current.deleteZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.deleteZipEntry(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.deleteZipEntry(null);	  this.current.initZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	126	None	replace
610	[BUG]  [BUGGY]  try  {  initCurrentDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCurrentDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCurrentDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
611	[BUG]  [BUGGY]  try  {  initSource();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initSource();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initSource();  }  catch(IOException  e)  {  return  null;	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
612	[BUG]  [BUGGY]  try  {  initCurrentEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCurrentEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCurrentEntry();  }  catch(IOException  e)  {  return  null;	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
613	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  closed);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  closed);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  closed);	  zipEncoding    =    ZipEncodingUtilities.getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
614	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  close);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  close);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  close);	  zipEncoding    =    ZipEncodingUtilities.getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
615	[BUG]  [BUGGY]  openZipArchiveEntry(current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipArchiveEntry(current,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipArchiveEntry(current,  null);	  openZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
616	[BUG]  [BUGGY]  this.current.setZipEntry(null,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(null,  0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(null,  0);	  this.current.setZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
617	[BUG]  [BUGGY]  this.current.setZipEntry(null,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(null,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(null,  -1);	  this.current.setZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
618	[BUG]  [BUGGY]  zipEncoding  =  getNextZipArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getNextZipArchiveEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getNextZipArchiveEntry();	  openFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
619	[BUG]  [BUGGY]  readFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFileEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFileEntry();	  openFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
620	[BUG]  [BUGGY]  zipEncoding  =  getCurrentZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getCurrentZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getCurrentZipEntry();	  zipEncoding    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
621	[BUG]  [BUGGY]  zipEncoding  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getNextArchiveEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getNextArchiveEntry();	  zipEncoding    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
622	[BUG]  [BUGGY]  this.current.deleteZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.deleteZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.deleteZipEntry();	  this.current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	129	None	replace
623	[BUG]  [BUGGY]  readFully(current)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFully(current)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFully(current)  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
624	[BUG]  [BUGGY]  wired  ||  current  ==  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  wired  ||  current  ==  null)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	wired  ||  current  ==  null)  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
625	[BUG]  [BUGGY]  wired  ||(current  ==  null))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  wired  ||(current  ==  null))  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	wired  ||(current  ==  null))  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
626	[BUG]  [BUGGY]  readFully(currentEntry.getValue())  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFully(currentEntry.getValue())  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFully(currentEntry.getValue())  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
627	[BUG]  [BUGGY]  try  {  this.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	112	None	replace
628	[BUG]  [BUGGY]  return  current.getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getNextArchiveEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getNextArchiveEntry();	  return    current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
629	[BUG]  [BUGGY]  return  current.getNextZipFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getNextZipFileEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getNextZipFileEntry();	  return    current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
630	[BUG]  [BUGGY]  return  current.getNextZipEntry(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getNextZipEntry(0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getNextZipEntry(0);	  return    current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
631	[BUG]  [BUGGY]  return  current.getNextZipFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getNextZipFile();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getNextZipFile();	  return    current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
632	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this.useUnicodeExtraFields);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this.useUnicodeExtraFields);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this.useUnicodeExtraFields);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    close);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	124	None	replace
633	[BUG]  [BUGGY]  Inflater  inf  =  current.getFileInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inf  =  current.getFileInputStream();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inf  =  current.getFileInputStream();	  Inflater    inf    =    current.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
634	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(sourceStart);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(sourceStart);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(sourceStart);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
635	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  open);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  open);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  open);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
636	[BUG]  [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(EOFException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(EOFException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(EOFException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
637	[BUG]  [BUGGY]  try  {  ZipEncoding  current  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  ZipEncoding  current  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  ZipEncoding  current  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
638	[BUG]  [BUGGY]  try  {  current  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
639	[BUG]  [BUGGY]  zipEncoding  =  getZipArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getZipArchiveEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getZipArchiveEntry();	  zipEncoding    =    getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
640	[BUG]  [BUGGY]  try  {  this.closeDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.closeDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	133	None	replace
641	[BUG]  [BUGGY]  try  {  this.getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.getNextZipEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	133	None	replace
642	[BUG]  [BUGGY]  try  {  this.close();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.close();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.close();  }  catch(IOException  e)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	133	None	replace
643	[BUG]  [BUGGY]  current  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current  =  getNextArchiveEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  getNextArchiveEntry();	  current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
644	[BUG]  [BUGGY]  current  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current  =  getNextFileEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  getNextFileEntry();	  current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
645	[BUG]  [BUGGY]  current  =  getNextZipFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current  =  getNextZipFileEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  getNextZipFileEntry();	  current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
646	[BUG]  [BUGGY]  try  {  source();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  source();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  source();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
647	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(Exception  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  currentDirectory();  }  catch(Exception  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(Exception  e)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
648	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
649	[BUG]  [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
650	[BUG]  [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
651	[BUG]  [BUGGY]  try  {  return  current;  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current;  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current;  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
652	[BUG]  [BUGGY]  try  {  getNextArchiveEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextArchiveEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextArchiveEntry();  }  catch(IOException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
653	[BUG]  [BUGGY]  try  {  getNextDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
654	[BUG]  [BUGGY]  readFully(currentEntry.getValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFully(currentEntry.getValue());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFully(currentEntry.getValue());	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
655	[BUG]  [BUGGY]  aughtExceptionHandler.handleZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.handleZipEntry();	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
656	[BUG]  [BUGGY]  this.current.setZipEntry(this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(this);	  this.current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
657	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
658	[BUG]  [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
659	[BUG]  [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
660	[BUG]  [BUGGY]  try  {  return  current;  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current;  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current;  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
661	[BUG]  [BUGGY]  try  {  initEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
662	[BUG]  [BUGGY]  try  {  initDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
663	[BUG]  [BUGGY]  try  {  openDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  openDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  openDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
664	[BUG]  [BUGGY]  try  {  initCurrentDirectory();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCurrentDirectory();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCurrentDirectory();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
665	[BUG]  [BUGGY]  try  {  initCurrentEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCurrentEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCurrentEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
666	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  closureEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  closureEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  closureEntry();  }  catch(IOException  ioe)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
667	[BUG]  [BUGGY]  try  {  current.inflater.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.inflater.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.inflater.closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    inflater.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	141	None	replace
668	[BUG]  [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
669	[BUG]  [BUGGY]  try  {  getNextArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
670	[BUG]  [BUGGY]  try  {  getNextFile();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextFile();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextFile();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
671	[BUG]  [BUGGY]  try  {  getNextFileEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextFileEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextFileEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
672	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.handleMalformedException( " ");	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
673	[BUG]  [BUGGY]  State  state  =  getState();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  State  state  =  getState();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	State  state  =  getState();	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
674	[BUG]  [BUGGY]  State  state  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  State  state  =  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	State  state  =  getNextZipEntry();	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
675	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingSource(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingSource(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.handleMissingSource(current);	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
676	[BUG]  [BUGGY]  current.setZipEntry(entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setZipEntry(entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(entryEncoding);	  current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
677	[BUG]  [BUGGY]  current.setZipEntry(null,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setZipEntry(null,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(null,  true);	  current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
678	[BUG]  [BUGGY]  aughtExceptionHandler(current.getNextZipEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler(current.getNextZipEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler(current.getNextZipEntry());	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
679	[BUG]  [BUGGY]  [Delete]  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  [Delete]  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	[Delete]	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
680	[BUG]  [BUGGY]  try  {  getNextArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextArchiveEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
681	[BUG]  [BUGGY]  try  {  getNextFileEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextFileEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextFileEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
682	[BUG]  [BUGGY]  try  {  zipEncoding.closeZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.closeZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
683	[BUG]  [BUGGY]  try  {  entryEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  entryEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  entryEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
684	[BUG]  [BUGGY]  try  {  zipEncoding.close();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.close();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.close();  }  catch(IOException  e)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
685	[BUG]  [BUGGY]  readFully(current)  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFully(current)  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFully(current)  {  getNextZipEntry();  }	  if(current    ==    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
686	[BUG]  [BUGGY]  readUnicodeExtraFields(current)  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readUnicodeExtraFields(current)  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readUnicodeExtraFields(current)  {  getNextZipEntry();  }	  if(current    ==    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
687	[BUG]  [BUGGY]  readUnicodeExtraFields();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readUnicodeExtraFields();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readUnicodeExtraFields();	  if(current    ==    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
688	[BUG]  [BUGGY]  return  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  getNextZipEntry();	  if(current    ==    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
689	[BUG]  [BUGGY]  readFully(current.getNextZipEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFully(current.getNextZipEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFully(current.getNextZipEntry());	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
690	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  false);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	123	None	replace
691	[BUG]  [BUGGY]  Closed  =  false;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Closed  =  false;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Closed  =  false;	  closed    =    true;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
692	[BUG]  [BUGGY]  shut  =  false;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  shut  =  false;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	shut  =  false;	  closed    =    true;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
693	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFileLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFileLength();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFileLength();	  int    LFH_LEN    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	151	None	replace
694	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFileName().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFileName().length;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFileName().length;	  int    LFH_LEN    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	151	None	replace
695	[BUG]  [BUGGY]  try  {  current.close();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.close();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.close();  }  catch(EOFException  e)  {  return  null;	  try    {    current.closeEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
696	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  inflater);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	128	None	replace
697	[BUG]  [BUGGY]  zipEncoding  =  current.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getInputStream();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getInputStream();	  zipEncoding    =    current.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
698	[BUG]  [BUGGY]  Guvernant  <  ZipArchiveEntry>  current  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Guvernant  <  ZipArchiveEntry>  current  =  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Guvernant  <  ZipArchiveEntry>  current  =  getNextZipEntry();	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
699	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getCurrentZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getCurrentZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getCurrentZipEncoding();	  ZipEncoding    entryEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
700	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  currentEntry.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  currentEntry.getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  currentEntry.getZipEncoding();	  ZipEncoding    entryEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
701	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inflater  =  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inflater  =  getNextZipEntry();	  inflater.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
702	[BUG]  [BUGGY]  try  {  readBytesOfEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  readBytesOfEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  readBytesOfEntry();  }  catch(IOException  e)  {  return  null;	  readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	140	None	replace
703	[BUG]  [BUGGY]  try  {  readBytesOfEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  readBytesOfEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  readBytesOfEntry();  }  catch(IOException  e)  {  return  null;  }	  readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	140	None	replace
704	[BUG]  [BUGGY]  try  {  readBytesOfEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  readBytesOfEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  readBytesOfEntry();  }  catch(IOException  ioe)  {  return  null;	  readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	140	None	replace
705	[BUG]  [BUGGY]  if(current  ==  null)  {  exitFileEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  exitFileEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  exitFileEntry();  }	  if(current    ==    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
706	[BUG]  [BUGGY]  readFully(current)  {  exitZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFully(current)  {  exitZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFully(current)  {  exitZipEntry();  }	  if(current    ==    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
707	[BUG]  [BUGGY]  Entry  <  ZipArchiveEntry>  entry  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Entry  <  ZipArchiveEntry>  entry  =  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Entry  <  ZipArchiveEntry>  entry  =  getNextZipEntry();	  if(current    ==    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
708	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFullPurposeFlag();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFullPurposeFlag();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFullPurposeFlag();	  int    LFH_LEN    =    current.getFullLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
709	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFullCharIndex();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFullCharIndex();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFullCharIndex();	  int    LFH_LEN    =    current.getFullLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
710	[BUG]  [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
711	[BUG]  [BUGGY]  try  {  return  current;  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current;  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current;  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
712	[BUG]  [BUGGY]  try  {  readFully(current);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  readFully(current);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  readFully(current);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
713	[BUG]  [BUGGY]  try  {  rehashContext();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  rehashContext();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashContext();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
714	[BUG]  [BUGGY]  Entry  <  ZipArchiveEntry  >=  null)  {  exitZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Entry  <  ZipArchiveEntry  >=  null)  {  exitZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Entry  <  ZipArchiveEntry  >=  null)  {  exitZipEntry();  }	  if(current!=    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
715	[BUG]  [BUGGY]  try  {  initCentralDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initCentralDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initCentralDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
716	[BUG]  [BUGGY]  try  {  initZipArchiveEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipArchiveEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipArchiveEntry();  }  catch(IOException  e)  {  return  null;	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
717	[BUG]  [BUGGY]  try  {  this.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
718	[BUG]  [BUGGY]  try  {  closure();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closure();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closure();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	115	None	replace
719	[BUG]  [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  init();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    close();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	115	None	replace
720	[BUG]  [BUGGY]  try  {  current.getNextFile();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextFile();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextFile();  }  catch(IOException  ioe)  {  return  null;	  try    {    current.getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
721	[BUG]  [BUGGY]  try  {  current.getNextDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getNextDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    current.getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
722	[BUG]  [BUGGY]  fileNameLen  =  current.getFileNameLen()  +  bytesReadFromStream;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  fileNameLen  =  current.getFileNameLen()  +  bytesReadFromStream;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen  =  current.getFileNameLen()  +  bytesReadFromStream;	  fileNameLen    =    current.getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
723	[BUG]  [BUGGY]  int  LFH_LEN  =  current.readFully(inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.readFully(inputStream);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.readFully(inputStream);	  int    LFH_LEN    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	148	None	replace
724	[BUG]  [BUGGY]  int  LFH_LEN  =  current.readFully(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.readFully(source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.readFully(source);	  int    LFH_LEN    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	148	None	replace
725	[BUG]  [BUGGY]  int  LFH_LEN  =  current.readFully(length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.readFully(length);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.readFully(length);	  int    LFH_LEN    =    current.readFully();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	148	None	replace
726	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtils.getZipEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtils.getZipEncoding(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtils.getZipEncoding(current);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
727	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  -1);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
728	[BUG]  [BUGGY]  getNextZipEntry(current,  closed);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  getNextZipEntry(current,  closed);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	getNextZipEntry(current,  closed);	  getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
729	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0,  currentLength);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0,  currentLength);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0,  currentLength);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
730	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(this.current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(this.current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(this.current,  true);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
731	[BUG]  [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.rehashEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
732	[BUG]  [BUGGY]  try  {  return  current;  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current;  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current;  }  catch(IOException  e)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
733	[BUG]  [BUGGY]  try  {  readFully(current);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  readFully(current);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  readFully(current);  }  catch(IOException  e)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
734	[BUG]  [BUGGY]  try  {  current.deleteZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.deleteZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.deleteZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
735	[BUG]  [BUGGY]  exitZipPath();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipPath();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipPath();	  exitZipFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
736	[BUG]  [BUGGY]  try  {  initSource();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initSource();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initSource();  }  catch(IOException  e)  {  return  null;  }	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
737	[BUG]  [BUGGY]  this.current.setNextZipEntry(new  ZipArchiveEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setNextZipEntry(new  ZipArchiveEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setNextZipEntry(new  ZipArchiveEntry());	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
738	[BUG]  [BUGGY]  this.current.deleteZipEntry(-1,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.deleteZipEntry(-1,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.deleteZipEntry(-1,  -1);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
739	[BUG]  [BUGGY]  handleUnicodeExtraFields();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  handleUnicodeExtraFields();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	handleUnicodeExtraFields();	  rehashCode();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
740	[BUG]  [BUGGY]  if(current!=  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current!=  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
741	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEntry(current);	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
742	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  source);	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
743	[BUG]  [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.rehashEntry();  }  catch(IOException  e)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
744	[BUG]  [BUGGY]  try  {  return  current;  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current;  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current;  }  catch(IOException  e)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
745	[BUG]  [BUGGY]  try  {  readFully(current);  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  readFully(current);  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  readFully(current);  }  catch(IOException  e)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
746	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current  +  1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getInstance(current  +  1);	  zipEncoding    =    ZipEncoding.getInstance(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	137	None	replace
747	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  close);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  close);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getInstance(current,  close);	  zipEncoding    =    ZipEncoding.getInstance(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	137	None	replace
748	[BUG]  [BUGGY]  try  {  initDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	111	None	replace
749	[BUG]  [BUGGY]  try  {  openDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  openDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  openDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	111	None	replace
750	[BUG]  [BUGGY]  try  {  getNextDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	111	None	replace
751	[BUG]  [BUGGY]  try  {  zipEncoding.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	113	None	replace
752	[BUG]  [BUGGY]  try  {  entryEncoding.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  entryEncoding.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  entryEncoding.closeEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	113	None	replace
753	[BUG]  [BUGGY]  try  {  zipEncoding.close();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.close();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.close();  }  catch(IOException  ioe)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	113	None	replace
754	[BUG]  [BUGGY]  ZipEncoding  current  =  EntryEncoding.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  EntryEncoding.getInstance();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  EntryEncoding.getInstance();	  ZipEncoding    current    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
755	[BUG]  [BUGGY]  ZipEncoding  current  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  getNextZipEntry();	  ZipEncoding    current    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
756	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  closureEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null)  {  try  {  closureEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  closureEntry();  }  catch(IOException  e)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
757	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.useUnicodeExtraFields);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.useUnicodeExtraFields);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.useUnicodeExtraFields);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    close);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	120	None	replace
758	[BUG]  [BUGGY]  readFully(currentEntry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  readFully(currentEntry.getName());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readFully(currentEntry.getName());	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
759	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current,  null);	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
760	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current,  -1);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current,  -1);	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
761	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncoding.encode(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncoding.encode(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncoding.encode(current);	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
762	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open,  fileNameLen);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open,  fileNameLen);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    open);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
763	[BUG]  [BUGGY]  try  {  current.closeEntry();  }  catch(EOFException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.closeEntry();  }  catch(EOFException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeEntry();  }  catch(EOFException  e)  {  return  null;  }	  try    {    current.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
764	[BUG]  [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(getNextZipEntry()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(getNextZipEntry()));  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(new  ZipArchiveEntry(getNextZipEntry()));	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
765	[BUG]  [BUGGY]  this.current.setZipEntry(getNextDirectory());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(getNextDirectory());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(getNextDirectory());	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
766	[BUG]  [BUGGY]  this.current.setZipEntry(getNumberOfLinks());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(getNumberOfLinks());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(getNumberOfLinks());	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
767	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  closed);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  closed);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  closed);	  zipEncoding    =    ZipEncodingUtil.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
768	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  close);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  close);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current,  close);	  zipEncoding    =    ZipEncodingUtil.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
769	[BUG]  [BUGGY]  this.current.setZipEncoding(entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEncoding(entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEncoding(entryEncoding);	  this.current.setZipEntry(entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	125	None	replace
770	[BUG]  [BUGGY]  this.current.setZipEncoding(zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEncoding(zipEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEncoding(zipEncoding);	  this.current.setZipEntry(entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	125	None	replace
771	[BUG]  [BUGGY]  try  {  getNextFile();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextFile();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextFile();  }  catch(IOException  ioe)  {  return  null;	  try    {    getNextEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
772	[BUG]  [BUGGY]  try  {  current  =  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    getNextEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
773	[BUG]  [BUGGY]  exitZipEntry(current,  closed);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipEntry(current,  closed);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipEntry(current,  closed);	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
774	[BUG]  [BUGGY]  exitZipEntry(current,  close);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipEntry(current,  close);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipEntry(current,  close);	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
775	[BUG]  [BUGGY]  exitZipEntry(current,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipEntry(current,  false);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipEntry(current,  false);	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
776	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(Exception  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  currentDirectory();  }  catch(Exception  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(Exception  e)  {  return  null;	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	147	None	replace
777	[BUG]  [BUGGY]  try  {  zipEncoding.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	144	None	replace
778	[BUG]  [BUGGY]  try  {  zipEncoding.close();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.close();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.close();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	144	None	replace
779	[BUG]  [BUGGY]  zipEncoding.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding.closeEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding.closeEntry();	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	144	None	replace
780	[BUG]  [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(Exception  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(Exception  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeEntry();  }  catch(Exception  ioe)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	144	None	replace
781	[BUG]  [BUGGY]  byte[]  buf  =  current.getBytesReadFromStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  byte[]  buf  =  current.getBytesReadFromStream();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getBytesReadFromStream();	  byte[]    buf    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	110	None	replace
782	[BUG]  [BUGGY]  byte[]  buf  =  current.getBytesRead();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  byte[]  buf  =  current.getBytesRead();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getBytesRead();	  byte[]    buf    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	110	None	replace
783	[BUG]  [BUGGY]  startOpenZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  startOpenZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	startOpenZipEntry();	  startNewZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
784	[BUG]  [BUGGY]  startNewZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  startNewZipEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	startNewZipEntry(current);	  startNewZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
785	[BUG]  [BUGGY]  ZipEncoding  current  =  current.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  current.getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  current.getZipEncoding();	  zipEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
786	[BUG]  [BUGGY]  OpenZipEntry  <  K,  V>  current  =  currentEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  OpenZipEntry  <  K,  V>  current  =  currentEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	OpenZipEntry  <  K,  V>  current  =  currentEntry();	  openZipEntry(null,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
787	[BUG]  [BUGGY]  closeZipEntry(current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  closeZipEntry(current,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	closeZipEntry(current,  null);	  openZipEntry(null,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
788	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(currentClassLoader);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(currentClassLoader);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Thread.currentThread().setContextClassLoader(currentClassLoader);	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
789	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Thread.currentThread().setContextClassLoader(getCurrentThreadContext());	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
790	[BUG]  [BUGGY]  try  {  getNextArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextArchiveEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
791	[BUG]  [BUGGY]  try  {  getNextFileEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextFileEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextFileEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    getNextZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
792	[BUG]  [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeArchiveEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	131	None	replace
793	[BUG]  [BUGGY]  try  {  closure();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closure();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closure();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
794	[BUG]  [BUGGY]  try  {  close(current);  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  close(current);  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  close(current);  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
795	[BUG]  [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  init();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
796	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getZipEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getZipEncoding(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getZipEncoding(current);	  zipEncoding    =    ZipEncoding.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
797	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getCurrentZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getCurrentZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getCurrentZipEncoding();	  zipEncoding    =    ZipEncoding.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
798	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
799	[BUG]  [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
800	[BUG]  [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  getNextZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
801	[BUG]  [BUGGY]  try  {  return  current;  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current;  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current;  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
802	[BUG]  [BUGGY]  this.current.release();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.release();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.release();	  this.current.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
803	[BUG]  [BUGGY]  this.current.setLength(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setLength(0);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setLength(0);	  this.current.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
804	[BUG]  [BUGGY]  this.current.close(int);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.close(int);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.close(int);	  this.current.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
805	[BUG]  [BUGGY]  try  {  current.getFileNameLen();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.getFileNameLen();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getFileNameLen();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
806	[BUG]  [BUGGY]  try  {  fileNameLen(source);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  fileNameLen(source);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  fileNameLen(source);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
807	[BUG]  [BUGGY]  try  {  fileNameLen();  }  catch(Exception  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  fileNameLen();  }  catch(Exception  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  fileNameLen();  }  catch(Exception  ioe)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
808	[BUG]  [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeArchiveEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	146	None	replace
809	[BUG]  [BUGGY]  zipEncoding  =  current.getZipArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipArchiveEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipArchiveEntry();	  zipEncoding    =    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
810	[BUG]  [BUGGY]  zipEncoding  =  current.getZipFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipFile();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipFile();	  zipEncoding    =    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
811	[BUG]  [BUGGY]  zipEncoding  =  current.getZipDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipDirectory();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipDirectory();	  zipEncoding    =    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
812	[BUG]  [BUGGY]  zipEncoding  =  current.getZipVersion();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipVersion();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipVersion();	  zipEncoding    =    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
813	[BUG]  [BUGGY]  try  {  initArchiveEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initArchiveEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initArchiveEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeArchiveEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	132	None	replace
814	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  close);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  close);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  close);	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
815	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getHeaderLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getHeaderLength();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getHeaderLength();	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
816	[BUG]  [BUGGY]  this.current.setDirectory(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setDirectory(null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setDirectory(null);	  this.current.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
817	[BUG]  [BUGGY]  aughtExceptionHandler.handleZipEntry(new  FileInputStream( "UTF-8 "));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleZipEntry(new  FileInputStream( "UTF-8 "));  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.handleZipEntry(new  FileInputStream( "UTF-8 "));	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
818	[BUG]  [BUGGY]  aughtExceptionHandler.throwZipEncodingException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwZipEncodingException( " ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwZipEncodingException( " ");	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
819	[BUG]  [BUGGY]  aughtExceptionHandler.handleZipEntry(inputStream,  ZipEncoding.UTF8);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleZipEntry(inputStream,  ZipEncoding.UTF8);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.handleZipEntry(inputStream,  ZipEncoding.UTF8);	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
820	[BUG]  [BUGGY]  aughtExceptionHandler.throwZipFailedError( "Current  entry  not  found: "  +  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwZipFailedError( "Current  entry  not  found: "  +  source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwZipFailedError( "Current  entry  not  found: "  +  source);	  if(current    ==    null)    {    exitZipEntry();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
821	[BUG]  [BUGGY]  getNextZipEntry(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  getNextZipEntry(current,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	getNextZipEntry(current,  this);	  getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
822	[BUG]  [BUGGY]  parent  ==  null  ||  current.getValue()  ==  null)  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  parent  ==  null  ||  current.getValue()  ==  null)  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	parent  ==  null  ||  current.getValue()  ==  null)  {  getNextZipEntry();  }	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
823	[BUG]  [BUGGY]  parent  ==  null  ||  current.getValue()  ==  null)  {  getNextZipEntry();  }  else  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  parent  ==  null  ||  current.getValue()  ==  null)  {  getNextZipEntry();  }  else  {  return  current;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	parent  ==  null  ||  current.getValue()  ==  null)  {  getNextZipEntry();  }  else  {  return  current;  }	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
824	[BUG]  [BUGGY]  parent  ==  null)  {  getNextZipEntry();  }  else  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  parent  ==  null)  {  getNextZipEntry();  }  else  {  return  current;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	parent  ==  null)  {  getNextZipEntry();  }  else  {  return  current;  }	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
825	[BUG]  [BUGGY]  parent  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  parent  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  getNextZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	parent  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  getNextZipEntry();	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
826	[BUG]  [BUGGY]  parent  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  parent  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	parent  ==  null  ||  current.getValue()  ==  ZipEncoding.UTF8)  {  getNextZipEntry();  }	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
827	[BUG]  [BUGGY]  parent  ==  null)  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  parent  ==  null)  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	parent  ==  null)  {  getNextZipEntry();  }	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
828	[BUG]  [BUGGY]  try  {  current.setZipEntry(entryEncoding);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(entryEncoding);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(entryEncoding);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
829	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null  ||  hasDataDescriptor)  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
830	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null  ||  hasEFS)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null  ||  hasEFS)  {  return  null;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
831	[BUG]  [BUGGY]  if(current  ==  null)  {  return  this;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  return  this;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  return  this;  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
832	[BUG]  [BUGGY]  if(current  ==  null)  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null)  {  return  new  ZipArchiveEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  return  new  ZipArchiveEntry();  }	  if(current    ==    null)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	150	None	replace
833	[BUG]  [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
834	[BUG]  [BUGGY]  try  {  current.initZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.initZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.initZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    current.getZipEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
835	[BUG]  [BUGGY]  try  {  zipEncoding  =  ZipEncoding.encode(current);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding  =  ZipEncoding.encode(current);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  ZipEncoding.encode(current);  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding    =    ZipEncoding.getInstance();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	143	None	replace
836	[BUG]  [BUGGY]  try  {  current.setZipEncoding(zipEncoding);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEncoding(zipEncoding);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEncoding(zipEncoding);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    current.getZip();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
837	[BUG]  [BUGGY]  try  {  initZipDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
838	[BUG]  [BUGGY]  try  {  this.initZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.initZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.initZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
839	[BUG]  [BUGGY]  try  {  initZipFileEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipFileEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipFileEntry();  }  catch(IOException  e)  {  return  null;	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
840	[BUG]  [BUGGY]  current  =  getNextZipArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current  =  getNextZipArchiveEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  getNextZipArchiveEntry();	  current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	109	None	replace
841	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  this);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
842	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  this.entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  this.entryEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current,  this.entryEncoding);	  ZipEncoding    current    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	121	None	replace
843	[BUG]  [BUGGY]  try  {  getDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
844	[BUG]  [BUGGY]  try  {  this.currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
845	[BUG]  [BUGGY]  try  {  startDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  startDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  startDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	145	None	replace
846	[BUG]  [BUGGY]  cearcă  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  cearcă  {  getNextZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	cearcă  {  getNextZipEntry();  }	  if(current    ==    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
847	[BUG]  [BUGGY]  aughtExceptionHandler.handleZipEntry(inputStream,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleZipEntry(inputStream,  LFH_LEN);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.handleZipEntry(inputStream,  LFH_LEN);	  if(current    ==    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
848	[BUG]  [BUGGY]  aughtExceptionHandler.handleZipEntry(inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleZipEntry(inputStream);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.handleZipEntry(inputStream);	  if(current    ==    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
849	[BUG]  [BUGGY]  cearcă  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  cearcă  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	cearcă  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
850	[BUG]  [BUGGY]  cearcă  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  cearcă  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	cearcă  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
851	[BUG]  [BUGGY]  cearcă  {  closeEntry();  }  catch(Exception  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  cearcă  {  closeEntry();  }  catch(Exception  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	cearcă  {  closeEntry();  }  catch(Exception  ioe)  {  return  null;  }	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
852	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  openDirectory);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  openDirectory);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  openDirectory);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
853	[BUG]  [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
854	[BUG]  [BUGGY]  try  {  getNextInflater();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextInflater();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextInflater();  }  catch(IOException  e)  {  return  null;  }	  try    {    getNextEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
855	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  currentEntry.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  currentEntry.getInstance();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  currentEntry.getInstance();	  ZipEncoding    entryEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
856	[BUG]  [BUGGY]  this.current.setZipEntry(getNextArchiveEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(getNextArchiveEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(getNextArchiveEntry());	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
857	[BUG]  [BUGGY]  this.current.addZipEntry(getNextZipEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.addZipEntry(getNextZipEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.addZipEntry(getNextZipEntry());	  this.current.setZipEntry(getNextZipEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
858	[BUG]  [BUGGY]  try  {  current.initZipEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.initZipEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.initZipEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    current.closeEntry();    }    catch(EOFException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
859	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current,  inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getInstance(current,  inflater);	  zipEncoding    =    ZipEncoding.getInstance(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	137	None	replace
860	[BUG]  [BUGGY]  try  {  getDirectory();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getDirectory();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getDirectory();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
861	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getFileDirectory(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getFileDirectory(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getFileDirectory(current);	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
862	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCurrentSegment();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCurrentSegment();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCurrentSegment();	  exitZipDirectory();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
863	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipArchiveEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipArchiveEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipArchiveEntry(current);	  openZipArchiveEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
864	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding();	  openZipArchiveEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
865	[BUG]  [BUGGY]  try  {  getNextFileEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextFileEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextFileEntry();  }  catch(IOException  e)  {  return  null;	  try    {    getNextZipEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
866	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.getNextEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getNextEntry();	  zipEncoding    =    ZipEncoding.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
867	[BUG]  [BUGGY]  try  {  zipEncoding.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	113	None	replace
868	[BUG]  [BUGGY]  try  {  zipEncoding.encode(current);  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.encode(current);  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.encode(current);  }  catch(IOException  ioe)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	113	None	replace
869	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS)  {  exitZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null  ||  hasEFS)  {  exitZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null  ||  hasEFS)  {  exitZipEntry();  }	  if(current    ==    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
870	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  exitZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  exitZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null  ||  hasDataDescriptor)  {  exitZipEntry();  }	  if(current    ==    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
871	[BUG]  [BUGGY]  cearcă  {  exitZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  cearcă  {  exitZipEntry();  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	cearcă  {  exitZipEntry();  }	  if(current    ==    null)    {    exitZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
872	[BUG]  [BUGGY]  try  {  getDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    closeDirectory();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
873	[BUG]  [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
874	[BUG]  [BUGGY]  try  {  initZipArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipArchiveEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
875	[BUG]  [BUGGY]  try  {  initZipDirectory();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipDirectory();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipDirectory();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
876	[BUG]  [BUGGY]  try  {  this.initZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.initZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.initZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
877	[BUG]  [BUGGY]  try  {  initZipFileEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipFileEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipFileEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
878	[BUG]  [BUGGY]  try  {  getZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    initZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
879	[BUG]  [BUGGY]  try  {  initZipLong();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  initZipLong();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipLong();  }  catch(IOException  e)  {  return  null;	  try    {    initEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
880	[BUG]  [BUGGY]  aughtExceptionHandler(current,  getNextZipEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler(current,  getNextZipEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler(current,  getNextZipEntry());	  if(current!=    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
881	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsZipException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsZipException( " ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwAsZipException( " ");	  if(current!=    null)    {    getNextZipEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
882	[BUG]  [BUGGY]  ZipEncoding  current  =  this.zipEncoding.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  this.zipEncoding.getInstance();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  this.zipEncoding.getInstance();	  ZipEncoding    current    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
883	[BUG]  [BUGGY]  try  {  readBytesOfEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  readBytesOfEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  readBytesOfEntry();  }  catch(IOException  ioe)  {  return  null;  }	  readBytesOfEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	140	None	replace
884	[BUG]  [BUGGY]  exitZipEntry(current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipEntry(current,  null);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipEntry(current,  null);	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
885	[BUG]  [BUGGY]  exitZipEntry(current,  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  exitZipEntry(current,  inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipEntry(current,  inflater);	  exitZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
886	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.extraLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.extraLen);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.extraLen);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    fileNameLen);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
887	[BUG]  [BUGGY]  zipEncoding  =  currentEntry.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  currentEntry.getInstance();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  currentEntry.getInstance();	  zipEncoding    =    current.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
888	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsZipError( "Current  entry  not  found: "  +  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsZipError( "Current  entry  not  found: "  +  LFH_LEN);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwAsZipError( "Current  entry  not  found: "  +  LFH_LEN);	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
889	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsZipError( "Current  entry  not  found: "  +  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsZipError( "Current  entry  not  found: "  +  source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwAsZipError( "Current  entry  not  found: "  +  source);	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
890	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsZipError( "Current  entry  has  been  deprecated. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsZipError( "Current  entry  has  been  deprecated. ");  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwAsZipError( "Current  entry  has  been  deprecated. ");	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
891	[BUG]  [BUGGY]  byte[]  buf  =  current.getBase64();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  byte[]  buf  =  current.getBase64();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getBase64();	  byte[]    buf    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	110	None	replace
892	[BUG]  [BUGGY]  byte[]  buf  =  current.getInfo();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  byte[]  buf  =  current.getInfo();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getInfo();	  byte[]    buf    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	110	None	replace
893	[BUG]  [BUGGY]  cearcă  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  cearcă  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	cearcă  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
894	[BUG]  [BUGGY]  if(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
895	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null  ||  hasDataDescriptor)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
896	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  if(current  ==  null  ||  hasEFS)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null  ||  hasEFS)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  if(current    ==    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
897	[BUG]  [BUGGY]  openZipZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipZipEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipZipEntry();	  openZipFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
898	[BUG]  [BUGGY]  openZipDirectoryEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipDirectoryEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipDirectoryEntry();	  openZipFileEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
899	[BUG]  [BUGGY]  try  {  this.inflater.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.inflater.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.inflater.closeEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	112	None	replace
900	[BUG]  [BUGGY]  try  {  this.initZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.initZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.initZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	112	None	replace
901	[BUG]  [BUGGY]  openZipEntry(current,  null,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(current,  null,  LFH_LEN);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  null,  LFH_LEN);	  openZipEntry(current,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
902	[BUG]  [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
903	[BUG]  [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
904	[BUG]  [BUGGY]  fileNameLen  -=  current.getFileNameLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  fileNameLen  -=  current.getFileNameLen();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen  -=  current.getFileNameLen();	  fileNameLen    =    current.getFileNameLen();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
905	[BUG]  [BUGGY]  try  {  getDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	147	None	replace
906	[BUG]  [BUGGY]  try  {  this.currentDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.currentDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.currentDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    currentDirectory();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	147	None	replace
907	[BUG]  [BUGGY]  zipEncoding  =  currentEntry.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  currentEntry.getZipEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  currentEntry.getZipEncoding();	  zipEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
908	[BUG]  [BUGGY]  zipEncoding  =  current.getZipLong();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipLong();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipLong();	  zipEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
909	[BUG]  [BUGGY]  try  {  zipEncoding.encode(current);  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.encode(current);  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.encode(current);  }  catch(IOException  e)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
910	[BUG]  [BUGGY]  try  {  zipEncoding.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.getNextZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
911	[BUG]  [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
912	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  getNextEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
913	[BUG]  [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
914	[BUG]  [BUGGY]  try  {  inflater.releaseEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  inflater.releaseEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  inflater.releaseEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    inflater.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	141	None	replace
915	[BUG]  [BUGGY]  try  {  inflater.releaseEntry(current);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  inflater.releaseEntry(current);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  inflater.releaseEntry(current);  }  catch(IOException  e)  {  return  null;  }	  try    {    inflater.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	141	None	replace
916	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current,  inflater);	  zipEncoding    =    ZipEncodingUtilities.getNextZipEntry(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
917	[BUG]  [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current.getZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
918	[BUG]  [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  try    {    rehashEntry();    }    catch(IOException    ioe)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
919	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.inputStream);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this.inputStream);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    this);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
920	[BUG]  [BUGGY]  while(current!=  null  &&  current.length  >  0)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null  &&  current.length  >  0)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null  &&  current.length  >  0)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
921	[BUG]  [BUGGY]  while(current!=  null  &&  hasDataDescriptor)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null  &&  hasDataDescriptor)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null  &&  hasDataDescriptor)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
922	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsZipFailedError( "Current  entry  not  found: "  +  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsZipFailedError( "Current  entry  not  found: "  +  source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	aughtExceptionHandler.throwAsZipFailedError( "Current  entry  not  found: "  +  source);	  if(current    ==    null)    {    getNextZipEntry();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
923	[BUG]  [BUGGY]  current.setZipEntry(new  ZipArchiveEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  current.setZipEntry(new  ZipArchiveEntry());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(new  ZipArchiveEntry());	  current.setZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
924	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(inflater,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(inflater,  current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(inflater,  current);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	128	None	replace
925	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inflater,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inflater,  LFH_LEN);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inflater,  LFH_LEN);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current,    inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	128	None	replace
926	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFileLenient();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFileLenient();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFileLenient();	  int    LFH_LEN    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	151	None	replace
927	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFileLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  int  LFH_LEN  =  current.getFileLen();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFileLen();	  int    LFH_LEN    =    current.getFileName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	151	None	replace
928	[BUG]  [BUGGY]  zipEncoding  =  getEntryEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  getEntryEncoding();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getEntryEncoding();	  zipEncoding    =    getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
929	[BUG]  [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  return  current.getZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    rehashEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
930	[BUG]  [BUGGY]  this.current.setNextZipEntry(inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setNextZipEntry(inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setNextZipEntry(inflater);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
931	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  currentEntry.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  currentEntry.getEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  currentEntry.getEntry();	  ZipEncoding    entryEncoding    =    ZipEncoding.getEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	138	None	replace
932	[BUG]  [BUGGY]  this.current.setZipEntry(zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(zipEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(zipEncoding);	  this.current.setZipEntry(entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	125	None	replace
933	[BUG]  [BUGGY]  this.current.setZipEntry(this.zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(this.zipEncoding);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(this.zipEncoding);	  this.current.setZipEntry(entryEncoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	125	None	replace
934	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  inflater);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current,    close);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	124	None	replace
935	[BUG]  [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current  =  ZipArchiveEntry.getNextZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeArchiveEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	132	None	replace
936	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  true);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  true);	  ZipEncoding    current    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	139	None	replace
937	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  this);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  this);	  ZipEncoding    current    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	139	None	replace
938	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  source);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current,  source);	  ZipEncoding    current    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	139	None	replace
939	[BUG]  [BUGGY]  try  {  zipEncoding.encode(current);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.encode(current);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.encode(current);  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	142	None	replace
940	[BUG]  [BUGGY]  try  {  zipEncoding.closeZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.closeZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	142	None	replace
941	[BUG]  [BUGGY]  try  {  zipEncoding.delete(source);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.delete(source);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.delete(source);  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	142	None	replace
942	[BUG]  [BUGGY]  try  {  zipEncoding.enable(ZipArchiveEntry.USE_UNIcodeExtraFields);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.enable(ZipArchiveEntry.USE_UNIcodeExtraFields);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.enable(ZipArchiveEntry.USE_UNIcodeExtraFields);  }  catch(IOException  e)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	142	None	replace
943	[BUG]  [BUGGY]  this.current.setZipEntry(null,  null,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(null,  null,  LFH_LEN);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(null,  null,  LFH_LEN);	  this.current.setZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
944	[BUG]  [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(null,  null));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(null,  null));  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(new  ZipArchiveEntry(null,  null));	  this.current.setZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
945	[BUG]  [BUGGY]  try  {  zipEncoding.encode(current);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.encode(current);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.encode(current);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	144	None	replace
946	[BUG]  [BUGGY]  try  {  zipEncoding.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    zipEncoding.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	144	None	replace
947	[BUG]  [BUGGY]  while(current!=  null  &&  current.length  >  0)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(current!=  null  &&  current.length  >  0)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null  &&  current.length  >  0)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
948	[BUG]  [BUGGY]  while(ioe!=  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  while(ioe!=  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(ioe!=  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  while(current!=    null)    {    try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
949	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getURL());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getURL());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current.getURL());	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
950	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getName());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current.getName());	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
951	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getChars());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getChars());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current.getChars());	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
952	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getPath());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getPath());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current.getPath());	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
953	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getPrettyPrinter());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncoding.encode(current.getPrettyPrinter());  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current.getPrettyPrinter());	  zipEncoding    =    ZipEncoding.encode(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	136	None	replace
954	[BUG]  [BUGGY]  zipEncoding  =  current.getZipLongEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  current.getZipLongEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipLongEntry();	  zipEncoding    =    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
955	[BUG]  [BUGGY]  try  {  current.setZipEntry(entryEncoding);  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(entryEncoding);  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(entryEncoding);  }  catch(IOException  e)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
956	[BUG]  [BUGGY]  try  {  current.setZipEntry(new  ZipArchiveEntry());  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  current.setZipEntry(new  ZipArchiveEntry());  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.setZipEntry(new  ZipArchiveEntry());  }  catch(IOException  e)  {  return  null;  }	  try    {    current.getZipEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
957	[BUG]  [BUGGY]  ZipEncoding  currentEncoding  =  ZipEncodingUtilities.getCrcEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  currentEncoding  =  ZipEncodingUtilities.getCrcEncoding(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  currentEncoding  =  ZipEncodingUtilities.getCrcEncoding(current);	  ZipEncoding    entryEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
958	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  Inflater  inflater  =  getInflater();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inflater  =  getInflater();	  inflater.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
959	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  LFH_LEN);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current,  LFH_LEN);	  zipEncoding    =    ZipEncodingUtils.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	134	None	replace
960	[BUG]  [BUGGY]  openZipEntry(new  File(current,  null));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  openZipEntry(new  File(current,  null));  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(new  File(current,  null));	  openZipEntry(null,    null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
961	[BUG]  [BUGGY]  try  {  this.inflater.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.inflater.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.inflater.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
962	[BUG]  [BUGGY]  try  {  this.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
963	[BUG]  [BUGGY]  try  {  this.initZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.initZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.initZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    this.closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
964	[BUG]  [BUGGY]  try  {  closeEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
965	[BUG]  [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
966	[BUG]  [BUGGY]  try  {  closeDirectory();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  closeDirectory();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeDirectory();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
967	[BUG]  [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  ioe)  {  throw  ioe;  }	  try    {    close();    }    catch(IOException    ioe)    {    throw    ioe;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	117	None	replace
968	[BUG]  [BUGGY]  try  {  inflater.close();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  inflater.close();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  inflater.close();  }  catch(IOException  e)  {  return  null;	  try    {    close();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	118	None	replace
969	[BUG]  [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;	  try    {    close();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	118	None	replace
970	[BUG]  [BUGGY]  this.current.setZipEntry(inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(inputStream);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(inputStream);	  this.current.setZipEntry(inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
971	[BUG]  [BUGGY]  this.current.addZipEntry(inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.addZipEntry(inflater);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.addZipEntry(inflater);	  this.current.setZipEntry(inflater);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
972	[BUG]  [BUGGY]  this.inflater.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.inflater.closeEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.inflater.closeEntry();	  inflater.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
973	[BUG]  [BUGGY]  inflater.releaseEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  inflater.releaseEntry(current);  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	inflater.releaseEntry(current);	  inflater.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
974	[BUG]  [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry(1));  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(new  ZipArchiveEntry(1));	  this.current.setZipEntry(new    ZipArchiveEntry());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	127	None	replace
975	[BUG]  [BUGGY]  try  {  fileNameLen++;  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  fileNameLen++;  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  fileNameLen++;  }  catch(IOException  ioe)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
976	[BUG]  [BUGGY]  try  {  fileNameLen(inflater);  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  fileNameLen(inflater);  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  fileNameLen(inflater);  }  catch(IOException  ioe)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
977	[BUG]  [BUGGY]  try  {  fileNameLen();  }  catch(Exception  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  fileNameLen();  }  catch(Exception  e)  {  return  null;  }  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  fileNameLen();  }  catch(Exception  e)  {  return  null;  }	  try    {    fileNameLen();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
978	[BUG]  [BUGGY]  return  current.getZipFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  current.getZipFileEntry();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getZipFileEntry();	  return    current.getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	149	None	replace
979	[BUG]  [BUGGY]  startNewZip();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  startNewZip();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	startNewZip();	  exitZipFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
980	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipLong();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipLong();  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getZipLong();	  ZipEncoding    entryEncoding    =    current.getZipEncoding();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
981	[BUG]  [BUGGY]  try  {  this.readFully(current);  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  try  {  this.readFully(current);  }  catch(IOException  e)  {  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.readFully(current);  }  catch(IOException  e)  {  return  null;	  try    {    this.closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	133	None	replace
982	[BUG]  [BUGGY]  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {      [BUGGY]  return  null;  [BUGGY]      }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  null;	  rehashCode();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
