bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  try  {  current.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
2	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
3	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
4	[BUG]  [BUGGY]  try  {  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
5	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  while(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
6	[BUG]  [BUGGY]  try  {  current.getZip();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.getZip();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZip();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
7	[BUG]  [BUGGY]  openZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  openZipEntry(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current);	  openZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
8	[BUG]  [BUGGY]  openZipEntry(null,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  openZipEntry(null,  current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(null,  current);	  openZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
9	[BUG]  [BUGGY]  openZipEntry(current,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  openZipEntry(current,  null);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(current,  null);	  openZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
10	[BUG]  [BUGGY]  openZipEntry(null,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  openZipEntry(null,  null);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(null,  null);	  openZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
11	[BUG]  [BUGGY]  openZipEntry(null,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  openZipEntry(null,  -1);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipEntry(null,  -1);	  openZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
12	[BUG]  [BUGGY]  current.setZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  current.setZipEntry(null);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current.setZipEntry(null);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
13	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  int  LFH_LEN  =  current.getLength();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getLength();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
14	[BUG]  [BUGGY]  Inflater  inf  =  current.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  Inflater  inf  =  current.getInflater();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	Inflater  inf  =  current.getInflater();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
15	[BUG]  [BUGGY]  return  current.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  return  current.getNextZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getNextZipEntry();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
16	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFullSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  int  LFH_LEN  =  current.getFullSize();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFullSize();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
17	[BUG]  [BUGGY]  fileNameLen  =  current.getFileNameLen();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  fileNameLen  =  current.getFileNameLen();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	fileNameLen  =  current.getFileNameLen();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
18	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFullLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  int  LFH_LEN  =  current.getFullLength();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFullLength();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
19	[BUG]  [BUGGY]  inflater.close();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  inflater.close();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	inflater.close();	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
20	[BUG]  [BUGGY]  this.current.close();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.close();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.close();	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
21	[BUG]  [BUGGY]  rehashCode();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  rehashCode();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	rehashCode();	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
22	[BUG]  [BUGGY]  closed  =  true;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  closed  =  true;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	closed  =  true;	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
23	[BUG]  [BUGGY]  inflater.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  inflater.closeEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	inflater.closeEntry();	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
24	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  0);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
25	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  open);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
26	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  true);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  true);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
27	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  entryEncoding);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  entryEncoding);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
28	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  fileNameLen);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  fileNameLen);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
29	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  this);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
30	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getZipEncoding(current);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
31	[BUG]  [BUGGY]  if(current  ==  null)  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  getNextZipEntry();  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  getNextZipEntry();  }	  getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
32	[BUG]  [BUGGY]  if(current!=  null)  {  getNextZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current!=  null)  {  getNextZipEntry();  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  getNextZipEntry();  }	  getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
33	[BUG]  [BUGGY]  if(current  ==  null)  {  getNextZipEntry();  }  else  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  getNextZipEntry();  }  else  {  return  current;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  getNextZipEntry();  }  else  {  return  current;  }	  getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
34	[BUG]  [BUGGY]  if(current  ==  null)  {  getNextZipEntry();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  getNextZipEntry();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  getNextZipEntry();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
35	[BUG]  [BUGGY]  if(current  ==  null)  {  getNextZipEntry();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  getNextZipEntry();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  getNextZipEntry();  }  else  {  throw  new  IllegalStateException( " ");  }	  getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
36	[BUG]  [BUGGY]  this.current.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.getNextZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.getNextZipEntry();	  getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
37	[BUG]  [BUGGY]  if(current  ==  null)  {  exitZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  exitZipEntry();  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  exitZipEntry();  }	  exitZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
38	[BUG]  [BUGGY]  if(current!=  null)  {  exitZipEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current!=  null)  {  exitZipEntry();  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current!=  null)  {  exitZipEntry();  }	  exitZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
39	[BUG]  [BUGGY]  if(current  ==  null)  {  exitZipEntry();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  exitZipEntry();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  exitZipEntry();  }  else  {  throw  new  IllegalStateException( " ");  }	  exitZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
40	[BUG]  [BUGGY]  if(current  ==  null)  {  exitZipEntry();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  exitZipEntry();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  exitZipEntry();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  exitZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
41	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getNextZipEntry(current);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
42	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  entryEncoding);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  entryEncoding);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
43	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  0);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
44	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncodingUtilities.getCrcEncoding(current);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
45	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  open);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
46	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  this);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
47	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  rehashEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(IOException  e)  {  return  null;  }	  rehashEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
48	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalStateException( " ");  }	  rehashEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
49	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalStateException( " ");  }	  rehashEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
50	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  }	  rehashEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
51	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  rehashEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
52	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  rehashEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
53	[BUG]  [BUGGY]  try  {  current.closeEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.closeEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
54	[BUG]  [BUGGY]  if(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
55	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
56	[BUG]  [BUGGY]  try  {  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
57	[BUG]  [BUGGY]  try  {  current.closeZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.closeZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
58	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
59	[BUG]  [BUGGY]  try  {  current.closeEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.closeEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
60	[BUG]  [BUGGY]  zipEncoding  =  current.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  current.getZipEncoding();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipEncoding();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
61	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getInstance();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncoding.getInstance();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
62	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  ZipEncoding  entryEncoding  =  current.getZipEncoding();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  current.getZipEncoding();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
63	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncoding.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  ZipEncoding  current  =  ZipEncoding.getInstance();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncoding.getInstance();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
64	[BUG]  [BUGGY]  zipEncoding  =  current.getInstance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  current.getInstance();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getInstance();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
65	[BUG]  [BUGGY]  zipEncoding  =  current.getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  current.getZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  current.getZipEntry();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
66	[BUG]  [BUGGY]  try  {  current.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
67	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
68	[BUG]  [BUGGY]  try  {  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
69	[BUG]  [BUGGY]  try  {  current.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getNextZipEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
70	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
71	[BUG]  [BUGGY]  this.current.setZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.setZipEntry(null);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(null);	  this.current.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
72	[BUG]  [BUGGY]  this.current.closeZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.closeZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.closeZipEntry();	  this.current.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
73	[BUG]  [BUGGY]  this.current.setZipEntry(getNextZipEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.setZipEntry(getNextZipEntry());  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(getNextZipEntry());	  this.current.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
74	[BUG]  [BUGGY]  this.current.setZipEntry(inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.setZipEntry(inflater);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(inflater);	  this.current.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
75	[BUG]  [BUGGY]  this.current.setZipEntry(null,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.setZipEntry(null,  null);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(null,  null);	  this.current.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
76	[BUG]  [BUGGY]  closeZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  closeZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	closeZipEntry();	  openZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
77	[BUG]  [BUGGY]  zipEncoding  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  getNextZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getNextZipEntry();	  openZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
78	[BUG]  [BUGGY]  openFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  openFileEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openFileEntry();	  openZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
79	[BUG]  [BUGGY]  try  {  current.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
80	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
81	[BUG]  [BUGGY]  try  {  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  current.getZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
82	[BUG]  [BUGGY]  while(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  while(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	while(current!=  null)  {  try  {  closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
83	[BUG]  [BUGGY]  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
84	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(IOException  ioe)  {  return  null;	  rehashEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
85	[BUG]  [BUGGY]  try  {  rehashEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  rehashEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  rehashEntry();  }  catch(IOException  e)  {  return  null;	  rehashEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
86	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtil.getZipEncoding(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtil.getZipEncoding(current);	  openZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
87	[BUG]  [BUGGY]  try  {  closeDirectory();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  closeDirectory();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeDirectory();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
88	[BUG]  [BUGGY]  try  {  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  getNextZipEntry();  }  catch(EOFException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
89	[BUG]  [BUGGY]  try  {  initZipEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  initZipEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
90	[BUG]  [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
91	[BUG]  [BUGGY]  try  {  initEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  initEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
92	[BUG]  [BUGGY]  exitZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  exitZipEntry(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipEntry(current);	  exitZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
93	[BUG]  [BUGGY]  exitZipDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  exitZipDirectory();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipDirectory();	  exitZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
94	[BUG]  [BUGGY]  startNewZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  startNewZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	startNewZipEntry();	  exitZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
95	[BUG]  [BUGGY]  exitZipFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  exitZipFile();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	exitZipFile();	  exitZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
96	[BUG]  [BUGGY]  openZipDirectory();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  openZipDirectory();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipDirectory();	  openZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
97	[BUG]  [BUGGY]  openZipArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  openZipArchiveEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipArchiveEntry();	  openZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
98	[BUG]  [BUGGY]  zipEncoding  =  getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  getZipEncoding();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  getZipEncoding();	  openZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
99	[BUG]  [BUGGY]  openZipFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  openZipFileEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	openZipFileEntry();	  openZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
100	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncoding.getNextZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getNextZipEntry();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
101	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncoding.getZipEncoding();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getZipEncoding();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
102	[BUG]  [BUGGY]  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  getNextZipEntry(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	getNextZipEntry(current);	  getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
103	[BUG]  [BUGGY]  try  {  closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
104	[BUG]  [BUGGY]  try  {  this.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  this.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
105	[BUG]  [BUGGY]  try  {  fileNameLen();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  fileNameLen();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  fileNameLen();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
106	[BUG]  [BUGGY]  try  {  closeDirectory();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  closeDirectory();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeDirectory();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
107	[BUG]  [BUGGY]  try  {  initZipEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  initZipEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initZipEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
108	[BUG]  [BUGGY]  try  {  initEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  initEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  initEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
109	[BUG]  [BUGGY]  current  =  getNextZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  current  =  getNextZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	current  =  getNextZipEntry();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
110	[BUG]  [BUGGY]  byte[]  buf  =  current.getFileName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  byte[]  buf  =  current.getFileName();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	byte[]  buf  =  current.getFileName();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
111	[BUG]  [BUGGY]  try  {  closeDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  closeDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
112	[BUG]  [BUGGY]  try  {  this.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  this.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
113	[BUG]  [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
114	[BUG]  [BUGGY]  try  {  close();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  close();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  close();  }  catch(IOException  e)  {  return  null;  }	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
115	[BUG]  [BUGGY]  try  {  close();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  close();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  close();  }  catch(IOException  ioe)  {  return  null;  }	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
116	[BUG]  [BUGGY]  try  {  close();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  close();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  close();  }  catch(IOException  ioe)  {  return  null;	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
117	[BUG]  [BUGGY]  try  {  close();  }  catch(IOException  ioe)  {  throw  ioe;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  close();  }  catch(IOException  ioe)  {  throw  ioe;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  close();  }  catch(IOException  ioe)  {  throw  ioe;  }	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
118	[BUG]  [BUGGY]  try  {  close();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  close();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  close();  }  catch(IOException  e)  {  return  null;	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
119	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  closed);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  closed);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  closed);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
120	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  close);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  close);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  close);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
121	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getZipEncoding(current);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
122	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  closed);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  closed);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  closed);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
123	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  true);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  true);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
124	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  close);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  close);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getCrcEncoding(current,  close);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
125	[BUG]  [BUGGY]  this.current.setZipEntry(entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.setZipEntry(entryEncoding);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(entryEncoding);	  this.current.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
126	[BUG]  [BUGGY]  this.current.initZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.initZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.initZipEntry();	  this.current.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
127	[BUG]  [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.setZipEntry(new  ZipArchiveEntry());  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.setZipEntry(new  ZipArchiveEntry());	  this.current.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
128	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inflater);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtilities.getZipEncoding(current,  inflater);	  zipEncoding    =    ZipEncodingUtilities.getZipEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
129	[BUG]  [BUGGY]  this.current.getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  this.current.getZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	this.current.getZipEntry();	  this.current.closeEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
130	[BUG]  [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  }	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
131	[BUG]  [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  }	  close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
132	[BUG]  [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeArchiveEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
133	[BUG]  [BUGGY]  try  {  this.closeEntry();  }  catch(IOException  e)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  this.closeEntry();  }  catch(IOException  e)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  this.closeEntry();  }  catch(IOException  e)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
134	[BUG]  [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncodingUtils.getZipEncoding(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncodingUtils.getZipEncoding(current);	  openZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
135	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.current();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncoding.current();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.current();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
136	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.encode(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncoding.encode(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.encode(current);	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
137	[BUG]  [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  zipEncoding  =  ZipEncoding.getInstance(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	zipEncoding  =  ZipEncoding.getInstance(current);	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
138	[BUG]  [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  ZipEncoding  entryEncoding  =  ZipEncoding.getEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  entryEncoding  =  ZipEncoding.getEntry();	  zipEncoding    =    ZipEncoding.getInstance();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
139	[BUG]  [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current);  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	ZipEncoding  current  =  ZipEncodingUtilities.getCrcEncoding(current);	  zipEncoding    =    ZipEncodingUtilities.getCrcEncoding(current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
140	[BUG]  [BUGGY]  readBytesOfEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  readBytesOfEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	readBytesOfEntry();	  getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
141	[BUG]  [BUGGY]  try  {  inflater.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  inflater.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  inflater.closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
142	[BUG]  [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeEntry();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
143	[BUG]  [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding  =  ZipEncoding.getInstance();  }  catch(IOException  e)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    e)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
144	[BUG]  [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  zipEncoding.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  zipEncoding.closeEntry();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
145	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  }	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
146	[BUG]  [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  closeArchiveEntry();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
147	[BUG]  [BUGGY]  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	try  {  currentDirectory();  }  catch(IOException  ioe)  {  return  null;	  try    {    closeEntry();    }    catch(IOException    ioe)    {    return    null;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
148	[BUG]  [BUGGY]  int  LFH_LEN  =  current.readFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  int  LFH_LEN  =  current.readFully();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.readFully();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
149	[BUG]  [BUGGY]  return  current.getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  return  current.getZipEntry();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	return  current.getZipEntry();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
150	[BUG]  [BUGGY]  if(current  ==  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  if(current  ==  null)  {  return  null;  }  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	if(current  ==  null)  {  return  null;  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
151	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFileName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  int  LFH_LEN  =  current.getFileName();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFileName();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
152	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFH_LEN();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {  if  (closed  ||  hitCentralDirectory)  {  return  null;  }  if  (current  !=  null)  {    [BUGGY]  int  LFH_LEN  =  current.getFH_LEN();  [BUGGY]    }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	112	112	1	replace	int  LFH_LEN  =  current.getFH_LEN();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
