bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
2	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
3	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
4	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
5	[BUG]  [BUGGY]  if(current  ||  hasEFS  ||  hasDataDescriptor  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ||  hasEFS  ||  hasDataDescriptor  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ||  hasEFS  ||  hasDataDescriptor  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
6	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  &&  current  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
7	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  hasEFS  ||  current  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
8	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  ||  current!=  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
9	[BUG]  [BUGGY]  if(current  ||  hasDataDescriptor  ||  hasEFS  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ||  hasDataDescriptor  ||  hasEFS  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ||  hasDataDescriptor  ||  hasEFS  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
10	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  this;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  this;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  this;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
11	[BUG]  [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  this;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  this;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  this;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
12	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  null;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
13	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  null;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
14	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current  ==  null)  {  return  this;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current  ==  null)  {  return  this;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getZipEntry();  if(current  ==  null)  {  return  this;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
15	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  current;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  if(current  ==  null)  {  return  current;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
16	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current!=  null)  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current!=  null)  {  return  current;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getZipEntry();  if(current!=  null)  {  return  current;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
17	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false);  if(current!=  null)  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false);  if(current!=  null)  {  return  current;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(false);  if(current!=  null)  {  return  current;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
18	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current  ==  null)  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getZipEntry();  if(current  ==  null)  {  return  current;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getZipEntry();  if(current  ==  null)  {  return  current;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
19	[BUG]  [BUGGY]  if(isDirectory()  ||  hasDataDescriptor  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isDirectory()  ||  hasDataDescriptor  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isDirectory()  ||  hasDataDescriptor  ||  isDirectory())  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
20	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDirectory())  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
21	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  isDirectory())  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
22	[BUG]  [BUGGY]  if(current  ==  null  ||  hasFullDataDescriptor  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasFullDataDescriptor  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasFullDataDescriptor  ||  isDirectory())  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
23	[BUG]  [BUGGY]  if(isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
24	[BUG]  [BUGGY]  if(isDirectory()  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isDirectory()  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isDirectory()  ||  hasDataDescriptor)  {	  if(isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
25	[BUG]  [BUGGY]  if(isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
26	[BUG]  [BUGGY]  if(!isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isDirectory())  {	  if(isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
27	[BUG]  [BUGGY]  if(isDirectory()  ||  isVersion())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isDirectory()  ||  isVersion())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isDirectory()  ||  isVersion())  {	  if(isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
28	[BUG]  [BUGGY]  if(isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if(isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
29	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {	  if(current!=    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
30	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  this))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  this))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  this))  {	  if(current!=    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
31	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  false))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  false))  {	  if(current!=    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
32	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  source))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  source))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE,  source))  {	  if(current!=    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
33	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current!=    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
34	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)&&  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)&&  hasDataDescriptor)  {	  if(current!=    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
35	[BUG]  [BUGGY]  if(current  ==  null  ||  closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
36	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
37	[BUG]  [BUGGY]  if(current  ==  null  ||  hasdataDescriptor  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasdataDescriptor  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasdataDescriptor  ||  hasEFS)  {	  if(current    ==    null    ||    closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
38	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
39	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
40	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
41	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
42	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
43	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  hasEFS)  {	  if(!hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
44	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
45	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  hasEFS  ||  current!=  null)  {	  if(!hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
46	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
47	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
48	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  getInputStream();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  getInputStream();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
49	[BUG]  [BUGGY]  Inflater  inf  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  getNextFileEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  getNextFileEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
50	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  getNextZipEntry(current);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  getNextZipEntry(current);	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
51	[BUG]  [BUGGY]  Inflater  inf  =  getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  getNextEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  getNextEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
52	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  getNextZipEntry(null);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  getNextZipEntry(null);	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
53	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  getNextZipEntry(true);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  getNextZipEntry(true);	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
54	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
55	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
56	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
57	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
58	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
59	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
60	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
61	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
62	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  +  1))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  +  1))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  +  1))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
63	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
64	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
65	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
66	[BUG]  [BUGGY]  if  (isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if  (isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if  (isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
67	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
68	[BUG]  [BUGGY]  if(current  ||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ||  closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ||  closed)  {	  if(closed    ||    current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
69	[BUG]  [BUGGY]  if(!closed  ||  current)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  current)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  current)  {	  if(closed    ||    current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
70	[BUG]  [BUGGY]  if(this.closed  ||  current)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  current)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  current)  {	  if(closed    ||    current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
71	[BUG]  [BUGGY]  if(current  ||  close)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ||  close)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ||  close)  {	  if(closed    ||    current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
72	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  isDirectory())  {	  if(hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
73	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isDirectory())  {	  if(hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
74	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isDirectory()  ||  hasEFS)  {	  if(hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
75	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isDirectory()  ||  current  ==  null)  {	  if(hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
76	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getCurrentZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getCurrentZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getCurrentZipEntry();	  ZipArchiveEntry    current    =    getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
77	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  this.getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  this.getZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  this.getZipEntry();	  ZipArchiveEntry    current    =    getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
78	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getZipEntry(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getZipEntry(0);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getZipEntry(0);	  ZipArchiveEntry    current    =    getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
79	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getZipEntry(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getZipEntry(false);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getZipEntry(false);	  ZipArchiveEntry    current    =    getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
80	[BUG]  [BUGGY]  if(!closed  &&  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  current  ==  null)  {	  if(!closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
81	[BUG]  [BUGGY]  if(!closed  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  current!=  null)  {	  if(!closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
82	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FILES_NEW))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FILES_NEW))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FILES_NEW))  {	  if(!closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
83	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
84	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
85	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
86	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
87	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
88	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE)||  current  ==  null)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
89	[BUG]  [BUGGY]  ZipArchiveEntry  current  =(ZipArchiveEntry)getCurrentEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =(ZipArchiveEntry)getCurrentEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =(ZipArchiveEntry)getCurrentEntry();	  ZipArchiveEntry    current    =    getCurrentEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
90	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  this.getCurrentEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  this.getCurrentEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  this.getCurrentEntry();	  ZipArchiveEntry    current    =    getCurrentEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
91	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
92	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
93	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILE))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
94	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
95	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasDataDescriptor)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
96	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasEFS)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
97	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FILES))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
98	[BUG]  [BUGGY]  if(isDirectory()  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isDirectory()  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isDirectory()  ||  current  ==  null)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
99	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closed  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closed  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  closed  ==  null)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
100	[BUG]  [BUGGY]  if(this.closed  ||  isDirectory()  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isDirectory()  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isDirectory()  ||  current  ==  null)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
101	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closeEntry()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closeEntry()  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  closeEntry()  ==  null)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
102	[BUG]  [BUGGY]  if(!closed  ||  isDirectory()  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isDirectory()  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isDirectory()  ||  current  ==  null)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
103	[BUG]  [BUGGY]  if(closed  ||  isDirectory()  &&  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isDirectory()  &&  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isDirectory()  &&  current  ==  null)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
104	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(hasDataDescriptor    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
105	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(hasDataDescriptor    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
106	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {	  if(hasDataDescriptor    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
107	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(hasDataDescriptor    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
108	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {	  if(hasDataDescriptor    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
109	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
110	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
111	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
112	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
113	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
114	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(getNextZipEntry()  ==  null  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(getNextZipEntry()  ==  null  ||  isDirectory())  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
115	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.SHORT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.SHORT))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
116	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.SHORT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.SHORT))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
117	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.SHORT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.SHORT))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
118	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.SHORT)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.SHORT)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.SHORT)||  current  ==  null)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
119	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SHORT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SHORT))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
120	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(current))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(current))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(current))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
121	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  hitCentralDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  hitCentralDirectory)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  hitCentralDirectory)  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
122	[BUG]  [BUGGY]  if(current  ==  null  ||  hasExtraFields  ||  hitCentralDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasExtraFields  ||  hitCentralDirectory)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasExtraFields  ||  hitCentralDirectory)  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
123	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEFS)  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
124	[BUG]  [BUGGY]  if(current  ==  null  ||  hasFullDataDescriptor  ||  hitCentralDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasFullDataDescriptor  ||  hitCentralDirectory)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasFullDataDescriptor  ||  hitCentralDirectory)  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
125	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDirectory  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDirectory  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDirectory  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
126	[BUG]  [BUGGY]  if(!closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isDirectory()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
127	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isDirectory())  {	  if(closed    ||    isDirectory()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
128	[BUG]  [BUGGY]  if(this.closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isDirectory()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
129	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ||  isDirectory())  {	  if(closed    ||    isDirectory()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
130	[BUG]  [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(closed    ||    isDirectory()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
131	[BUG]  [BUGGY]  if(this.closed  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  hasDataDescriptor)  {	  if(this.closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
132	[BUG]  [BUGGY]  if(current  ==  null  ||  this.closed  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  this.closed  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  this.closed  ||  hasEFS)  {	  if(this.closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
133	[BUG]  [BUGGY]  if(!this.closed  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!this.closed  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!this.closed  ||  hasEFS)  {	  if(this.closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
134	[BUG]  [BUGGY]  if(current!=  null  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null  ||  hasEFS)  {	  if(this.closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
135	[BUG]  [BUGGY]  if(hasEFS  ||  this.closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasEFS  ||  this.closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasEFS  ||  this.closed)  {	  if(this.closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
136	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
137	[BUG]  [BUGGY]  if(!this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
138	[BUG]  [BUGGY]  if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
139	[BUG]  [BUGGY]  if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
140	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(closed    ||    hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
141	[BUG]  [BUGGY]  if(!closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(closed    ||    hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
142	[BUG]  [BUGGY]  if(current  ==  null  ||  closed  ||  hasDataDescriptor  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  closed  ||  hasDataDescriptor  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  closed  ||  hasDataDescriptor  ||  current!=  null)  {	  if(closed    ||    hasDataDescriptor    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
143	[BUG]  [BUGGY]  if(this.closed  ||  hasDataDescriptor  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  hasDataDescriptor  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  hasDataDescriptor  ||  current!=  null)  {	  if(closed    ||    hasDataDescriptor    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
144	[BUG]  [BUGGY]  if(closed  ||  isDirectory()  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isDirectory()  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isDirectory()  ||  current!=  null)  {	  if(closed    ||    hasDataDescriptor    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
145	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  closed  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  closed  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  closed  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    closed    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
146	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  closed)  {	  if(current    ==    null    ||    closed    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
147	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(current    ==    null    ||    closed    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
148	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closed  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closed  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  closed  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    closed    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
149	[BUG]  [BUGGY]  if(!open  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!open  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!open  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(open    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
150	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(open    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
151	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
152	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
153	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
154	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
155	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
156	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
157	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
158	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
159	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
160	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
161	[BUG]  [BUGGY]  if  (!closed  ||  hasEFS  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if  (!closed  ||  hasEFS  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if  (!closed  ||  hasEFS  ||  current  ==  null)  {	  if    (closed    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
162	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
163	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
164	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
165	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
166	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
167	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
168	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  isEnabled(ZipArchiveEntry.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  isEnabled(ZipArchiveEntry.FOR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  isEnabled(ZipArchiveEntry.FOR))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
169	[BUG]  [BUGGY]  Inflater  inflater  =  getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getNextEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getNextEntry();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
170	[BUG]  [BUGGY]  Inflater  inflater  =  getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getZipEntry();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
171	[BUG]  [BUGGY]  Inflater  inflater  =  getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getOutputFile();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getOutputFile();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
172	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(source);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getInflater(source);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getInflater(source);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
173	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
174	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
175	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
176	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
177	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
178	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
179	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
180	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasDataDescriptor)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
181	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
182	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
183	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  hasEFS)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
184	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  current  ==  null)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
185	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  current  ==  null)  {	  if(!hasDataDescriptor    &&    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
186	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  current!=  null)  {	  if(!hasDataDescriptor    &&    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
187	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  hitCentralDirectory)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  hitCentralDirectory)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  hitCentralDirectory)  {	  if(!hasDataDescriptor    &&    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
188	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!hasDataDescriptor    &&    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
189	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  hasEFS)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
190	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
191	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
192	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELDS)||  hasDataDescriptor)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
193	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
194	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
195	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  current  ==  null)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
196	[BUG]  [BUGGY]  if(!this.closed  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!this.closed  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!this.closed  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(this.closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
197	[BUG]  [BUGGY]  if(this.closed  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {	  if(this.closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
198	[BUG]  [BUGGY]  if(!closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed)  {	  if(!closed    &&!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
199	[BUG]  [BUGGY]  if(current  ==  null  ||!closed  &&!current)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||!closed  &&!current)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||!closed  &&!current)  {	  if(!closed    &&!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
200	[BUG]  [BUGGY]  if(!closed  &&!current.isEnabled())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&!current.isEnabled())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&!current.isEnabled())  {	  if(!closed    &&!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
201	[BUG]  [BUGGY]  if(current!=  null  ||!closed  &&!current)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null  ||!closed  &&!current)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null  ||!closed  &&!current)  {	  if(!closed    &&!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
202	[BUG]  [BUGGY]  if(current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null)  {	  if(!closed    &&!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
203	[BUG]  [BUGGY]  if(closed  ||!current  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||!current  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||!current  ||  current  ==  null)  {	  if    (!closed    ||!current    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
204	[BUG]  [BUGGY]  if(!closed  ||  current.isEnabled())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  current.isEnabled())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  current.isEnabled())  {	  if    (!closed    ||!current.isEnabled())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
205	[BUG]  [BUGGY]  if(closed  ||!current.isEnabled())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||!current.isEnabled())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||!current.isEnabled())  {	  if    (!closed    ||!current.isEnabled())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
206	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(!closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
207	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
208	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {	  if(!closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
209	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
210	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_PASSED_ZIP_ENTRY))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.AUTO_PASSED_ZIP_ENTRY))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.AUTO_PASSED_ZIP_ENTRY))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
211	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
212	[BUG]  [BUGGY]  if(current  ==  null  ||  closed  ||  hasDataDescriptor  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  closed  ||  hasDataDescriptor  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  closed  ||  hasDataDescriptor  ||  current  ==  null)  {	  if(closed    ||    hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
213	[BUG]  [BUGGY]  if(this.closed  ||  hasDataDescriptor  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  hasDataDescriptor  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  hasDataDescriptor  ||  current  ==  null)  {	  if(closed    ||    hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
214	[BUG]  [BUGGY]  if(current  ==  null  ||  closed  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  closed  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  closed  ||  current  ==  null)  {	  if(closed    ||    hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
215	[BUG]  [BUGGY]  if(open  ||  hasDataDescriptor  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(open  ||  hasDataDescriptor  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(open  ||  hasDataDescriptor  ||  current  ==  null)  {	  if(closed    ||    hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
216	[BUG]  [BUGGY]  if(!closed  &&  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isDirectory())  {	  if(!closed    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
217	[BUG]  [BUGGY]  if(!closed  ||  isDirectory()  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isDirectory()  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isDirectory()  ||  hasDataDescriptor)  {	  if(!closed    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
218	[BUG]  [BUGGY]  if(!closed  ||  isDirectory()  &&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isDirectory()  &&  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isDirectory()  &&  hasDataDescriptor)  {	  if(!closed    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
219	[BUG]  [BUGGY]  if(!closed  ||  isDirectory()  &&  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isDirectory()  &&  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isDirectory()  &&  current!=  null)  {	  if(!closed    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
220	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
221	[BUG]  [BUGGY]  if(open  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(open  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(open  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
222	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.FOR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.FOR))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
223	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.FOR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.FOR))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
224	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR)||  current  ==  null)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
225	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.FOR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.FOR))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
226	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR,  current))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR,  current))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR,  current))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
227	[BUG]  [BUGGY]  if(closed  ||!current  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||!current  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||!current  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(closed    ||!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
228	[BUG]  [BUGGY]  if(closed  ||!current  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||!current  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||!current  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(closed    ||!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
229	[BUG]  [BUGGY]  if(closed  ||!current  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||!current  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||!current  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(closed    ||!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
230	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
231	[BUG]  [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
232	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
233	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
234	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
235	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ==  null)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
236	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
237	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  current!=  null)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
238	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isDirectory())  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
239	[BUG]  [BUGGY]  if(!closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
240	[BUG]  [BUGGY]  if(isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
241	[BUG]  [BUGGY]  if(current!=  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
242	[BUG]  [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
243	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isDirectory()  ||  isEnabled(ZipArchiveEntry.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isDirectory()  ||  isEnabled(ZipArchiveEntry.SHORT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isDirectory()  ||  isEnabled(ZipArchiveEntry.SHORT))  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
244	[BUG]  [BUGGY]  Inflater  current  =  getNextZipEntry(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNextZipEntry(false);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNextZipEntry(false);	  Inflater    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
245	[BUG]  [BUGGY]  Inflater  current  =  getNextZipEntry(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNextZipEntry(true);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNextZipEntry(true);	  Inflater    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
246	[BUG]  [BUGGY]  Inflater  current  =  getCurrentZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getCurrentZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getCurrentZipEntry();	  Inflater    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
247	[BUG]  [BUGGY]  Inflater  current  =  getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNextZipEntry(null);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNextZipEntry(null);	  Inflater    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
248	[BUG]  [BUGGY]  Inflater  current  =  getPreviousZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getPreviousZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getPreviousZipEntry();	  Inflater    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
249	[BUG]  [BUGGY]  Inflater  current  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNextFileEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNextFileEntry();	  Inflater    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
250	[BUG]  [BUGGY]  this.current.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.closeEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.closeEntry();	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
251	[BUG]  [BUGGY]  this.current.setNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.setNextZipEntry(null);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.setNextZipEntry(null);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
252	[BUG]  [BUGGY]  this.current.setZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.setZipEntry(null);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.setZipEntry(null);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
253	[BUG]  [BUGGY]  this.current.closeZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.closeZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.closeZipEntry();	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
254	[BUG]  [BUGGY]  this.current.setNextEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.setNextEntry(null);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.setNextEntry(null);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
255	[BUG]  [BUGGY]  this.current.getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.getNextZipEntry(null);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.getNextZipEntry(null);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
256	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
257	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
258	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
259	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
260	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
261	[BUG]  [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
262	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
263	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {	  if(!closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
264	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE,  source))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE,  source))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE,  source))  {	  if(!closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
265	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE)&&  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE)&&  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE)&&  current!=  null)  {	  if(!closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
266	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
267	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
268	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
269	[BUG]  [BUGGY]  if(!closed  &&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  hasDataDescriptor)  {	  if    (!closed    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
270	[BUG]  [BUGGY]  if  (!closed  ||  hasDataDescriptor  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if  (!closed  ||  hasDataDescriptor  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if  (!closed  ||  hasDataDescriptor  ||  current  ==  null)  {	  if    (!closed    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
271	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
272	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {	  if(current    ==    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
273	[BUG]  [BUGGY]  if  (this.closed  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if  (this.closed  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if  (this.closed  ||  current  ==  null)  {	  if    (closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
274	[BUG]  [BUGGY]  if  (this.closed  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if  (this.closed  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if  (this.closed  ||  current!=  null)  {	  if    (closed    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
275	[BUG]  [BUGGY]  Inflater  current  =  getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNextEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNextEntry();	  Inflater    current    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
276	[BUG]  [BUGGY]  Inflater  current  =  getNext();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNext();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNext();	  Inflater    current    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
277	[BUG]  [BUGGY]  Inflater  current  =  getNextInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNextInflater();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNextInflater();	  Inflater    current    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
278	[BUG]  [BUGGY]  Inflater  current  =  getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getEntry();	  Inflater    current    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
279	[BUG]  [BUGGY]  Inflater  current  =  this.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  this.getInflater();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  this.getInflater();	  Inflater    current    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
280	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLength()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  int  LFH_LEN  =  current.getLength()  +  1;  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	int  LFH_LEN  =  current.getLength()  +  1;	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
281	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLength()  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  int  LFH_LEN  =  current.getLength()  *  2;  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	int  LFH_LEN  =  current.getLength()  *  2;	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
282	[BUG]  [BUGGY]  int  LFH_LEN  =  this.current.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  int  LFH_LEN  =  this.current.getLength();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	int  LFH_LEN  =  this.current.getLength();	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
283	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFullLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  int  LFH_LEN  =  current.getFullLength();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	int  LFH_LEN  =  current.getFullLength();	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
284	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getLength()  *  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  int  LFH_LEN  =  current.getLength()  *  4;  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	int  LFH_LEN  =  current.getLength()  *  4;	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
285	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(true);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(true);	  ZipArchiveEntry    current    =    getNextZipEntry(false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
286	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(0);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(0);	  ZipArchiveEntry    current    =    getNextZipEntry(false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
287	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false,  0);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(false,  0);	  ZipArchiveEntry    current    =    getNextZipEntry(false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
288	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false,  true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false,  true);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(false,  true);	  ZipArchiveEntry    current    =    getNextZipEntry(false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
289	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false,  false);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(false,  false);	  ZipArchiveEntry    current    =    getNextZipEntry(false);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
290	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
291	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
292	[BUG]  [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasEFS)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
293	[BUG]  [BUGGY]  if(hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
294	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
295	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
296	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.FIELD_NAME)||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.FIELD_NAME)||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.FIELD_NAME)||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
297	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
298	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
299	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  hasEFS)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
300	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)&&  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
301	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
302	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
303	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getNextZipEntry(false);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getNextZipEntry(false);	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
304	[BUG]  [BUGGY]  Inflater  inflater  =  getNextInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getNextInflater();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getNextInflater();	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
305	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getNextZipEntry(true);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getNextZipEntry(true);	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
306	[BUG]  [BUGGY]  Inflater  inflater  =  getPreviousZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getPreviousZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getPreviousZipEntry();	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
307	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getNextZipEntry(current);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getNextZipEntry(current);	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
308	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
309	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELDS)||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
310	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS)||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELDS)||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELDS)||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
311	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
312	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  hasEFS  &&  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
313	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS)||  current  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
314	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
315	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
316	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK)||  current  ==  null)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
317	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
318	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
319	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK,  true))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK,  true))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
320	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
321	[BUG]  [BUGGY]  if(current!=  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  }	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
322	[BUG]  [BUGGY]  ||  current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ||  current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	||  current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  }	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
323	[BUG]  [BUGGY]  Entry  <  ZipArchiveEntry>  current  =  getNextZipEntry();  current.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Entry  <  ZipArchiveEntry>  current  =  getNextZipEntry();  current.closeEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Entry  <  ZipArchiveEntry>  current  =  getNextZipEntry();  current.closeEntry();	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
324	[BUG]  [BUGGY]  zipArchiveEntry  =  getNextZipEntry();  current.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  zipArchiveEntry  =  getNextZipEntry();  current.closeEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	zipArchiveEntry  =  getNextZipEntry();  current.closeEntry();	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
325	[BUG]  [BUGGY]  if(closed  ||  isDirectory()  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isDirectory()  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isDirectory()  ||  hasEFS)  {	  if(closed    ||    isDirectory()    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
326	[BUG]  [BUGGY]  if(isDirectory()  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isDirectory()  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isDirectory()  ||  hasEFS)  {	  if(closed    ||    isDirectory()    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
327	[BUG]  [BUGGY]  if(this.closed  ||  isDirectory()  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isDirectory()  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isDirectory()  ||  hasDataDescriptor)  {	  if(closed    ||    isDirectory()    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
328	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE,  current))  {	  if(!closed    &&    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
329	[BUG]  [BUGGY]  if(!openZipEntry()  &&  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!openZipEntry()  &&  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!openZipEntry()  &&  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(!closed    &&    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
330	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE_DEFAULT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE_DEFAULT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE_DEFAULT))  {	  if(!closed    &&    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
331	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {	  if(!closed    &&    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
332	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasEFS)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
333	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
334	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
335	[BUG]  [BUGGY]  if  (!closed  &&  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if  (!closed  &&  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if  (!closed  &&  hasEFS)  {	  if    (!closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
336	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK_SIZE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
337	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK_SIZE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
338	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE  +  1))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE  +  1))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE  +  1))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK_SIZE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
339	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK_SIZE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
340	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE)||  current  ==  null)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK_SIZE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
341	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(SipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(SipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(SipArchiveEntry.BLOCK_SIZE))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK_SIZE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
342	[BUG]  [BUGGY]  if(!open  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!open  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!open  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
343	[BUG]  [BUGGY]  Inflater  inf  =  current.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getEntry();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
344	[BUG]  [BUGGY]  Inflater  inf  =  currentEntry.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  currentEntry.getInputStream();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  currentEntry.getInputStream();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
345	[BUG]  [BUGGY]  Inflater  inf  =  this.current.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  this.current.getInputStream();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  this.current.getInputStream();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
346	[BUG]  [BUGGY]  Inflater  inf  =  current.getOutputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getOutputStream();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getOutputStream();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
347	[BUG]  [BUGGY]  Inflater  inf  =  current.getFileInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getFileInputStream();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getFileInputStream();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
348	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getInputStream(true);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getInputStream(true);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
349	[BUG]  [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
350	[BUG]  [BUGGY]  if(!this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
351	[BUG]  [BUGGY]  if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
352	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
353	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getOpenZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getOpenZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getOpenZipEntry();	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
354	[BUG]  [BUGGY]  Inflater  inf  =  this.current.getInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  this.current.getInputFile();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  this.current.getInputFile();	  Inflater    inf    =    current.getInputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
355	[BUG]  [BUGGY]  Inflater  inf  =  current.getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getOutputFile();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getOutputFile();	  Inflater    inf    =    current.getInputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
356	[BUG]  [BUGGY]  Inflater  inf  =  current.getFileInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getFileInput();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getFileInput();	  Inflater    inf    =    current.getInputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
357	[BUG]  [BUGGY]  Inflater  inf  =  current.getEntryFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getEntryFile();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getEntryFile();	  Inflater    inf    =    current.getInputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
358	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)&&  current  ==  null)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
359	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)&&  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)&&  current!=  null)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
360	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  current!=  null)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
361	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  current  ==  null)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
362	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
363	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
364	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
365	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
366	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null,  null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null,  null);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(null,  null);	  ZipArchiveEntry    current    =    getNextZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
367	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null,  0);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(null,  0);	  ZipArchiveEntry    current    =    getNextZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
368	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null,  -1);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(null,  -1);	  ZipArchiveEntry    current    =    getNextZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
369	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null,  false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null,  false);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(null,  false);	  ZipArchiveEntry    current    =    getNextZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
370	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(this);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(this);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(this);	  ZipArchiveEntry    current    =    getNextZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
371	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.NULL  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.NULL  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.NULL  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
372	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.DEFAULT  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.DEFAULT  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.DEFAULT  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
373	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
374	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SECOND))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SECOND))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SECOND))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
375	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
376	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
377	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.DEFAULT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.DEFAULT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.DEFAULT))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
378	[BUG]  [BUGGY]  this.current.getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.getNextEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.getNextEntry();	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
379	[BUG]  [BUGGY]  this.current.setNextZipEntry(this.fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.setNextZipEntry(this.fileNameLen);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.setNextZipEntry(this.fileNameLen);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
380	[BUG]  [BUGGY]  if(open  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(open  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(open  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(open    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
381	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE_DEFAULT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE_DEFAULT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE_DEFAULT))  {	  if(current    ==    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
382	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {	  if(current    ==    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
383	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE_FIRST))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE_FIRST))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE_FIRST))  {	  if(current    ==    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
384	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(source))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(source))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(source))  {	  if(current    ==    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
385	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
386	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  current!=  null)  {	  if(!closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
387	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  current!=  null)  {	  if(!closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
388	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {	  if(!closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
389	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  current!=  null)  {	  if(!closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
390	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  this;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  this;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  this;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
391	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(source);  if(current!=  null)  {  return  this;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(source);  if(current!=  null)  {  return  this;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(source);  if(current!=  null)  {  return  this;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
392	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  this;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  this;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  this;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
393	[BUG]  [BUGGY]  if  (!closed  ||!current.isEnabled(SourceEncoding.UTF8))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if  (!closed  ||!current.isEnabled(SourceEncoding.UTF8))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if  (!closed  ||!current.isEnabled(SourceEncoding.UTF8))  {	  if    (!closed    ||!current.isEnabled())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
394	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  current  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
395	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  current  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
396	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  &&  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  &&  current!=  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
397	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEFS  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEFS  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEFS  ||  current  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
398	[BUG]  [BUGGY]  if(current  ==  null)  {  zipArchiveEntry  =  getNextZipEntry();  current.closeEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null)  {  zipArchiveEntry  =  getNextZipEntry();  current.closeEntry();  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null)  {  zipArchiveEntry  =  getNextZipEntry();  current.closeEntry();  }	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
399	[BUG]  [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  new  ZipArchiveEntry();  current.closeEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  new  ZipArchiveEntry();  current.closeEntry();  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null)  {  ZipArchiveEntry  current  =  new  ZipArchiveEntry();  current.closeEntry();  }	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
400	[BUG]  [BUGGY]  File  current  =  getNextZipEntry();  current.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  File  current  =  getNextZipEntry();  current.closeEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	File  current  =  getNextZipEntry();  current.closeEntry();	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
401	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
402	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  hasDataDescriptor)  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
403	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_EXTENDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_EXTENDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_EXTENDS))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
404	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor())  {	  if(current!=    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
405	[BUG]  [BUGGY]  if(this.current  ==  null  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.current  ==  null  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.current  ==  null  ||  isDirectory())  {	  if(current!=    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
406	[BUG]  [BUGGY]  if(current  ==  null  ||  containsDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  containsDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  containsDirectory())  {	  if(current!=    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
407	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
408	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK)||  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
409	[BUG]  [BUGGY]  Inflater  current  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNextArchiveEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNextArchiveEntry();	  Inflater    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
410	[BUG]  [BUGGY]  Inflater  current  =  getNextZipEntry().getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNextZipEntry().getValue();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNextZipEntry().getValue();	  Inflater    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
411	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  closed)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
412	[BUG]  [BUGGY]  if(open  ||  isDirectory()  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(open  ||  isDirectory()  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(open  ||  isDirectory()  ||  current  ==  null)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
413	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
414	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NON_NUMBERS))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
415	[BUG]  [BUGGY]  if(getNextZipEntry()!=  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(getNextZipEntry()!=  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(getNextZipEntry()!=  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current!=    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
416	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(getNextZipEntry()  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(getNextZipEntry()  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current!=    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
417	[BUG]  [BUGGY]  if(this.current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current!=    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
418	[BUG]  [BUGGY]  if  (!closed  ||  hasEFS  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if  (!closed  ||  hasEFS  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if  (!closed  ||  hasEFS  ||  current!=  null)  {	  if    (!closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
419	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor  ||  hasEFS)  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
420	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
421	[BUG]  [BUGGY]  if(!closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
422	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(SipArchiveEntry.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(SipArchiveEntry.SHORT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(SipArchiveEntry.SHORT))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
423	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
424	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.FOR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.FOR))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
425	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  closeDataDescriptor  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  closeDataDescriptor  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  closeDataDescriptor  ==  null)  {	  if(closed    ||    hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
426	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  closed  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  closed  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  closed  ==  null)  {	  if(closed    ||    hasDataDescriptor    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
427	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileDescriptor)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
428	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  hasFileDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  hasFileDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  hasFileDescriptor)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
429	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  current  ==  null)  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
430	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(ZipEncoding.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(ZipEncoding.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(ZipEncoding.QUOTE_FIELD_NAME))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
431	[BUG]  [BUGGY]  if(open  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(open  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(open  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(closed    ||    hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
432	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_DEFAULT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_DEFAULT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_DEFAULT))  {	  if(!closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
433	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {	  if(!closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
434	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {	  if(!closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
435	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&!current)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&!current)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&!current)  {	  if(!closed    &&!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
436	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
437	[BUG]  [BUGGY]  if(open  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(open  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(open  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
438	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SECTION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SECTION))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SECTION))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
439	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
440	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.INSTANCE,  false))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.INSTANCE,  false))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.INSTANCE,  false))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
441	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.INSTANCE,  this.fileName))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.INSTANCE,  this.fileName))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.INSTANCE,  this.fileName))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
442	[BUG]  [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  current;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null)  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  current;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
443	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(source);  if(current!=  null)  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(source);  if(current!=  null)  {  return  current;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(source);  if(current!=  null)  {  return  current;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
444	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  current;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(null);  if(current!=  null)  {  return  current;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
445	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry().getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry().getValue();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry().getValue();	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
446	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextFileEntry();	  ZipArchiveEntry    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
447	[BUG]  [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  getNextArchiveEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
448	[BUG]  [BUGGY]  Inflater  inf  =  getPreviousZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  getPreviousZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  getPreviousZipEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
449	[BUG]  [BUGGY]  Inflater  inf  =  getNextInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  getNextInputFile();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  getNextInputFile();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
450	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
451	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileDescriptor)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
452	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNumberOfLinks();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNumberOfLinks();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNumberOfLinks();	  ZipArchiveEntry    current    =    getCurrentEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
453	[BUG]  [BUGGY]  Inflater  inf  =  current.getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getZipEntry();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
454	[BUG]  [BUGGY]  Inflater  inf  =  current.getFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getFile();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getFile();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
455	[BUG]  [BUGGY]  if(hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
456	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
457	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasDataDescriptor)  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
458	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {	  if(!closed    &&    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
459	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
460	[BUG]  [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
461	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
462	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
463	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
464	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE)&&  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE)&&  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_FILE)&&  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
465	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
466	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getInflater(current);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getInflater(current);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
467	[BUG]  [BUGGY]  Inflater  inflater  =  getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getInputStream();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getInputStream();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
468	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
469	[BUG]  [BUGGY]  if(current  ==  null  ||  hasFileDescriptor  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasFileDescriptor  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasFileDescriptor  ||  hasEFS)  {	  if(current    ==    null    ||    closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
470	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
471	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isDirectory()  ||  closed)  {	  if(closed    ||    isDirectory()    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
472	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputFile().getCharset();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getInputFile().getCharset();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getInputFile().getCharset();	  Inflater    inf    =    current.getInputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
473	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputFile().getParent();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  current.getInputFile().getParent();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  current.getInputFile().getParent();	  Inflater    inf    =    current.getInputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
474	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getZipEntry(null);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getZipEntry(null);	  ZipArchiveEntry    current    =    getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
475	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  createZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  createZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  createZipEntry();	  ZipArchiveEntry    current    =    getZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
476	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
477	[BUG]  [BUGGY]  if(open  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(open  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(open  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
478	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getHeaderLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  int  LFH_LEN  =  current.getHeaderLength();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	int  LFH_LEN  =  current.getHeaderLength();	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
479	[BUG]  [BUGGY]  int  LFH_LEN  =  current.getFileLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  int  LFH_LEN  =  current.getFileLength();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	int  LFH_LEN  =  current.getFileLength();	  int    LFH_LEN    =    current.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
480	[BUG]  [BUGGY]  if(this.entryEnabled  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.entryEnabled  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.entryEnabled  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(this.closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
481	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(this.closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
482	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
483	[BUG]  [BUGGY]  if(hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
484	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
485	[BUG]  [BUGGY]  if(this.closed  ||!current)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||!current)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||!current)  {	  if(closed    ||!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
486	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
487	[BUG]  [BUGGY]  if(!closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
488	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  closed)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
489	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  closeDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  closeDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  closeDataDescriptor)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
490	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isDirectoryExterns())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isDirectoryExterns())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isDirectoryExterns())  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
491	[BUG]  [BUGGY]  if(current  ==  null  ||  hasExtraFields  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasExtraFields  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasExtraFields  ||  isDirectory())  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
492	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
493	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE)&&  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
494	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.BLOCK_SIZE))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK_SIZE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
495	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK_SIZE)||  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK_SIZE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
496	[BUG]  [BUGGY]  Inflater  inflater  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getNextArchiveEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getNextArchiveEntry();	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
497	[BUG]  [BUGGY]  Inflater  inflater  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getNextFileEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getNextFileEntry();	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
498	[BUG]  [BUGGY]  Inflater  inflater  =  getNextZipEntry(null);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getNextZipEntry(null);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getNextZipEntry(null);	  Inflater    inflater    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
499	[BUG]  [BUGGY]  Inflater  current  =  getNextFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getNextFile();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getNextFile();	  Inflater    current    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
500	[BUG]  [BUGGY]  if  (!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if  (!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if  (!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current!=  null)  {	  if    (!closed    ||!current    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
501	[BUG]  [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
502	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isDirectory()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
503	[BUG]  [BUGGY]  if(open  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(open  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(open  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isDirectory()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
504	[BUG]  [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(closed    ||    isDirectory()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
505	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
506	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(!closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
507	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(SourceEncoding.UTF8))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(SourceEncoding.UTF8))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isEnabled(SourceEncoding.UTF8))  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hitCentralDirectory)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
508	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
509	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(entryEncoding  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
510	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closeOffset  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  closeOffset  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  closeOffset  ==  null)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
511	[BUG]  [BUGGY]  if(closed  ||  hasDataDescriptor()  ||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  hasDataDescriptor()  ||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  hasDataDescriptor()  ||  current  ==  null)  {	  if(closed    ||    isDirectory()    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
512	[BUG]  [BUGGY]  if(this.closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
513	[BUG]  [BUGGY]  if(closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
514	[BUG]  [BUGGY]  if(closed  ||  current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if    (closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
515	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(inputStream);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(inputStream);	  ZipArchiveEntry    current    =    getNextZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
516	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(in);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(in);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(in);	  ZipArchiveEntry    current    =    getNextZipEntry(null);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
517	[BUG]  [BUGGY]  if(this.closed  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {	  if(this.closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
518	[BUG]  [BUGGY]  if(inputStream  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(inputStream  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(inputStream  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(open    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
519	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE,  true))  {	  if(hasDataDescriptor    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
520	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileExtraFields)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasFileExtraFields)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
521	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  current;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  current;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextFileEntry();  if(current!=  null)  {  return  current;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    current;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
522	[BUG]  [BUGGY]  if(!closed  ||  isDirectory()  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isDirectory()  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isDirectory()  ||  current!=  null)  {	  if    (!closed    ||!current    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
523	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FILES_NEW)||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FILES_NEW)||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FILES_NEW)||  current!=  null)  {	  if    (!closed    ||!current    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
524	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SHORT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SHORT))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
525	[BUG]  [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.DEFAULT_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.DEFAULT_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.DEFAULT_SIZE))  {	  if(current    ==    ZipArchiveEntry.INSTANCE    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
526	[BUG]  [BUGGY]  if(this.closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
527	[BUG]  [BUGGY]  if(open  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(open  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(open  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
528	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
529	[BUG]  [BUGGY]  if(closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
530	[BUG]  [BUGGY]  if(closed  ||  this.current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  this.current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  this.current!=  null)  {	  if    (closed    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
531	[BUG]  [BUGGY]  this.current.setNextZipEntry(inflater);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.setNextZipEntry(inflater);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.setNextZipEntry(inflater);	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
532	[BUG]  [BUGGY]  this.current.setNextZipEntry(new  ZipArchiveEntry());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  this.current.setNextZipEntry(new  ZipArchiveEntry());  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	this.current.setNextZipEntry(new  ZipArchiveEntry());	  this.current.getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
533	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    closed    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
534	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closed  ||  hasDataDescriptor)  {	  if(current    ==    null    ||    closed    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
535	[BUG]  [BUGGY]  if(!closed  &&!current.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  &&!current.isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  &&!current.isDirectory())  {	  if(!closed    &&!current)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
536	[BUG]  [BUGGY]  if(!closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {	  if(!closed    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
537	[BUG]  [BUGGY]  if(current  ==  getNextZipEntry())  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  this;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  getNextZipEntry())  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  this;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  getNextZipEntry())  {  ZipArchiveEntry  current  =  getNextZipEntry();  if(current!=  null)  {  return  this;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
538	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false);  if(current!=  null)  {  return  this;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getNextZipEntry(false);  if(current!=  null)  {  return  this;  }  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getNextZipEntry(false);  if(current!=  null)  {  return  this;  }	  ZipArchiveEntry    current    =    getNextZipEntry();    if(current!=    null)    {    return    this;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
539	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
540	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
541	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasEFS  &&  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasEFS  &&  isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.BLOCK))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
542	[BUG]  [BUGGY]  Inflater  current  =  getCurrentEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getCurrentEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getCurrentEntry();	  Inflater    current    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
543	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_PASSED)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_PASSED)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_PASSED)||  current  ==  null)  {	  if    (!closed    ||!current    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
544	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAME))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
545	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.NONE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.NONE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.NONE))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
546	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
547	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(current    ==    null    ||    hasDataDescriptor    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
548	[BUG]  [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
549	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  isEnabled(ZipArchiveEntry.FOR)||  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
550	[BUG]  [BUGGY]  if(!closed  ||  hasDataDescriptor  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  hasDataDescriptor  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  hasDataDescriptor  ||  current!=  null)  {	  if    (!closed    ||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
551	[BUG]  [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
552	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current.getName().endsWith( "/ "))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current.getName().endsWith( "/ "))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current.getName().endsWith( "/ "))  {	  if(current    ==    null    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
553	[BUG]  [BUGGY]  if(current  ==  null  ||!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
554	[BUG]  [BUGGY]  if(!openDirectory  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!openDirectory  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!openDirectory  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
555	[BUG]  [BUGGY]  if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(this.closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
556	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null  ||  hasDataDescriptor)  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
557	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE_ERROR))  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
558	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.DEFAULT_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.DEFAULT_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.DEFAULT_SIZE))  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
559	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.SOURCENAME_ERROR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.SOURCENAME_ERROR))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.SOURCENAME_ERROR))  {	  if(current    ==    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
560	[BUG]  [BUGGY]  Inflater  current  =  getZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  current  =  getZipEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  current  =  getZipEntry();	  Inflater    current    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
561	[BUG]  [BUGGY]  if(this.getNextZipEntry()!=  null  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.getNextZipEntry()!=  null  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.getNextZipEntry()!=  null  ||  isDirectory())  {	  if(current!=    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
562	[BUG]  [BUGGY]  if(getNextZipEntry()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(getNextZipEntry()!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(getNextZipEntry()!=  null)  {	  if(current!=    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
563	[BUG]  [BUGGY]  if(this.getNextZipEntry()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.getNextZipEntry()!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.getNextZipEntry()!=  null)  {	  if(current!=    null    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
564	[BUG]  [BUGGY]  final  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  final  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	final  ZipArchiveEntry  current  =  getNextZipEntry();  current.closeEntry();	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
565	[BUG]  [BUGGY]  ZipArchiveEntry  <  K,  V>  current  =  getNextZipEntry();  current.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  <  K,  V>  current  =  getNextZipEntry();  current.closeEntry();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  <  K,  V>  current  =  getNextZipEntry();  current.closeEntry();	  if(current    ==    null)    {    ZipArchiveEntry    current    =    getNextZipEntry();    current.closeEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
566	[BUG]  [BUGGY]  if(current  ==  null  ||  hasEFS  ||  current.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasEFS  ||  current.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasEFS  ||  current.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
567	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  hasFileExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  hasFileExtraFields)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELDS)||  hasFileExtraFields)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELDS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
568	[BUG]  [BUGGY]  if(current  ==  null  ||!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||!closed  &&  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(!closed    &&    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
569	[BUG]  [BUGGY]  if(!closed()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(!closed    &&    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
570	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closeEntry())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closeEntry())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closeEntry())  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
571	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getCurrentEntry().getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getCurrentEntry().getValue();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getCurrentEntry().getValue();	  ZipArchiveEntry    current    =    getCurrentEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
572	[BUG]  [BUGGY]  ZipArchiveEntry  current  =  getCurrentEntry(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  ZipArchiveEntry  current  =  getCurrentEntry(0);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	ZipArchiveEntry  current  =  getCurrentEntry(0);	  ZipArchiveEntry    current    =    getCurrentEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
573	[BUG]  [BUGGY]  if(!closed  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
574	[BUG]  [BUGGY]  if(!closed  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if    (!closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
575	[BUG]  [BUGGY]  if(current  ==  null  ||!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||!closed  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
576	[BUG]  [BUGGY]  if(!openDirectory  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!openDirectory  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!openDirectory  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!closed    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
577	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
578	[BUG]  [BUGGY]  if(this.closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
579	[BUG]  [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  current  ==  null)  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
580	[BUG]  [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE)||  hasDataDescriptor)  {	  if(closed    ||    isDirectory()    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
581	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  ||  isDirectory())  {	  if(hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
582	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_FILE)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||    isEnabled(Feature.QUOTE_FIELD_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
583	[BUG]  [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
584	[BUG]  [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  current  ==  null  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(!closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
585	[BUG]  [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(!closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
586	[BUG]  [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(!closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
587	[BUG]  [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  current  ==  null  ||  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {	  if(!closed    ||    current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
588	[BUG]  [BUGGY]  if(!hasEFS  ||  this.closed)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasEFS  ||  this.closed)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasEFS  ||  this.closed)  {	  if(this.closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
589	[BUG]  [BUGGY]  if(this.closed  ||  hasEFS  ||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(this.closed  ||  hasEFS  ||  hasDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(this.closed  ||  hasEFS  ||  hasDataDescriptor)  {	  if(this.closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
590	[BUG]  [BUGGY]  if(getNextZipEntry()  ==  null  ||  hasDataDescriptor  ||  isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(getNextZipEntry()  ==  null  ||  hasDataDescriptor  ||  isDirectory())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(getNextZipEntry()  ==  null  ||  hasDataDescriptor  ||  isDirectory())  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
591	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isDirectory()  ||  isEnabled(ZipArchiveEntry.INSTANCE))  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
592	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isDirectoryEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
593	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  isDirectory()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    hasDataDescriptor    ||    isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
594	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.DEFAULT_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(ZipArchiveEntry.DEFAULT_SIZE))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(ZipArchiveEntry.DEFAULT_SIZE))  {	  if(current    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
595	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(!closed    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
596	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closeDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closeDataDescriptor)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closeDataDescriptor)  {	  if(closed    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    hasDataDescriptor)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
597	[BUG]  [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  hasEFS)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isDirectory()  ||  hasEFS)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isDirectory()  ||  hasEFS)  {	  if(current    ==    null    ||    closed    ||    hasEFS)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
598	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(inputStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getInflater(inputStream);  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getInflater(inputStream);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
599	[BUG]  [BUGGY]  Inflater  inflater  =  getOutflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  getOutflater();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  getOutflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
600	[BUG]  [BUGGY]  Inflater  inflater  =  createInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inflater  =  createInflater();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inflater  =  createInflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
601	[BUG]  [BUGGY]  if(closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(closed    ||    hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
602	[BUG]  [BUGGY]  if(closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current!=  null)  {	  if(closed    ||    hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
603	[BUG]  [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  current!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  hasDataDescriptor  ||  current!=  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  hasDataDescriptor  ||  current!=  null)  {	  if(closed    ||    hasDataDescriptor    ||    current!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
604	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  current  ==  null)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
605	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  hasEFS  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current  ==  null)  {	  if(hasDataDescriptor    ||    hasEFS    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
606	[BUG]  [BUGGY]  if(closed  ||  current.isEnabled())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(closed  ||  current.isEnabled())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(closed  ||  current.isEnabled())  {	  if    (!closed    ||!current.isEnabled())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
607	[BUG]  [BUGGY]  if(!closed  ||  current.isEnabled(SHORT_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  current.isEnabled(SHORT_LEN))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  current.isEnabled(SHORT_LEN))  {	  if    (!closed    ||!current.isEnabled())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
608	[BUG]  [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileExtraFields)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileExtraFields)  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(hasDataDescriptor  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasFileExtraFields)  {	  if(hasDataDescriptor    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
609	[BUG]  [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  isEnabled(ZipArchiveEntry.USE_UNIcodeExtraFields))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  isEnabled(ZipArchiveEntry.USE_UNIcodeExtraFields))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME)||  isEnabled(ZipArchiveEntry.USE_UNIcodeExtraFields))  {	  if(closed    ||    isEnabled(ZipArchiveEntry.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
610	[BUG]  [BUGGY]  Inflater  inf  =  currentEntry.getInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  Inflater  inf  =  currentEntry.getInputFile();  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	Inflater  inf  =  currentEntry.getInputFile();	  Inflater    inf    =    current.getInputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
611	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_FIRST))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_FIRST))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_FIRST))  {	  if(!closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
612	[BUG]  [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_TRIMING))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_TRIMING))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!closed  ||  isEnabled(ZipArchiveEntry.INSTANCE_TRIMING))  {	  if(!closed    ||    isEnabled(ZipArchiveEntry.INSTANCE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
613	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
614	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
615	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current.getClass()!=  getClass())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current.getClass()!=  getClass())  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  current.getClass()!=  getClass())  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
616	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.WRITE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.WRITE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.WRITE_FIELD_NAMES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
617	[BUG]  [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(current  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(current    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
618	[BUG]  [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SHORT))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(ZipArchiveEntry.INSTANCE  ||  isEnabled(ZipArchiveEntry.SHORT))  {	  if(isEnabled(ZipArchiveEntry.INSTANCE)||    isEnabled(ZipArchiveEntry.SHORT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
619	[BUG]  [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!hasEFS  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
620	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
621	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipArchiveEntry  getNextZipEntry()  throws  IOException  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      return  null;  }  if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	108	108	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
