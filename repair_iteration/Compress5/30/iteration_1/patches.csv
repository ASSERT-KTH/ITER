bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  SHORT;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  SHORT;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)+    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
2	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)/  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)/  1;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)/  1;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)+    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
3	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  2;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  2;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)+    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
4	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  WORD;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  WORD;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)+    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
5	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  LFH_LEN;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  LFH_LEN;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)+    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
6	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  SHORT);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  SHORT);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    -    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
7	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  WORD  +  1);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  WORD  +  1);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    -    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
8	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  *  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  *  WORD);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  *  WORD);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    -    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
9	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  2);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  2);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    -    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
10	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  SHORT  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  SHORT  +  1);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  SHORT  +  1);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
11	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1,  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1,  WORD);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1,  WORD);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
12	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
13	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	current.setMethod(ZipShort.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
14	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
15	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  off  +=  SHORT;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
16	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  lengthOfLastRead));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
17	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(LipShort.getValue(lfh,  lengthOfLastRead));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
18	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
19	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1)-  1;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1)-  1;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)-    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
20	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  WORD;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  WORD;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)-    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
21	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  2;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  2;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)-    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
22	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  SHORT;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  SHORT;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)-    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
23	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  LFH_LEN;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  LFH_LEN;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)-    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
24	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1,  current);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1,  current);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
25	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1,  hasEFS);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  1,  hasEFS);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
26	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  4);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  4);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
27	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  8);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  8);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  8);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
28	[BUG]  [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
29	[BUG]  [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  current.setFileName(ZipShort.getValue(lfh,  off));  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	current.setFileName(ZipShort.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
30	[BUG]  [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
31	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
32	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  1  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  1  +  WORD;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)-  1  +  WORD;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)-    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
33	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  LFH_LEN);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  LFH_LEN);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
34	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  0;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  0;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off)+    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
35	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  SHORT  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  SHORT  -  1);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  SHORT  -  1);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
36	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipShort.getValue(lfh,  off));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
37	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
38	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setMethod(ZipLong.getValue(lfh,  lengthOfLastRead));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
39	[BUG]  [BUGGY]  static  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  static  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  SHORT);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	static  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  -  SHORT);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    -    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
40	[BUG]  [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  3;  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off)+  3;	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    3);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
41	[BUG]  [BUGGY]  static  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);    [BUGGY]  static  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]    final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	137	137	1	replace	static  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off  +  SHORT);	  final    int    generalPurposeFlag    =    ZipShort.getValue(lfh,    off    +    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
