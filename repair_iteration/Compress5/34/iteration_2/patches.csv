bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  1);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
2	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off)+  1;	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
3	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off)-  1;	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
4	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  2);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
5	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)+  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off)+  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off)+  SHORT;	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
6	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
7	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
8	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  2);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
9	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)+  1;	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
10	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off)-  1;	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
11	[BUG]  [BUGGY]  off  +=  WORD  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  /  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  /  1;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
12	[BUG]  [BUGGY]  off  +=  LFH_LEN  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  /  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  /  1;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
13	[BUG]  [BUGGY]  off  +=  SHORT  /  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  /  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  /  WORD;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
14	[BUG]  [BUGGY]  off  +=  SHORT  /  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  /  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  /  2;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
15	[BUG]  [BUGGY]  off  +=  HORD  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  /  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  /  1;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
16	[BUG]  [BUGGY]  off  +=  HORD  +  LFH_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  +  LFH_LEN  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  +  LFH_LEN  +  1;	  off    +=    HORD    +    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
17	[BUG]  [BUGGY]  off  +=  HORD  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  +  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  +  WORD;	  off    +=    HORD    +    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
18	[BUG]  [BUGGY]  off  +=  HORD  +  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  +  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  +  entryEncoding;	  off    +=    HORD    +    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
19	[BUG]  [BUGGY]  off  +=  HORD  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  +  2;	  off    +=    HORD    +    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
20	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipShort.getValue(lfh,  off  +  1));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
21	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS);	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
22	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setCrc(ZipShort.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
23	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  entryEncoding);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  entryEncoding);	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
24	[BUG]  [BUGGY]  off  +=  WORD  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  +  2;	  off    +=    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
25	[BUG]  [BUGGY]  off  +=  SHORT  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  2;	  off    +=    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
26	[BUG]  [BUGGY]  off  +=  LH_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LH_LEN  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LH_LEN  +  1;	  off    +=    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
27	[BUG]  [BUGGY]  off  +=  LH_LEN  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LH_LEN  -  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LH_LEN  -  1;	  off    +=    LH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
28	[BUG]  [BUGGY]  off  +=  LH_LEN  ||  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LH_LEN  ||  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LH_LEN  ||  hasEFS;	  off    +=    LH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
29	[BUG]  [BUGGY]  off  -=  LAST_LITERAL  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  LAST_LITERAL  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  LAST_LITERAL  +  1;	  off    -=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
30	[BUG]  [BUGGY]  Offset  -=  LAST_LITERAL;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  -=  LAST_LITERAL;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  -=  LAST_LITERAL;	  off    -=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
31	[BUG]  [BUGGY]  off  -=  LAST_LITERAL  ||  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  LAST_LITERAL  ||  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  LAST_LITERAL  ||  hasEFS;	  off    -=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
32	[BUG]  [BUGGY]  off  +=  BYTE_SHIFT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  BYTE_SHIFT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  BYTE_SHIFT;	  off    +=    BYTE_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
33	[BUG]  [BUGGY]  off  +=  BYTE_LEN  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  BYTE_LEN  -  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  BYTE_LEN  -  1;	  off    +=    BYTE_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
34	[BUG]  [BUGGY]  off  +=  LFH_LEN  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  +  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  +  WORD;	  off    +=    SHORT    +    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
35	[BUG]  [BUGGY]  off  +=  LAST  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  +  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  +  WORD;	  off    +=    LAST    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
36	[BUG]  [BUGGY]  off  +=  LAST  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  +  2;	  off    +=    LAST    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
37	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  WORD;	  current.setMethod(ZipLong.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
38	[BUG]  [BUGGY]  if(entryEncoding)  {  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(entryEncoding)  {  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(entryEncoding)  {  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }	  current.setMethod(ZipLong.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
39	[BUG]  [BUGGY]  if(!hasEFS)  {  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(!hasEFS)  {  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(!hasEFS)  {  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }	  current.setMethod(ZipLong.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
40	[BUG]  [BUGGY]  int  WORD  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  WORD  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  WORD  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
41	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);  off  +=  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);  off  +=  SHORT;	  current.setMethod(ZipLong.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
42	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  LFH_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  LFH_LEN;	  current.setMethod(ZipLong.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
43	[BUG]  [BUGGY]  off  +=  LFH_LEN  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  -  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  -  2;	  off    +=    LFH_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
44	[BUG]  [BUGGY]  off  +=  WORD  ||  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  ||  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  ||  hasEFS;	  off    +=    LFH_LEN    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
45	[BUG]  [BUGGY]  off  +=  SHORT  ||  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  ||  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  ||  hasEFS;	  off    +=    LFH_LEN    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
46	[BUG]  [BUGGY]  off  +=  LFH_LEN  &&  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  &&  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  &&  hasEFS;	  off    +=    LFH_LEN    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
47	[BUG]  [BUGGY]  off  +=  LFH_LEN  ||  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  ||  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  ||  entryEncoding;	  off    +=    LFH_LEN    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
48	[BUG]  [BUGGY]  off  +=  hasEFS  ||  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  hasEFS  ||  LFH_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  hasEFS  ||  LFH_LEN;	  off    +=    LFH_LEN    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
49	[BUG]  [BUGGY]  off  -=  LAST  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  LAST  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  LAST  +  1;	  off    -=    LAST;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
50	[BUG]  [BUGGY]  Offset  +=  HORD  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  HORD  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  HORD  +  1;	  Offset    +=    HORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
51	[BUG]  [BUGGY]  Offset  +=  HORD  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  HORD  -  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  HORD  -  1;	  Offset    +=    HORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
52	[BUG]  [BUGGY]  Offset  -=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  -=  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  -=  WORD;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
53	[BUG]  [BUGGY]  Offset  -=  SHORT  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  -=  SHORT  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  -=  SHORT  +  1;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
54	[BUG]  [BUGGY]  Offset  -=  HORIZONTAL;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  -=  HORIZONTAL;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  -=  HORIZONTAL;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
55	[BUG]  [BUGGY]  Offset  -=  HORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  -=  HORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  -=  HORD;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
56	[BUG]  [BUGGY]  Offset  -=  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  -=  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  -=  1;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
57	[BUG]  [BUGGY]  off  +=  WORD  +  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  +  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  +  entryEncoding;	  off    +=    WORD    +    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
58	[BUG]  [BUGGY]  off  +=  WORD  +  LFH_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  +  LFH_LEN  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  +  LFH_LEN  +  1;	  off    +=    WORD    +    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
59	[BUG]  [BUGGY]  off  +=  WORD  +  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  +  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  +  SHORT;	  off    +=    WORD    +    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
60	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  1);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
61	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
62	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  WORD);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
63	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  2);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
64	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	lfh  =  ZipShort.getValue(lfh,  off)+  1;	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
65	[BUG]  [BUGGY]  off  +=  WORD  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  -  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  -  2;	  off    +=    WORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
66	[BUG]  [BUGGY]  off  +=  WORD  -  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  -  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  -  8;	  off    +=    WORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
67	[BUG]  [BUGGY]  off  +=  WORD  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  +  8;	  off    +=    WORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
68	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  WORD;	  current.setMethod(ZipShort.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
69	[BUG]  [BUGGY]  if(!hasEFS)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(!hasEFS)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(!hasEFS)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }	  current.setMethod(ZipShort.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
70	[BUG]  [BUGGY]  if(entryEncoding)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(entryEncoding)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(entryEncoding)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }	  current.setMethod(ZipShort.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
71	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS);  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS);  off  +=  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipShort.getValue(lfh,  off),  hasEFS);  off  +=  SHORT;	  current.setMethod(ZipShort.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
72	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  LFH_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  LFH_LEN;	  current.setMethod(ZipShort.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
73	[BUG]  [BUGGY]  off  +=  WORD  +  LFH_LEN  +  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  +  LFH_LEN  +  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  +  LFH_LEN  +  hasEFS;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
74	[BUG]  [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  LFH_LEN  +  entryEncoding;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
75	[BUG]  [BUGGY]  off  +=  LFH_LEN  +  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  +  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  +  entryEncoding;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
76	[BUG]  [BUGGY]  off  +=  SHORT  +  LFH_LEN  *  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  LFH_LEN  *  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  LFH_LEN  *  hasEFS;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
77	[BUG]  [BUGGY]  off  +=  SHORT  +  entryEncoding  +  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  entryEncoding  +  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  entryEncoding  +  hasEFS;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
78	[BUG]  [BUGGY]  off  +=  SHORT  +  WORD  +  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  WORD  +  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  WORD  +  hasEFS;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
79	[BUG]  [BUGGY]  Offset  +=  LFH_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LFH_LEN  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LFH_LEN  +  1;	  Offset    +=    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
80	[BUG]  [BUGGY]  Offset  +=  LH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LH_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LH_LEN;	  Offset    +=    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
81	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipLong.getValue(lfh,  off  +  1));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
82	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipLong.getValue(lfh,  off),  hasEFS);	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
83	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setCrc(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
84	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off),  entryEncoding);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setMethod(ZipLong.getValue(lfh,  off),  entryEncoding);	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
85	[BUG]  [BUGGY]  current.setDescriptor(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setDescriptor(ZipLong.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setDescriptor(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
86	[BUG]  [BUGGY]  off  +=  WORD  +  LFH_LEN  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  +  LFH_LEN  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  +  LFH_LEN  +  2;	  off    +=    SHORT    +    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
87	[BUG]  [BUGGY]  off  +=  SHORT  +  entryEncoding  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  entryEncoding  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  entryEncoding  +  2;	  off    +=    SHORT    +    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
88	[BUG]  [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  LFH_LEN  +  WORD;	  off    +=    SHORT    +    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
89	[BUG]  [BUGGY]  off  +=  SHORT  +  LFH_LEN  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  LFH_LEN  *  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  LFH_LEN  *  2;	  off    +=    SHORT    +    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
90	[BUG]  [BUGGY]  off  -=  LH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  LH_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  LH_LEN;	  off    -=    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
91	[BUG]  [BUGGY]  off  -=  DECEMBER;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  DECEMBER;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  DECEMBER;	  off    -=    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
92	[BUG]  [BUGGY]  off  -=  SHORT  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  SHORT  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  SHORT  +  2;	  off    -=    SHORT    +    8;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
93	[BUG]  [BUGGY]  off  -=  SHORT  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  SHORT  +  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  SHORT  +  WORD;	  off    -=    SHORT    +    8;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
94	[BUG]  [BUGGY]  off  -=  SHORT  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  SHORT  +  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  SHORT  +  4;	  off    -=    SHORT    +    8;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
95	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  1);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
96	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)+  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off)+  1;	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
97	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  2);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
98	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)-  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off)-  1;	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
99	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)+  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off)+  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off)+  SHORT;	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
100	[BUG]  [BUGGY]  off  -=  LAST_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  LAST_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  LAST_LEN;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
101	[BUG]  [BUGGY]  off  +=  LAST_LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LONG;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LONG;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
102	[BUG]  [BUGGY]  off  +=  LAST_SHIFT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_SHIFT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_SHIFT;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
103	[BUG]  [BUGGY]  Offset  +=  LAST_LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LAST_LONG;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LAST_LONG;	  Offset    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
104	[BUG]  [BUGGY]  off  -=  WORD  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  WORD  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  WORD  +  1;	  off    -=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
105	[BUG]  [BUGGY]  Offset  +=  SHORT  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  SHORT  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  SHORT  +  1;	  Offset    +=    WORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
106	[BUG]  [BUGGY]  Offset  +=  WORD  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  WORD  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  WORD  +  2;	  Offset    +=    WORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
107	[BUG]  [BUGGY]  Offset  +=  WORD  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  WORD  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  WORD  +  8;	  Offset    +=    WORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
108	[BUG]  [BUGGY]  off  +=  LAST_LITERAL  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LITERAL  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LITERAL  +  1;	  off    +=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
109	[BUG]  [BUGGY]  off  +=  LAST_LITERAL  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LITERAL  -  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LITERAL  -  1;	  off    +=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
110	[BUG]  [BUGGY]  off  -=  HORIZONTAL  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  HORIZONTAL  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  HORIZONTAL  +  1;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
111	[BUG]  [BUGGY]  off  -=  HORIZONTAL  ||  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  HORIZONTAL  ||  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  HORIZONTAL  ||  hasEFS;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
112	[BUG]  [BUGGY]  off  -=  HORIZONTAL  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  HORIZONTAL  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  HORIZONTAL  +  2;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
113	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasEFS);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
114	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
115	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
116	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
117	[BUG]  [BUGGY]  off  -=  HORD  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  HORD  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  HORD  +  1;	  off    -=    HORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
118	[BUG]  [BUGGY]  off  -=  HORD  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  HORD  +  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  HORD  +  WORD;	  off    -=    HORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
119	[BUG]  [BUGGY]  off  +=  LAST  &&  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  &&  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  &&  hasEFS;	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
120	[BUG]  [BUGGY]  off  +=  LAST  ||  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  ||  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  ||  entryEncoding;	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
121	[BUG]  [BUGGY]  off  +=  LAST  ||  hasEFS  &&  entryEncoding.equals(ZipLong.getValue(lfh,  entryEncoding));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  ||  hasEFS  &&  entryEncoding.equals(ZipLong.getValue(lfh,  entryEncoding));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  ||  hasEFS  &&  entryEncoding.equals(ZipLong.getValue(lfh,  entryEncoding));	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
122	[BUG]  [BUGGY]  off  +=  LAST  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  ||  hasEFS  &&  entryEncoding.equals(ZipEncodingHelper.UTF8_ZIP_ENCODING);	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
123	[BUG]  [BUGGY]  off  +=  LAST  ||  hasEFS  &&  entryEncoding.equals(entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  ||  hasEFS  &&  entryEncoding.equals(entryEncoding);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  ||  hasEFS  &&  entryEncoding.equals(entryEncoding);	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
124	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLocation(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
125	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead  +  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLocation(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
126	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead  -  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLocation(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
127	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLocation(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
128	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLocation(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
129	[BUG]  [BUGGY]  off  +=  WORD  -  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  -  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  -  SHORT;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
130	[BUG]  [BUGGY]  off  +=  LFH_LEN  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  -  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  -  WORD;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
131	[BUG]  [BUGGY]  off  +=  SHORT  -  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  -  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  -  entryEncoding;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
132	[BUG]  [BUGGY]  Offset  +=  LAST_LITERAL  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LAST_LITERAL  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LAST_LITERAL  +  1;	  Offset    +=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
133	[BUG]  [BUGGY]  off  +=  SHORT  /  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  /  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  /  8;	  off    +=    SHORT    -    8;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
134	[BUG]  [BUGGY]  off  +=  HORD  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  -  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  -  WORD;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
135	[BUG]  [BUGGY]  off  +=  HORD  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  -  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  -  2;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
136	[BUG]  [BUGGY]  off  +=  HORD  -  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  -  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  -  8;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
137	[BUG]  [BUGGY]  off  +=  HORD  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  +  8;	  off    +=    HORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
138	[BUG]  [BUGGY]  off  +=  HORD  +  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  +  3;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  +  3;	  off    +=    HORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
139	[BUG]  [BUGGY]  off  +=  SHORT  +  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  off    +=    SHORT    +    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
140	[BUG]  [BUGGY]  off  +=  SHORT  +  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  hasEFS;	  off    +=    SHORT    +    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
141	[BUG]  [BUGGY]  off  +=  SHORT  +  UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  UTF8_ZIP_ENCODING;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  UTF8_ZIP_ENCODING;	  off    +=    SHORT    +    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
142	[BUG]  [BUGGY]  off  +=  SHORT  +  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  entryEncoding  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  off    +=    SHORT    +    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
143	[BUG]  [BUGGY]  off  +=  SHORT  +  entryEncoding  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  entryEncoding  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  entryEncoding  +  1;	  off    +=    SHORT    +    LFH_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
144	[BUG]  [BUGGY]  off  +=  SHORT  +  WORD  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  WORD  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  WORD  +  1;	  off    +=    SHORT    +    LFH_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
145	[BUG]  [BUGGY]  off  +=  LAST_LEN  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LEN  -  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LEN  -  2;	  off    +=    LAST_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
146	[BUG]  [BUGGY]  off  +=  LAST_LEN  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LEN  /  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LEN  /  1;	  off    +=    LAST_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
147	[BUG]  [BUGGY]  off  +=  LAST_LEN  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LEN  -  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LEN  -  WORD;	  off    +=    LAST_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
148	[BUG]  [BUGGY]  off  +=  LAST_LEN  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LEN  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LEN  +  2;	  off    +=    LAST_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
149	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	final  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
150	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  +  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
151	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead  -  1);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
152	[BUG]  [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(!hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
153	[BUG]  [BUGGY]  if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
154	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	long  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLength(lengthOfLastRead);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLength(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
155	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasEFS);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasEFS);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
156	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
157	[BUG]  [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	long  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
158	[BUG]  [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	final  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
159	[BUG]  [BUGGY]  off  +=  SHORT  -  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  -  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  -  4;	  off    +=    SHORT    -    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
160	[BUG]  [BUGGY]  off  +=  LFH_LEN  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  +  8;	  off    +=    LFH_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
161	[BUG]  [BUGGY]  off  +=  LFH_LEN  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  +  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  +  4;	  off    +=    LFH_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
162	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  4);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  4);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
163	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  3);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  3);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
164	[BUG]  [BUGGY]  off  +=  LAST_LEN  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LEN  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LEN  +  8;	  off    +=    LAST_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
165	[BUG]  [BUGGY]  off  +=  LH_LEN  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LH_LEN  -  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LH_LEN  -  WORD;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
166	[BUG]  [BUGGY]  off  +=  hasEFS  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  hasEFS  -  WORD;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  hasEFS  -  WORD;	  off    +=    SHORT    -    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
167	[BUG]  [BUGGY]  off  -=  SHORT  +  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  SHORT  +  3;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  SHORT  +  3;	  off    -=    SHORT    +    8;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
168	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
169	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off  +  WORD);	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
170	[BUG]  [BUGGY]  if(hasEFS)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(hasEFS)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(hasEFS)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }	  current.setMethod(ZipShort.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
171	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
172	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  SHORT);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  SHORT);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
173	[BUG]  [BUGGY]  off  +=  LFH_LEN  -  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  -  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  -  hasEFS;	  off    +=    LFH_LEN    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
174	[BUG]  [BUGGY]  off  +=  LFH_LEN  ||  hasDataDescriptor;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  ||  hasDataDescriptor;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  ||  hasDataDescriptor;	  off    +=    LFH_LEN    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
175	[BUG]  [BUGGY]  off  +=  LAST  ||  hasEFS  &&  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  ||  hasEFS  &&  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  ||  hasEFS  &&  entryEncoding;	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
176	[BUG]  [BUGGY]  off  +=  LAST  ||  hasEFS  &&  fileNameLen;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  ||  hasEFS  &&  fileNameLen;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  ||  hasEFS  &&  fileNameLen;	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
177	[BUG]  [BUGGY]  off  +=  LAST  -  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  -  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  -  hasEFS;	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
178	[BUG]  [BUGGY]  Offset  +=  LAST  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LAST  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LAST  +  1;	  Offset    +=    LAST;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
179	[BUG]  [BUGGY]  if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(hasEFS)  {  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  current.setLocation(lengthOfLastRead);  }	  int    lengthOfLastRead    =    ZipShort.getValue(lfh,    off);    current.setLocation(lengthOfLastRead);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
180	[BUG]  [BUGGY]  off  +=  LFH_LEN  +  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  +  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  +  hasEFS;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
181	[BUG]  [BUGGY]  off  +=  LFH_LEN  +  hasDataDescriptor;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  +  hasDataDescriptor;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  +  hasDataDescriptor;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
182	[BUG]  [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  LFH_LEN  +  8;	  off    +=    SHORT    +    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
183	[BUG]  [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  LFH_LEN  +  4;	  off    +=    SHORT    +    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
184	[BUG]  [BUGGY]  Offset  +=  LAST_LITERAL  +  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LAST_LITERAL  +  LFH_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LAST_LITERAL  +  LFH_LEN;	  Offset    +=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
185	[BUG]  [BUGGY]  Offset  +=  LAST_LITERAL  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LAST_LITERAL  -  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LAST_LITERAL  -  1;	  Offset    +=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
186	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lengthOfLastRead  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);	  int    lengthOfLastRead    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
187	[BUG]  [BUGGY]  current.setDataDescriptor(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setDataDescriptor(ZipLong.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setDataDescriptor(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
188	[BUG]  [BUGGY]  current.setShort(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setShort(ZipLong.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setShort(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
189	[BUG]  [BUGGY]  off  +=  NUMBER;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  NUMBER;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  NUMBER;	  off    +=    DESC;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
190	[BUG]  [BUGGY]  off  +=  LAST_LITERAL  +  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LITERAL  +  LFH_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LITERAL  +  LFH_LEN;	  off    +=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
191	[BUG]  [BUGGY]  Offset  +=  WORD  +  6;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  WORD  +  6;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  WORD  +  6;	  Offset    +=    WORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
192	[BUG]  [BUGGY]  Offset  +=  WORD  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  WORD  +  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  WORD  +  4;	  Offset    +=    WORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
193	[BUG]  [BUGGY]  off  +=  SHORT  +  UTF8_ZIP_ENCODING  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  UTF8_ZIP_ENCODING  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  UTF8_ZIP_ENCODING  +  1;	  off    +=    SHORT    +    LFH_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
194	[BUG]  [BUGGY]  off  +=  BYTE_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  BYTE_LEN  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  BYTE_LEN  +  1;	  off    +=    BYTE_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
195	[BUG]  [BUGGY]  off  +=  BYTE_LONG;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  BYTE_LONG;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  BYTE_LONG;	  off    +=    BYTE_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
196	[BUG]  [BUGGY]  off  +=  WORD  -  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  -  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  -  4;	  off    +=    WORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
197	[BUG]  [BUGGY]  off  +=  WORD  -  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  -  3;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  -  3;	  off    +=    WORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
198	[BUG]  [BUGGY]  off  +=  HORD  +  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  +  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  +  SHORT;	  off    +=    HORD    +    LFH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
199	[BUG]  [BUGGY]  off  +=  LH_LEN  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LH_LEN  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LH_LEN  +  2;	  off    +=    LH_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
200	[BUG]  [BUGGY]  Offset  +=  LAST_LEN  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LAST_LEN  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LAST_LEN  +  1;	  Offset    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
201	[BUG]  [BUGGY]  current.setDataDescriptor(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setDataDescriptor(ZipShort.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setDataDescriptor(ZipShort.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
202	[BUG]  [BUGGY]  current.setShort(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setShort(ZipShort.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setShort(ZipShort.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
203	[BUG]  [BUGGY]  current.setInputStream(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setInputStream(ZipShort.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setInputStream(ZipShort.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
204	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  WORD);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
205	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lfhLen    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
206	[BUG]  [BUGGY]  off  +=  hasEFS  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  hasEFS  /  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  hasEFS  /  1;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
207	[BUG]  [BUGGY]  off  +=  HORD  -  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  -  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  -  4;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
208	[BUG]  [BUGGY]  off  +=  HORD  -  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  -  3;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  -  3;	  off    +=    HORD    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
209	[BUG]  [BUGGY]  off  +=  SHORT  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  4;	  off    +=    SHORT    +    8;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
210	[BUG]  [BUGGY]  off  +=  SHORT  +  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  3;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  3;	  off    +=    SHORT    +    8;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
211	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  WORD);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
212	[BUG]  [BUGGY]  off  +=  LFH_LEN  -  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LFH_LEN  -  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LFH_LEN  -  8;	  off    +=    LFH_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
213	[BUG]  [BUGGY]  off  +=  WORD  +  6;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  +  6;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  +  6;	  off    +=    WORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
214	[BUG]  [BUGGY]  off  +=  LAST  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  +  8;	  off    +=    LAST    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
215	[BUG]  [BUGGY]  off  +=  LAST  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  +  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  +  4;	  off    +=    LAST    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
216	[BUG]  [BUGGY]  off  +=  LAST  +  3;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  +  3;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  +  3;	  off    +=    LAST    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
217	[BUG]  [BUGGY]  off  -=  HORD  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  HORD  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  HORD  +  8;	  off    -=    HORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
218	[BUG]  [BUGGY]  if(hasEFS)  {  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(hasEFS)  {  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(hasEFS)  {  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  }	  current.setMethod(ZipLong.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
219	[BUG]  [BUGGY]  Offset  -=  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  -=  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  -=  2;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
220	[BUG]  [BUGGY]  Offset  +=  SHORT  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  SHORT  -  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  SHORT  -  1;	  Offset    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
221	[BUG]  [BUGGY]  off  -=  BYTE_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  BYTE_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  BYTE_LEN;	  off    -=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
222	[BUG]  [BUGGY]  off  -=  LAST_LITERAL  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  LAST_LITERAL  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  LAST_LITERAL  +  2;	  off    -=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
223	[BUG]  [BUGGY]  off  +=  SHORT  +  hasDataDescriptor;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  hasDataDescriptor;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  hasDataDescriptor;	  off    +=    SHORT    +    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
224	[BUG]  [BUGGY]  off  +=  SHORT  +  entryEncoding  +  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  entryEncoding  +  LFH_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  entryEncoding  +  LFH_LEN;	  off    +=    SHORT    +    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
225	[BUG]  [BUGGY]  off  +=  SHORT  +  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  zipEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  zipEncoding;	  off    +=    SHORT    +    entryEncoding;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
226	[BUG]  [BUGGY]  off  +=  LAST_LAST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LAST;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LAST;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
227	[BUG]  [BUGGY]  off  -=  LAST  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  LAST  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  LAST  +  2;	  off    -=    LAST;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
228	[BUG]  [BUGGY]  Off  -=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Off  -=  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Off  -=  SHORT;	  off    -=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
229	[BUG]  [BUGGY]  off  +=  LAST_LEN  *  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LEN  *  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LEN  *  1;	  off    +=    LAST_LEN    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
230	[BUG]  [BUGGY]  off  +=  HORD  +  4;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  +  4;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  +  4;	  off    +=    HORD    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
231	[BUG]  [BUGGY]  off  +=  HORIZONTAL;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORIZONTAL;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORIZONTAL;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
232	[BUG]  [BUGGY]  off  -=  BYTE_SHIFT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  BYTE_SHIFT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  BYTE_SHIFT;	  off    -=    HORIZONTAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
233	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  SHORT;	  current.setMethod(ZipLong.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
234	[BUG]  [BUGGY]  off  +=  DECEMBER  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  DECEMBER  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  DECEMBER  +  1;	  off    +=    LAST    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
235	[BUG]  [BUGGY]  off  -=  HORD  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  HORD  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  HORD  +  2;	  off    -=    HORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
236	[BUG]  [BUGGY]  off  +=  LAST  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
237	[BUG]  [BUGGY]  off  +=  LAST  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  ||  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
238	[BUG]  [BUGGY]  off  +=  LAST  ||  hasEFS  &&  current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST  ||  hasEFS  &&  current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST  ||  hasEFS  &&  current.getMethod()  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  off    +=    LAST    ||    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
239	[BUG]  [BUGGY]  off  +=  SHORT  +  lengthOfLastRead  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  lengthOfLastRead  +  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  lengthOfLastRead  +  1;	  off    +=    SHORT    +    LFH_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
240	[BUG]  [BUGGY]  off  +=  WORD  /  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  WORD  /  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  WORD  /  2;	  off    +=    SHORT    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
241	[BUG]  [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  1,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  lfh  =  ZipShort.getValue(lfh,  off  +  1,  hasEFS);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	lfh  =  ZipShort.getValue(lfh,  off  +  1,  hasEFS);	  lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
242	[BUG]  [BUGGY]  if(current!=  null)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  if(current!=  null)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	if(current!=  null)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }	  current.setMethod(ZipShort.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
243	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  SHORT;	  current.setMethod(ZipShort.getValue(lfh,    off));    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
244	[BUG]  [BUGGY]  Offset  -=  SHORT  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  -=  SHORT  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  -=  SHORT  +  8;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
245	[BUG]  [BUGGY]  Offset  -=  LAST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  -=  LAST;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  -=  LAST;	  Offset    -=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
246	[BUG]  [BUGGY]  current.setDescriptor(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setDescriptor(ZipShort.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setDescriptor(ZipShort.getValue(lfh,  off));	  current.setMethod(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
247	[BUG]  [BUGGY]  off  +=  LAST_FIRST;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_FIRST;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_FIRST;	  off    +=    LAST_LEN;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
248	[BUG]  [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  hasDataDescriptor;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  LFH_LEN  +  hasDataDescriptor;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  LFH_LEN  +  hasDataDescriptor;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
249	[BUG]  [BUGGY]  off  +=  HORD  +  LFH_LEN  +  hasEFS;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  HORD  +  LFH_LEN  +  hasEFS;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  HORD  +  LFH_LEN  +  hasEFS;	  off    +=    SHORT    +    LFH_LEN    +    hasEFS;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
250	[BUG]  [BUGGY]  off  +=  LAST_LEN  +  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  LAST_LEN  +  LFH_LEN;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  LAST_LEN  +  LFH_LEN;	  off    +=    LAST_LEN    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
251	[BUG]  [BUGGY]  current.setInputStream(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  current.setInputStream(ZipLong.getValue(lfh,  off));  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	current.setInputStream(ZipLong.getValue(lfh,  off));	  current.setMethod(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
252	[BUG]  [BUGGY]  Offset  +=  LAST_LITERAL  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LAST_LITERAL  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LAST_LITERAL  +  2;	  Offset    +=    LAST_LITERAL;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
253	[BUG]  [BUGGY]  off  -=  WORD  +  8;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  -=  WORD  +  8;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  -=  WORD  +  8;	  off    -=    SHORT    +    8;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
254	[BUG]  [BUGGY]  Offset  +=  LAST  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  Offset  +=  LAST  -  1;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	Offset  +=  LAST  -  1;	  Offset    +=    LAST;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
255	[BUG]  [BUGGY]  off  +=  SHORT  +  lengthOfLastRead  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  off  +=  SHORT  +  lengthOfLastRead  +  2;  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	off  +=  SHORT  +  lengthOfLastRead  +  2;	  off    +=    SHORT    +    LFH_LEN    +    2;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
256	[BUG]  [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  final  int  generalPurposeFlag  =  ZipShort.getValue(lfh,  off);  final  boolean  hasEFS  =  (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;      [BUGGY]  int  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);  [BUGGY]        current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	144	144	1	replace	int  lfh  =  ZipShort.getValue(lfh,  off  +  SHORT);	  int    lfh    =    ZipShort.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
