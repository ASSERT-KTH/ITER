projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LFH_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.LFH_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_STRING)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BLOCK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LITERAL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOLDER)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LP)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FLOAT_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy>=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NONE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NUMBER_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LFH_LEN)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LIMIT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SHIFT)){
