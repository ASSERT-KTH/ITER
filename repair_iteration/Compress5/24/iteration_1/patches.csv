bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_SIG))  {	  if(!sig.equals(ZipLong.NUMBER_FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
2	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SIG))  {	  if(!sig.equals(ZipLong.NUMBER_FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
3	[BUG]  [BUGGY]  if(sig.equals(ZipLong.NUMBER_FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.NUMBER_FLOAT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.NUMBER_FLOAT))  {	  if(!sig.equals(ZipLong.NUMBER_FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
4	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_STRING))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_STRING))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_STRING))  {	  if(!sig.equals(ZipLong.NUMBER_FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
5	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SIG))  {	  if(!sig.equals(ZipLong.NONE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
6	[BUG]  [BUGGY]  if(sig.equals(ZipLong.NONE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.NONE))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.NONE))  {	  if(!sig.equals(ZipLong.NONE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
7	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SHIFT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SHIFT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SHIFT))  {	  if(!sig.equals(ZipLong.NONE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
8	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN))  {	  if(!sig.equals(ZipLong.NONE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
9	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_SIG))  {	  if(!sig.equals(ZipLong.NULL))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
10	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_LEN))  {	  if(!sig.equals(ZipLong.NULL))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
11	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FOR))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_FOR))  {	  if(!sig.equals(ZipLong.NUMBER_INT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
12	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FIRST))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FIRST))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_FIRST))  {	  if(!sig.equals(ZipLong.NUMBER_INT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
13	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SIG))  {	  if(!sig.equals(ZipLong.NUMBER_INT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
14	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SHIFT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SHIFT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SHIFT))  {	  if(!sig.equals(ZipLong.NUMBER_INT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
15	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_LEN))  {	  if    (!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
16	[BUG]  [BUGGY]  if(sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.FLOAT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.FLOAT))  {	  if    (!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
17	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_SIG))  {	  if    (!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
18	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.NIBLET_MASK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.NIBLET_MASK))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.NIBLET_MASK))  {	  if    (!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
19	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if  (!sig.equals(ZipLong.BLOCK))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if  (!sig.equals(ZipLong.BLOCK))  {	  if    (!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
20	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_FILE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_FILE))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_FILE))  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
21	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_FOR))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_FOR))  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
22	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_LITERAL))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_LITERAL))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_LITERAL))  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
23	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_LEN)&&  versionMadeBy  ==  ZipFile.NIBLET_MASK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_LEN)&&  versionMadeBy  ==  ZipFile.NIBLET_MASK)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_LEN)&&  versionMadeBy  ==  ZipFile.NIBLET_MASK)  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
24	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_FOLDER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_FOLDER))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_FOLDER))  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
25	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lfhLen  =  ZipShort.getValue(lfh);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
26	[BUG]  [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(lfh,  off);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  bytesReadFromStream  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
27	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  off);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
28	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  0);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  0);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
29	[BUG]  [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(lfh,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(lfh,  0);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  bytesReadFromStream  =  ZipShort.getValue(lfh,  0);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
30	[BUG]  [BUGGY]  Inflater  inf  =  getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  Inflater  inf  =  getInflater();  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	Inflater  inf  =  getInflater();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
31	[BUG]  [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  bytesReadFromStream  =  ZipShort.getValue(lfh);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  bytesReadFromStream  =  ZipShort.getValue(lfh);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
32	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NIBLET_MASK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NIBLET_MASK))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NIBLET_MASK))  {	  if(!sig.equals(ZipLong.BYTE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
33	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)&&  versionMadeBy  ==  ZipFile.NIBLET_MASK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)&&  versionMadeBy  ==  ZipFile.NIBLET_MASK)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SIG)&&  versionMadeBy  ==  ZipFile.NIBLET_MASK)  {	  if(!sig.equals(ZipLong.BYTE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
34	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)||!current.getValue().equals(ZipLong.NIBLET_MASK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)||!current.getValue().equals(ZipLong.NIBLET_MASK))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SIG)||!current.getValue().equals(ZipLong.NIBLET_MASK))  {	  if(!sig.equals(ZipLong.BYTE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
35	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)||!current.equals(ZipLong.NIBLET_MASK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)||!current.equals(ZipLong.NIBLET_MASK))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SIG)||!current.equals(ZipLong.NIBLET_MASK))  {	  if(!sig.equals(ZipLong.BYTE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
36	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.FOR))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.FOR))  {	  if(!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
37	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.LP))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.LP))  {	  if(!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
38	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.getValue().equals(ZipLong.NIBLET_MASK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.getValue().equals(ZipLong.NIBLET_MASK))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.getValue().equals(ZipLong.NIBLET_MASK))  {	  if    (!sig.equals(ZipLong.BYTE_SHIFT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
39	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.BYTE_SHIFT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if  (!current.equals(ZipLong.BYTE_SHIFT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if  (!current.equals(ZipLong.BYTE_SHIFT))  {	  if    (!sig.equals(ZipLong.BYTE_SHIFT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
40	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.isEnabled(ZipLong.NIBLET_MASK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.isEnabled(ZipLong.NIBLET_MASK))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.isEnabled(ZipLong.NIBLET_MASK))  {	  if    (!sig.equals(ZipLong.BYTE_SHIFT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
41	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.LFH_LEN))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
42	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.FLOAT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.FLOAT))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
43	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.BYTE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.BYTE_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.BYTE_SIG))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
44	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.LEN))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
45	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.FLOAT_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.FLOAT_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.FLOAT_SIG))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
46	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.BYTE_SHIFT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.BYTE_SHIFT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.BYTE_SHIFT))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
47	[BUG]  [BUGGY]  if(sig.equals(ZipLong.BYTE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.BYTE_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.BYTE_SIG))  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
48	[BUG]  [BUGGY]  if(sig.equals(ZipLong.BYTE_SHIFT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.BYTE_SHIFT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.BYTE_SHIFT))  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
49	[BUG]  [BUGGY]  if(sig.equals(ZipLong.BYTE_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.BYTE_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.BYTE_LEN))  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
50	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  0);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  0);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
51	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
52	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.FLOAT)&&  hasDataDescriptor)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.FLOAT)&&  hasDataDescriptor)  {	  if    (!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
53	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NONE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NONE_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NONE_SIG))  {	  if(!sig.equals(ZipLong.NONE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
54	[BUG]  [BUGGY]  if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN))  {	  if(!sig.equals(ZipLong.NONE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
55	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&&  versionMadeBy  ==  ZipFile.NIBLET_MASK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&&  versionMadeBy  ==  ZipFile.NIBLET_MASK)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SHIFT)&&  versionMadeBy  ==  ZipFile.NIBLET_MASK)  {	  if    (!sig.equals(ZipLong.BYTE_SHIFT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
56	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&&  versionMadeBy!=  ZipFile.NIBLET_MASK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&&  versionMadeBy!=  ZipFile.NIBLET_MASK)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SHIFT)&&  versionMadeBy!=  ZipFile.NIBLET_MASK)  {	  if    (!sig.equals(ZipLong.BYTE_SHIFT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
57	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&&  versionMadeBy  >=  ZipFile.NIBLET_MASK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&&  versionMadeBy  >=  ZipFile.NIBLET_MASK)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SHIFT)&&  versionMadeBy  >=  ZipFile.NIBLET_MASK)  {	  if    (!sig.equals(ZipLong.BYTE_SHIFT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
58	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_SHIFT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_SHIFT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_SHIFT))  {	  if(!sig.equals(ZipLong.NUMBER_INT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
59	[BUG]  [BUGGY]  if(sig.equals(ZipLong.NUMBER_INT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.NUMBER_INT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.NUMBER_INT))  {	  if(!sig.equals(ZipLong.NUMBER_INT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
60	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_INT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_INT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_INT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!sig.equals(ZipLong.NUMBER_INT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
61	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_FLOAT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_FLOAT))  {	  if(!sig.equals(ZipLong.NUMBER_FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
62	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FLOAT)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FLOAT)&&  hasDataDescriptor)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_FLOAT)&&  hasDataDescriptor)  {	  if(!sig.equals(ZipLong.NUMBER_FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
63	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)&&  versionMadeBy!=  ZipFile.NIBLET_MASK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)&&  versionMadeBy!=  ZipFile.NIBLET_MASK)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SIG)&&  versionMadeBy!=  ZipFile.NIBLET_MASK)  {	  if(!sig.equals(ZipLong.BYTE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
64	[BUG]  [BUGGY]  if(sig.equals(ZipLong.NULL))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.NULL))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.NULL))  {	  if(!sig.equals(ZipLong.NULL))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
65	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.BYTE_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.BYTE_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.BYTE_LEN))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
66	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.NONE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.NONE))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.NONE))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
67	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.NUMBER_FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.NUMBER_FLOAT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.NUMBER_FLOAT))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
68	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FIRST  ||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FIRST  ||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_FIRST  ||!sig.equals(ZipLong.LFH_LEN))  {	  if(!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
69	[BUG]  [BUGGY]  if(sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig.equals(ZipLong.LFH_LEN))  {	  if(!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
70	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.LFH_LEN)||!sig.equals(ZipLong.BYTE_SHIFT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.LFH_LEN)||!sig.equals(ZipLong.BYTE_SHIFT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.LFH_LEN)||!sig.equals(ZipLong.BYTE_SHIFT))  {	  if(!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
71	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.FOR))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.FOR))  {	  if(sig    ==    null    ||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
72	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_LIMIT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_LIMIT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_LIMIT))  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
73	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.LFH_LEN))  {	  if(!sig.equals(ZipLong.BYTE_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
74	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.FLOAT_SIG))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.FLOAT_SIG))  {	  if    (!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
75	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&  ZipShort.NIBLET_MASK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&  ZipShort.NIBLET_MASK)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SHIFT)&  ZipShort.NIBLET_MASK)  {	  if    (!sig.equals(ZipLong.BYTE_SHIFT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
76	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.NIBLET_MASK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.NIBLET_MASK))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.NIBLET_MASK))  {	  if    (!sig.equals(ZipLong.BYTE_SHIFT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
77	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&  ZipFile.NIBLET_MASK)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SHIFT)&  ZipFile.NIBLET_MASK)  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SHIFT)&  ZipFile.NIBLET_MASK)  {	  if    (!sig.equals(ZipLong.BYTE_SHIFT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
78	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_LEN))  {	  if(!sig.equals(ZipLong.NUMBER_INT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
79	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.NIBLET_MASK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.NIBLET_MASK))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.NIBLET_MASK))  {	  if(!sig.equals(ZipLong.BYTE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
80	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.LFH_LEN))  {	  if(!sig.equals(ZipLong.NONE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
81	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.SHORT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.SHORT))  {	  if(!sig.equals(ZipLong.NONE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
82	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  -1);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  -1);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
83	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  -1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  -1);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  -1);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
84	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  sig.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  sig.length);  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  sig.length);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
85	[BUG]  [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  sig.length());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lengthOfLastRead  =  ZipShort.getValue(lfh,  sig.length());  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lengthOfLastRead  =  ZipShort.getValue(lfh,  sig.length());	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
86	[BUG]  [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  sig.length());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  int  lfhLen  =  ZipShort.getValue(lfh,  sig.length());  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	int  lfhLen  =  ZipShort.getValue(lfh,  sig.length());	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
87	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.SHORT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.SHORT))  {	  if(!sig.equals(ZipLong.NULL))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
88	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_LEN))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_LEN))  {	  if(!sig.equals(ZipLong.NUMBER_FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
89	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SHIFT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);  if  (sig.equals(ZipLong.CFH_SIG))  {  hitCentralDirectory  =  true;  return  null;  }    [BUGGY]  if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SHIFT))  {  [BUGGY]    return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  int  versionMadeBy  =  ZipShort.getValue(lfh,  off);  off  +=  SHORT;  current.setPlatform((versionMadeBy  >>  ZipFile.BYTE_SHIFT)  &  ZipFile.NIBLET_MASK);  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	125	125	1	replace	if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SHIFT))  {	  if(!sig.equals(ZipLong.NUMBER_FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
