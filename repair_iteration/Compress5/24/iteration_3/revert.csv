projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LFH_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.LFH_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_STRING)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BLOCK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LITERAL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOLDER)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LP)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||!current.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FLOAT_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy>=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NONE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NUMBER_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LFH_LEN)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LIMIT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length());
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)||sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)||sig.equals(ZipLong.NUMBER_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)||sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)&&!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)||sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SIG)||!current.getValue().equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.FUNCTION)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FIELD_NAME)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||sig.equals(ZipLong.NONE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||sig.equals(ZipLong.NON_NULL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&current!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&off!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&VersionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)&&!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NON_NULL)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,0,sig.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,0L);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.isEnabled(ZipLong.BYTE_SHIFT)||!sig.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)||!current.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)&&!current.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&!current.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.isEnabled(ZipLong.BYTE_SHIFT)&&!sig.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.isEnabled(ZipLong.BYTE_SHIFT)||!current.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.isEnabled(ZipLong.BYTE_SHIFT)&&!current.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)||sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.LFH_LEN)||sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.LFH_LEN)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_SIZE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK||versionMadeBy==ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!versionMadeBy.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK||versionMadeBy!=ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_SECONDS)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.FLOAT_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BLOAT_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FLOAT_SUBJECT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.FUNCTION_SIZE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.FUNCTION)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.FUNCTION_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_SIZE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)&&hasEFS){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)&&hasEFS){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)&&hasEFS||hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.NULL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)||sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length-SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length()-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length()+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length()-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length()-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length()-SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length()-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,10);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,0,sig.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE_QUOTE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE_BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE_SIG)||!current.getValue().equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||versionMadeBy>=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy<ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&off>=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FILE)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FILE)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FILE)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FILE)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FOR)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FOR)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FOR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&current==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy==ZipFile.NIBLET_MASK||versionMadeBy==ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=this.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=getInflater().getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=getInflater(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=getOutputFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SHIFT)||!current.getValue().equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SHIFT)&&versionMadeBy==ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SHIFT)||!current.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)&&!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)&&!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FLOAT)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BLOCK_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BLOCK)&&!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BLOCK)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!versionMadeBy.equals(ZipLong.BYTE_SIG)||!versionMadeBy.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.NIBLET_MILLIS)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,0L);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,10);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SIG)||!sig.equals(ZipLong.BYTE_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FLOAT)&&!sig.equals(ZipLong.NUMBER_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,off+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,off-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!lfh.equals(ZipLong.LP)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.LP)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,off+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,off-SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,off-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BLOCK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.getValue().equals(ZipLong.BYTE_SHIFT)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.getValue().equals(ZipLong.BYTE_SHIFT)&&!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.getValue().equals(ZipLong.BYTE_SHIFT)||!sig.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&&!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOR)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOR)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOR)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SIZE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.NUMBER_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NEGATIVE_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NULL_VALUE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)&&hasEFS){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)&&hasEFS||hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)&&hasEFS){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SIZE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,off+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_NAME)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SIG)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SIG)&&!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)&&!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(current.equals(ZipLong.BYTE_SIG)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,offset);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LITERAL)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LITERAL)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LITERAL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LITERAL)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,WORD-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT_QUOTE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT_PREFIX)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT_SIG)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_SIG)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!versionMadeBy.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_MASK)&&versionMadeBy==ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_MASK)||!versionMadeBy.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_MASK)&&versionMadeBy!=ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_MASK)&&versionMadeBy<ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LIMIT)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LIMIT)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)||sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)||sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)||sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&current==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&current!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&versionMadeBy==ZipFile.NIBLET_MASK||versionMadeBy==ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&versionMadeBy>=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.getValue().equals(ZipLong.BYTE_SIG)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.getValue().equals(ZipLong.BYTE_SIG)||!sig.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.getValue().equals(ZipLong.BYTE_SIG)&&!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SIG)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)&&!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)&&!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)&&!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INTEGER)&&!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)&&versionMadeBy==ZipFile.NIBLET_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)&&current==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)||versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)&&current!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_STRING)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_STRING)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&off!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)&&VersionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FLOAT)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FLOAT)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!versionMadeBy.equals(ZipLong.BYTE_SHIFT)&&!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!versionMadeBy.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&&!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,sig.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.CENTER)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig!=null||!sig.equals(ZipLong.NONE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)&&isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)&&isEnabled(Feature.QUOTE_FIELD_NAMES,false)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.NUMBER_FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)||!current.getValue().equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length()-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length()-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length()+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length()-SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length()-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length()-4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||sig.equals(ZipLong.BYTE_SIZE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||sig.equals(ZipLong.FUNCTION_SIZE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FLOAT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FLOAT)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LFH_LEN)&&!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_MASK)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)&&!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOLDER)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOLDER)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOLDER)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SIG)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)&&!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||ZipShort.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK||versionMadeBy==ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!versionMadeBy.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)|ZipShort.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)||sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)||versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy==ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)||sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)&&!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.NIBLET_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!versionMadeBy.equals(ZipLong.FLOAT)||!versionMadeBy.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)||!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SIZE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NUMBER_INT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NUMBER_SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NUMBER_BYTE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,-1L);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)&&!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_MASK)&&!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FIRST||sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.CENTER_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST||!sig.equals(ZipLong.LINE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)&&!current.equals(ZipFile.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length()+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INTEGER)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,off-SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FIRST||sig.equals(ZipLong.NULL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)||sig.equals(ZipLong.NULL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&&!current.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.BYTE_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)|ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK||versionMadeBy==ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK||versionMadeBy>=ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LP_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,12);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_STRING)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,0,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FOR)||!current.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FOR)&&!current.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)&&versionMadeBy>=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FLOAT)||!sig.equals(ZipLong.BYTE_SHEET)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SIG)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy!=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&&versionMadeBy>=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BLOCK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length()+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.FLOAT_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)&&!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.LP)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK||versionMadeBy==ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK||versionMadeBy!=ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK||versionMadeBy>=ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FOR_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)&&!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.BYTE_FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,index);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125longlfhLen=ZipShort.getValue(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=getInflater(sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BLOCK_FILE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BLOCK_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_FOLDER)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOLDER)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)&&!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SHIFT)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_QUOTE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)&&versionMadeBy==ZipFile.BYTE_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,off+4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE_SIG)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NEW)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SIG)&&!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)||!current.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)&&versionMadeBy!=ZipFile.NIBLET_SHIFT){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,readBytesOfEntry);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,out);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FIRST)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_QUOTE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_FROM)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_WORD)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_FOLDER)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)&&!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.FLOAT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)&&!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NULL)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BLOCK)&&hasDataDescriptor){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LIMIT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.LFH_LEN)||sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FUNCTION)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)&&!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FIRST)||sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.UNKNOWN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NULL)||sig.equals(ZipLong.SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NIBLET_MASK)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT_SIG)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT_SIG)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.FLOAT_SIG)||!sig.equals(ZipLong.NONE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_SHIFT)||current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NULL)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)||sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)||sig.equals(ZipLong.CFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intbytesReadFromStream=ZipShort.getValue(lfh,off)+SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_INT)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NUMBER_FLOAT)||sig.equals(ZipLong.CFH_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FOR)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FOR)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INTEGER)&&!sig.equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)||sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FUNCTION)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_STRING)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LIMIT)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.isEnabled(ZipLong.BYTE_SHIFT)||current.isEnabled(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FOR_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,sig.length*SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.getValue().equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BYTE_LIMIT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.BLOCK_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.FLOAT_BYTE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.FIELD_NAME)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOLDER)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_INT)&&isEnabled(Feature.QUOTE_FIELD_NAMES||hasDataDescriptor)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlfhLen=ZipShort.getValue(lfh,16);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SHIFT)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LITERAL)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LITERAL)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LITERAL)||!sig.equals(ZipLong.SHORT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LITERAL)&&!isDirectory()){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=getInflater(source);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125Inflaterinf=getInflater(inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig==null||!sig.equals(ZipLong.NUMBER_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK||!current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipShort.
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)|ZipShort.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipShort.NIBLET_MASK||!current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipShort.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_LEN)||!sig.equals(ZipLong.FIRST_LOAD)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FILE)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)&ZipShort.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)||sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)&ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE)||!sig.equals(ZipLong.CFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_FOR)||!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!current.getValue().equals(ZipLong.BYTE_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SIG)||!current.getValue().equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,-length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.NONE)||sig.equals(ZipLong.FOR)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_FIRST)||!sig.equals(ZipLong.BLOCK_SIZE)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE_SIG)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NONE_SIG)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SIG)||!sig.equals(ZipLong.BYTE_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SIG)||!sig.equals(ZipLong.LFH_LEN)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.NUMBER_SIG)||!sig.equals(ZipLong.BYTE_SHIFT)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.LP_SIG)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&ZipFile.NIBLET_MASK||!current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.BYTE_SHIFT)|ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125intlengthOfLastRead=ZipShort.getValue(lfh,off+1,sig.length);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&|!sig.equals(ZipLong.NIBLET_MASK)){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(!sig.equals(ZipLong.BYTE_SHIFT)&&current>=ZipFile.NIBLET_MASK){
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java125if(sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.BYTE_LEN)){
