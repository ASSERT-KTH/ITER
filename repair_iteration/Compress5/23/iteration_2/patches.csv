bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
2	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
3	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FUNCTION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FUNCTION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FUNCTION))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
4	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
5	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.FOR))  {	  if    (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
6	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(current);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(current);	  Inflater    inf    =    getNextZipEntry(sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
7	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(lfh);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(lfh);	  Inflater    inf    =    getNextZipEntry(sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
8	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(Long.MAX_VALUE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(Long.MAX_VALUE);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(Long.MAX_VALUE);	  Inflater    inf    =    getNextZipEntry(sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
9	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(current,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(current,  sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(current,  sig);	  Inflater    inf    =    getNextZipEntry(sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
10	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(Long.valueOf(lfh));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(Long.valueOf(lfh));  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(Long.valueOf(lfh));	  Inflater    inf    =    getNextZipEntry(sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
11	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(crc,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(crc,  sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(crc,  sig);	  Inflater    inf    =    getNextZipEntry(sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
12	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DIRECTORY))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DIRECTORY))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_DIRECTORY))  {	  if    (!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
13	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_QUOTE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_QUOTE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_QUOTE))  {	  if    (!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
14	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_LEN))  {	  if    (!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
15	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CENTER_DIR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CENTER_DIR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CENTER_DIR))  {	  if    (!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
16	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FLOAT))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
17	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FLOAT))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
18	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FLOAT))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
19	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.TRUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.TRUE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.TRUE))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
20	[BUG]  [BUGGY]  if(sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.TRUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.TRUE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.TRUE))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
21	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_CENTER)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!sig.equals(ZipLong.CFH_CENTER)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
22	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_SIG))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
23	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_SIG))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
24	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FUNCTION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FUNCTION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FUNCTION))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
25	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FOR))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
26	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.CFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.CFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_CENTER    ||!sig.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
27	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.CFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.CFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_CENTER    ||!sig.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
28	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN  ||!sig.equals(ZipLong.CFH_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN  ||!sig.equals(ZipLong.CFH_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_LEN  ||!sig.equals(ZipLong.CFH_CENTER))  {	  if    (!sig.equals(ZipLong.CFH_CENTER    ||!sig.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
29	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.STRING)||!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.STRING)||!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.STRING)||!sig.equals(ZipLong.FLOAT))  {	  if    (!sig.equals(ZipLong.STRING)||!current.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
30	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.STRING)&&!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.STRING)&&!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.STRING)&&!sig.equals(ZipLong.FLOAT))  {	  if    (!sig.equals(ZipLong.STRING)||!current.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
31	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!current.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!current.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)&&!current.equals(ZipLong.FLOAT))  {	  if    (!sig.equals(ZipLong.STRING)||!current.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
32	[BUG]  [BUGGY]  Inflater  inf  =  current.getOutputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.getOutputStream();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.getOutputStream();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
33	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(),  sig.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.getInputStream(),  sig.length);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.getInputStream(),  sig.length);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
34	[BUG]  [BUGGY]  Inflater  inf  =  current.readFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.readFully();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.readFully();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
35	[BUG]  [BUGGY]  Inflater  inf  =  current.read();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.read();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.read();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
36	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(),  sig.length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.getInputStream(),  sig.length;  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.getInputStream(),  sig.length;	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
37	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!sig.equals(ZipLong.CENTER)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
38	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if    (!sig.equals(ZipLong.CENTER)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
39	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DECLARATION)||!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DECLARATION)||!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_DECLARATION)||!current.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
40	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_DECLARATION)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_DECLARATION)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_DECLARATION)||!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
41	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DECLARATION)||!current.equals(ZipLong.CENTER_DECLARATION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DECLARATION)||!current.equals(ZipLong.CENTER_DECLARATION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_DECLARATION)||!current.equals(ZipLong.CENTER_DECLARATION))  {	  if    (!sig.equals(ZipLong.CENTER_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
42	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
43	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
44	[BUG]  [BUGGY]  Inflater  inf  =  current.getInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.getInput();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.getInput();	  Inflater    inf    =    sig.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
45	[BUG]  [BUGGY]  Inflater  inf  =  lfh.getInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  lfh.getInput();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  lfh.getInput();	  Inflater    inf    =    sig.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
46	[BUG]  [BUGGY]  Inflater  inf  =  sig.getOutput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.getOutput();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.getOutput();	  Inflater    inf    =    sig.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
47	[BUG]  [BUGGY]  Inflater  inf  =  sig.getInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.getInputFile();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.getInputFile();	  Inflater    inf    =    sig.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
48	[BUG]  [BUGGY]  Inflater  inf  =  sig.getFullInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.getFullInput();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.getFullInput();	  Inflater    inf    =    sig.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
49	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
50	[BUG]  [BUGGY]  if(!current.equals(ZipLong.CENTER_DIR)||!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!current.equals(ZipLong.CENTER_DIR)||!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!current.equals(ZipLong.CENTER_DIR)||!current.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
51	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_FILE)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_FILE)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_FILE)||!sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
52	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIR)/  ||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIR)/  ||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_DIR)/  ||!sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
53	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_PREFIX)||!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_PREFIX)||!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_PREFIX)||!current.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_PREFIX))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
54	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_PREFIX)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_PREFIX)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_PREFIX)||!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_PREFIX))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
55	[BUG]  [BUGGY]  Inflater  inf  =  this.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  this.getInflater();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  this.getInflater();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
56	[BUG]  [BUGGY]  Inflater  inf  =  getInflater(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getInflater(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getInflater(sig);	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
57	[BUG]  [BUGGY]  Inflater  inf  =  getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getInputStream();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getInputStream();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
58	[BUG]  [BUGGY]  Inflater  inf  =  getInflater().getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getInflater().getInputStream();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getInflater().getInputStream();	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
59	[BUG]  [BUGGY]  Inflater  inf  =  getInflater().inflate(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getInflater().inflate(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getInflater().inflate(sig);	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
60	[BUG]  [BUGGY]  sig.append('N');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append('N');  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append('N');	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
61	[BUG]  [BUGGY]  sig.append('n').append(current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append('n').append(current);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append('n').append(current);	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
62	[BUG]  [BUGGY]  sig.setLength(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.setLength(0);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.setLength(0);	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
63	[BUG]  [BUGGY]  sig.append('n').append(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append('n').append(lfh);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append('n').append(lfh);	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
64	[BUG]  [BUGGY]  sig.append('n').append('n');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append('n').append('n');  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append('n').append('n');	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
65	[BUG]  [BUGGY]  Inflater  inf  =  current.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.getInflater();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.getInflater();	  Inflater    inf    =    sig.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
66	[BUG]  [BUGGY]  Inflater  inf  =  sig.getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.getOutputFile();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.getOutputFile();	  Inflater    inf    =    sig.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
67	[BUG]  [BUGGY]  Inflater  inf  =  lfh.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  lfh.getInflater();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  lfh.getInflater();	  Inflater    inf    =    sig.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
68	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!sig.equals(ZipLong.STRING)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
69	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if    (!sig.equals(ZipLong.STRING)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
70	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if    (!sig.equals(ZipLong.STRING)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
71	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_LEN))  {	  if(!sig.equals(ZipLong.TRUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
72	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FALSE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FALSE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FALSE))  {	  if(!sig.equals(ZipLong.TRUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
73	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CLC32))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CLC32))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CLC32))  {	  if    (!sig.equals(ZipLong.CRC32))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
74	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CRC32)||!sig.equals(ZipLong.CLC32))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CRC32)||!sig.equals(ZipLong.CLC32))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CRC32)||!sig.equals(ZipLong.CLC32))  {	  if    (!sig.equals(ZipLong.CRC32))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
75	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CENTER_FOR)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CENTER_FOR)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CENTER_FOR)||!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_FOR)||!current.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
76	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CENTER_FOR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CENTER_FOR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CENTER_FOR)&&!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_FOR)||!current.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
77	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FOR)&&!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FOR)&&!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_FOR)&&!current.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_FOR)||!current.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
78	[BUG]  [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
79	[BUG]  [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
80	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
81	[BUG]  [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
82	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
83	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
84	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIG)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIG)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_DIG)||!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_DIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
85	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DIG)||!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DIG)||!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_DIG)||!current.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_DIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
86	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CENTER_DIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CENTER_DIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CENTER_DIG))  {	  if    (!sig.equals(ZipLong.CENTER_DIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
87	[BUG]  [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
88	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  null;  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_SIG))  {  return  null;	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
89	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
90	[BUG]  [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
91	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
92	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
93	[BUG]  [BUGGY]  Inflater  inf  =  current,  sig.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current,  sig.getInputStream();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current,  sig.getInputStream();	  Inflater    inf    =    sig.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
94	[BUG]  [BUGGY]  Inflater  inf  =  sig.getOutputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.getOutputStream();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.getOutputStream();	  Inflater    inf    =    sig.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
95	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)&&!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)&&!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_LEN)&&!sig.equals(ZipLong.LFH_SIG))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
96	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.LFH_SIG))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
97	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.FLOAT))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
98	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.CFH_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.CFH_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.CFH_CENTER))  {	  if    (!sig.equals(ZipLong.CFH_CENTER    ||!sig.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
99	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.CFH_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.CFH_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.CFH_CENTER))  {	  if    (!sig.equals(ZipLong.CFH_CENTER    ||!sig.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
100	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CFH_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CFH_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CFH_CENTER))  {	  if    (!sig.equals(ZipLong.CFH_CENTER    ||!sig.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
101	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.LP)||!current.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.LP)||!current.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.LP)||!current.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.LP))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
102	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.LP))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
103	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LFH_SIG))  {	  if    (!sig.equals(ZipLong.LP))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
104	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
105	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)&&!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)&&!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_LEN)&&!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
106	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_LEN)&&!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_LEN)&&!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_LEN)&&!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
107	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_LEN))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
108	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FUNCTION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FUNCTION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FUNCTION))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
109	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.SIG))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
110	[BUG]  [BUGGY]  if  (!string.equals(ZipLong.STRING)||!string.equals(ZipLong.SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!string.equals(ZipLong.STRING)||!string.equals(ZipLong.SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!string.equals(ZipLong.STRING)||!string.equals(ZipLong.SIG))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
111	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.SIG))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
112	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_LONG)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_LONG)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_LONG)||!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CFH_LONG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
113	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
114	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.LEN))  {	  if(!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
115	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.VALUE_FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.VALUE_FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.VALUE_FLOAT))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
116	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.VALUE_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.VALUE_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.VALUE_CENTER))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
117	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!current.equals(ZipLong.CENTER_SIZE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!current.equals(ZipLong.CENTER_SIZE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.VALUE_STRING)||!current.equals(ZipLong.CENTER_SIZE))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
118	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.VALUE_FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.VALUE_FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.VALUE_FLOAT))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
119	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FALSE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FALSE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FALSE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
120	[BUG]  [BUGGY]  if(sig.equals(ZipLong.FALSE)||  sig.equals(ZipLong.TRUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.FALSE)||  sig.equals(ZipLong.TRUE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.FALSE)||  sig.equals(ZipLong.TRUE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
121	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.FALSE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.FALSE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.FALSE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
122	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FALSE)||  sig.equals(ZipLong.TRUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FALSE)||  sig.equals(ZipLong.TRUE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FALSE)||  sig.equals(ZipLong.TRUE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
123	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.FALSE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.FALSE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.FALSE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
124	[BUG]  [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
125	[BUG]  [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
126	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
127	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
128	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
129	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
130	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FALSE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FALSE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FALSE))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
131	[BUG]  [BUGGY]  if(sig.equals(ZipLong.FALSE)||!sig.equals(ZipLong.TRUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.FALSE)||!sig.equals(ZipLong.TRUE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.FALSE)||!sig.equals(ZipLong.TRUE))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
132	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FALSE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FALSE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FALSE))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
133	[BUG]  [BUGGY]  Inflater  inf  =  getFullZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getFullZipEntry();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getFullZipEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
134	[BUG]  [BUGGY]  Inflater  inf  =  getNextFileEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextFileEntry();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextFileEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
135	[BUG]  [BUGGY]  Inflater  inf  =  getNextEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextEntry();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
136	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntryInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntryInputStream();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntryInputStream();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
137	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.FLOAT))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
138	[BUG]  [BUGGY]  if  (!string.equals(ZipLong.STRING)||!string.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!string.equals(ZipLong.STRING)||!string.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!string.equals(ZipLong.STRING)||!string.equals(ZipLong.FLOAT))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
139	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_LEN))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
140	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FLOAT))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
141	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_SIG))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
142	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LEN))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
143	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.CENTER_SIG))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
144	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CRC32))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CRC32))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CRC32))  {	  if    (!current.equals(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
145	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_LONG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_LONG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_LONG))  {	  if    (!current.equals(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
146	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FILE)||!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FILE)||!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_FILE)||!current.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_FILE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
147	[BUG]  [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
148	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FLOAT))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
149	[BUG]  [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
150	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_LEN))  {  return  null;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_LEN))  {  return  null;  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_LEN))  {  return  null;	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
151	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
152	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!current.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!current.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.ECD)||!current.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.ECD))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
153	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.ECD))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
154	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.FLOAT))  {	  if    (!sig.equals(ZipLong.ECD))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
155	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.CENTER_DECLARATION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.CENTER_DECLARATION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.CENTER_DECLARATION))  {	  if(!sig.equals(ZipLong.CUSTOM_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
156	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.LFH_LEN))  {	  if(!sig.equals(ZipLong.CUSTOM_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
157	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!current.equals(ZipLong.CENTER_DECLARATION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!current.equals(ZipLong.CENTER_DECLARATION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!current.equals(ZipLong.CENTER_DECLARATION))  {	  if(!sig.equals(ZipLong.CUSTOM_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
158	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.LFH_SIG))  {	  if(!sig.equals(ZipLong.CUSTOM_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
159	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CUSTOM_DECLARATION)||!sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.CUSTOM_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
160	[BUG]  [BUGGY]  Inflater  inf  =  getInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getInputFile();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getInputFile();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
161	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFileInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getOutputFileInput();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getOutputFileInput();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
162	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getOutputFile().getInputStream();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getOutputFile().getInputStream();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
163	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().length;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getOutputFile().length;  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getOutputFile().length;	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
164	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().getCharset();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getOutputFile().getCharset();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getOutputFile().getCharset();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
165	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DECEMBER)||!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DECEMBER)||!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_DECEMBER)||!current.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_DECEMBER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
166	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_DECEMBER)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_DECEMBER)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_DECEMBER)||!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_DECEMBER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
167	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FOR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FOR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_FOR)&&!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_FOR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
168	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CENTER_FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CENTER_FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CENTER_FOR))  {	  if    (!sig.equals(ZipLong.CENTER_FOR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
169	[BUG]  [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
170	[BUG]  [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
171	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(sig);	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
172	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
173	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(lfh);	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
174	[BUG]  [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
175	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
176	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.BLOCK_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.BLOCK_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.BLOCK_SIG))  {	  if    (!sig.equals(ZipLong.BLOCK_DEFAULT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
177	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DECLARATION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DECLARATION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK_DECLARATION))  {	  if    (!sig.equals(ZipLong.BLOCK_DEFAULT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
178	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DECLARED))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DECLARED))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK_DECLARED))  {	  if    (!sig.equals(ZipLong.BLOCK_DEFAULT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
179	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!current.equals(ZipLong.BLOCK_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!current.equals(ZipLong.BLOCK_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!current.equals(ZipLong.BLOCK_SIG))  {	  if    (!sig.equals(ZipLong.BLOCK_DEFAULT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
180	[BUG]  [BUGGY]  Inflater  inf  =  current.readFully(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.readFully(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.readFully(sig);	  Inflater    inf    =    current.readIn();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
181	[BUG]  [BUGGY]  Inflater  inf  =  sig.readIn();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.readIn();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.readIn();	  Inflater    inf    =    current.readIn();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
182	[BUG]  [BUGGY]  Inflater  inf  =  current.readFully(lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.readFully(lfh);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.readFully(lfh);	  Inflater    inf    =    current.readIn();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
183	[BUG]  [BUGGY]  Inflater  inf  =  current.readIn(),  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.readIn(),  bytesReadFromStream);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.readIn(),  bytesReadFromStream);	  Inflater    inf    =    current.readIn();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
184	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inflater  =  getInflater(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inflater  =  getInflater(sig);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
185	[BUG]  [BUGGY]  Inflater  inflater  =  sig.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inflater  =  sig.getInflater();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inflater  =  sig.getInflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
186	[BUG]  [BUGGY]  Inflater  inflater  =  getOutflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inflater  =  getOutflater();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inflater  =  getOutflater();	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
187	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(sig.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inflater  =  getInflater(sig.length);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inflater  =  getInflater(sig.length);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
188	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater().inflate(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inflater  =  getInflater().inflate(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inflater  =  getInflater().inflate(sig);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
189	[BUG]  [BUGGY]  fileNameLen  =  sig.getLength()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  fileNameLen  =  sig.getLength()  +  1;  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	fileNameLen  =  sig.getLength()  +  1;	  fileNameLen    =    sig.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
190	[BUG]  [BUGGY]  fileNameLen  =  current.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  fileNameLen  =  current.getLength();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	fileNameLen  =  current.getLength();	  fileNameLen    =    sig.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
191	[BUG]  [BUGGY]  fileNameLen  =  sig.getFileNameLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  fileNameLen  =  sig.getFileNameLength();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	fileNameLen  =  sig.getFileNameLength();	  fileNameLen    =    sig.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
192	[BUG]  [BUGGY]  fileNameLen  =  sig.getLength()  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  fileNameLen  =  sig.getLength()  +  2;  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	fileNameLen  =  sig.getLength()  +  2;	  fileNameLen    =    sig.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
193	[BUG]  [BUGGY]  fileNameLen  =  sig.getLength()  *  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  fileNameLen  =  sig.getLength()  *  2;  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	fileNameLen  =  sig.getLength()  *  2;	  fileNameLen    =    sig.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
194	[BUG]  [BUGGY]  fileNameLen  =  lfh.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  fileNameLen  =  lfh.getLength();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	fileNameLen  =  lfh.getLength();	  fileNameLen    =    sig.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
195	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER  ||  current.equals(ZipLong.CFH_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER  ||  current.equals(ZipLong.CFH_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_CENTER  ||  current.equals(ZipLong.CFH_CENTER))  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
196	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)||!current.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)||!current.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_CENTER)||!current.equals(ZipLong.LFH_SIG))  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
197	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CENTER))  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
198	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)||!current.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)||!current.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_CENTER)||!current.equals(ZipLong.LFH_LEN))  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
199	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)||!current.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)||!current.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_CENTER)||!current.equals(ZipLong.FLOAT))  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
200	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.LFH_LEN))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
201	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FUNCTION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FUNCTION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FUNCTION))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
202	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FLOAT))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
203	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.CENTER))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
204	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.STRING))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.STRING))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.STRING))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
205	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.LFH_SIG))  {	  if(!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
206	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.LFH_SIG))  {	  if(!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
207	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LFH_SIG))  {	  if(!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
208	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.FLOAT))  {	  if(!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
209	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FUNCTION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FUNCTION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FUNCTION))  {	  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
210	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FUNCTION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FUNCTION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FUNCTION))  {	  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
211	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_LEN)||!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_LEN)||!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_LEN)||!current.equals(ZipLong.CENTER_SIG))  {	  if    (!current.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
212	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_LEN)||!current.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_LEN)||!current.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_LEN)||!current.equals(ZipLong.FLOAT))  {	  if    (!current.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
213	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.LFH_LEN))  {	  if(!sig.equals(ZipLong.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
214	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.LEN))  {	  if(!sig.equals(ZipLong.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
215	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
216	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_FOR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_FOR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_FOR)&&!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CFH_FOR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
217	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CFH_FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CFH_FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CFH_FOR))  {	  if    (!sig.equals(ZipLong.CFH_FOR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
218	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FOR)||!sig.equals(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FOR)||!sig.equals(ZipLong.CFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_FOR)||!sig.equals(ZipLong.CFH_SIG))  {	  if    (!sig.equals(ZipLong.CFH_FOR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
219	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
220	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)/  ||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)/  ||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)/  ||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
221	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_FOR)||!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_FOR)||!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_FOR)||!current.equals(ZipLong.CENTER_SIG))  {	  if    (!current.equals(ZipLong.CFH_FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
222	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_FOR)||!current.equals(ZipLong.CENTER_DECEMBER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_FOR)||!current.equals(ZipLong.CENTER_DECEMBER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_FOR)||!current.equals(ZipLong.CENTER_DECEMBER))  {	  if    (!current.equals(ZipLong.CFH_FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
223	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_CENTER)&&!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
224	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.CENTER))  {	  if    (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
225	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CENTER,  true))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CENTER,  true))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CENTER,  true))  {	  if    (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
226	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_STRING))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_STRING))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_STRING))  {	  if    (!sig.equals(ZipLong.CFH_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
227	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_STRING)||!current.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_STRING)||!current.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_STRING)||!current.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CFH_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
228	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_DIR)||!current.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
229	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_DIR)||!current.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
230	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DIR)&&!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DIR)&&!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_DIR)&&!current.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_DIR)||!current.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
231	[BUG]  [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(current!=  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
232	[BUG]  [BUGGY]  if(sig.equals(ZipLong.CENTER)||  sig.equals(ZipLong.TRUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.CENTER)||  sig.equals(ZipLong.TRUE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.CENTER)||  sig.equals(ZipLong.TRUE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
233	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.CENTER))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
234	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.CENTER))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
235	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.CENTER))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
236	[BUG]  [BUGGY]  if(sig.equals(ZipLong.FLOAT)||  sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.FLOAT)||  sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.FLOAT)||  sig.equals(ZipLong.CENTER))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
237	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER)||  sig.equals(ZipLong.TRUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER)||  sig.equals(ZipLong.TRUE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER)||  sig.equals(ZipLong.TRUE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
238	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_FILE)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_FILE)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_FILE)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CFH_FILE)||!current.equals(ZipLong.LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
239	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_FILE)&&!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_FILE)&&!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_FILE)&&!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CFH_FILE)||!current.equals(ZipLong.LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
240	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_FILE)&&!current.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_FILE)&&!current.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_FILE)&&!current.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CFH_FILE)||!current.equals(ZipLong.LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
241	[BUG]  [BUGGY]  fileNameLen  =  sig.getPurposeFlag();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  fileNameLen  =  sig.getPurposeFlag();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	fileNameLen  =  sig.getPurposeFlag();	  fileNameLen    =    sig.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
242	[BUG]  [BUGGY]  fileNameLen  =  sig.getLength()  +  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  fileNameLen  =  sig.getLength()  +  WORD;  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	fileNameLen  =  sig.getLength()  +  WORD;	  fileNameLen    =    sig.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
243	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.CENTER))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
244	[BUG]  [BUGGY]  if(sig.equals(ZipLong.LEN)||  sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.LEN)||  sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.LEN)||  sig.equals(ZipLong.CENTER))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
245	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.CENTER))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
246	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.LP))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.LP))  {	  if    (!current.equals(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
247	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CUSTOM_DECLARATION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CUSTOM_DECLARATION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CUSTOM_DECLARATION))  {	  if    (!current.equals(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
248	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.BLOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.BLOCK))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.BLOCK))  {	  if    (!current.equals(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
249	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.BYTE_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.BYTE_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.BYTE_CENTER))  {	  if    (!current.equals(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
250	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CUSTOM))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CUSTOM))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CUSTOM))  {	  if    (!current.equals(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
251	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CENTER_FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CENTER_FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CENTER_FOR))  {	  if    (!current.equals(ZipLong.CFH_FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
252	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
253	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
254	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
255	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
256	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
257	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
258	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
259	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
260	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LP))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LP))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.LP))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
261	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
262	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.FLOAT))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
263	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
264	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.ECD))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
265	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.ECD)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.ECD)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.ECD)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!sig.equals(ZipLong.ECD))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
266	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.CFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_CENTER    ||!sig.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
267	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inflater  =  getInflater(0);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inflater  =  getInflater(0);	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
268	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.LFH_LEN))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
269	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.LEN))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
270	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FIRST))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FIRST))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FIRST))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
271	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.SIG))  {	  if    (!sig.equals(ZipLong.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
272	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK)||!sig.equals(ZipLong.CENTER))  {	  if    (!sig.equals(ZipLong.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
273	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.NUMBER_INT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.NUMBER_INT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.NUMBER_INT))  {	  if(!sig.equals(ZipLong.TRUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
274	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.SHORT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.SHORT))  {	  if(!sig.equals(ZipLong.TRUE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
275	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.getInputStream(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.getInputStream(sig);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
276	[BUG]  [BUGGY]  Inflater  inf  =  current.getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.getOutputFile();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.getOutputFile();	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
277	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_LEN)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_LEN)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_LEN)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!current.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
278	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.VALUE_STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
279	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
280	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.SHORT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.SHORT))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
281	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
282	[BUG]  [BUGGY]  Inflater  inf  =  sig.readFully();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.readFully();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.readFully();	  Inflater    inf    =    sig.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
283	[BUG]  [BUGGY]  Inflater  inf  =  sig.read();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.read();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.read();	  Inflater    inf    =    sig.getInput();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
284	[BUG]  [BUGGY]  Inflater  inf  =  sig.getFullInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.getFullInflater();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.getFullInflater();	  Inflater    inf    =    sig.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
285	[BUG]  [BUGGY]  Inflater  inf  =  sig.getInflater()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.getInflater()  +  1;  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.getInflater()  +  1;	  Inflater    inf    =    sig.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
286	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LEN))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
287	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.BLOCK_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.BLOCK_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.BLOCK_LEN))  {	  if    (!sig.equals(ZipLong.BLOCK_DEFAULT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
288	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)&&  hasDataDescriptor)  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK_DEFAULT)&&  hasDataDescriptor)  {	  if    (!sig.equals(ZipLong.BLOCK_DEFAULT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
289	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.CENTER))  {	  if(!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
290	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LINE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LINE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LINE))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
291	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.LEN)||!sig.equals(ZipLong.CFH_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.LEN)||!sig.equals(ZipLong.CFH_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.LEN)||!sig.equals(ZipLong.CFH_CENTER))  {	  if(!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
292	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.CFH_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.CFH_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.CFH_CENTER))  {	  if(!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
293	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFile().readFully(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getOutputFile().readFully(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getOutputFile().readFully(sig);	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
294	[BUG]  [BUGGY]  Inflater  inf  =  getOutputPurposeFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getOutputPurposeFile();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getOutputPurposeFile();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
295	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LP))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LP))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.LP))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
296	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LP))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LP))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.LP))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
297	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.CENTER))  {	  if(!sig.equals(ZipLong.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
298	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FUNCTION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FUNCTION))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FUNCTION))  {	  if(!sig.equals(ZipLong.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
299	[BUG]  [BUGGY]  Inflater  inf  =  current.readIn(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.readIn(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.readIn(sig);	  Inflater    inf    =    current.readIn();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
300	[BUG]  [BUGGY]  Inflater  inf  =  current.read(sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.read(sig);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.read(sig);	  Inflater    inf    =    current.readIn();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
301	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LFH_LONG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LFH_LONG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LFH_LONG))  {	  if    (!sig.equals(ZipLong.LP))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
302	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LP))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LP))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.LP)||!sig.equals(ZipLong.LP))  {	  if    (!sig.equals(ZipLong.LP))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
303	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.TRUE))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
304	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.NUMBER_INT))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
305	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LP))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LP))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.LP))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
306	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.MIN_VALUE))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.MIN_VALUE))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.MIN_VALUE))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
307	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
308	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NULL))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NULL))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.NULL))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
309	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LP))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LP))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.LP))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
310	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
311	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CRC32)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CRC32)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CRC32)||!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.CRC32))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
312	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CRC32)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CRC32)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CRC32)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CRC32))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
313	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CRC))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CRC))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CRC))  {	  if    (!sig.equals(ZipLong.CRC32))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
314	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_STRING))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_STRING))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_STRING))  {	  if    (!sig.equals(ZipLong.CFH_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
315	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
316	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.LEN))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
317	[BUG]  [BUGGY]  if(sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.CENTER))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
318	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.FLOAT))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
319	[BUG]  [BUGGY]  if  (sig.equals(ZipLong.CENTER)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (sig.equals(ZipLong.CENTER)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (sig.equals(ZipLong.CENTER)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!sig.equals(ZipLong.CENTER)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
320	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)&&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasDataDescriptor)  {	  if    (!sig.equals(ZipLong.CENTER)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
321	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)&&  hasDataDescriptor)  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_CENTER)&&  hasDataDescriptor)  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
322	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)||  sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)||  sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_CENTER)||  sig.equals(ZipLong.LFH_SIG))  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
323	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)&&!current.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_CENTER)&&!current.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_CENTER)&&!current.equals(ZipLong.LEN))  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
324	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(sig,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(sig,  0);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(sig,  0);	  Inflater    inf    =    getNextZipEntry(sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
325	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(sig,  lfh);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(sig,  lfh);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(sig,  lfh);	  Inflater    inf    =    getNextZipEntry(sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
326	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(sig,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(sig,  current);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(sig,  current);	  Inflater    inf    =    getNextZipEntry(sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
327	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
328	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  hasDataDescriptor))  {	  if    (!sig.equals(ZipLong.STRING)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
329	[BUG]  [BUGGY]  if(sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
330	[BUG]  [BUGGY]  if(sig.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.CENTER_DIR)&&!sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
331	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIR)/*||!sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIR)/*||!sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_DIR)/*||!sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
332	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER  ||!sig.equals(ZipLong.CFH_CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER  ||!sig.equals(ZipLong.CFH_CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER  ||!sig.equals(ZipLong.CFH_CENTER))  {	  if    (!sig.equals(ZipLong.CFH_CENTER    ||!sig.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
333	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)&&!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
334	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_CENTER)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
335	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_LEN))  {	  if    (!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
336	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.FALSE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.FALSE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)&&  sig.equals(ZipLong.FALSE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
337	[BUG]  [BUGGY]  if(sig.equals(ZipLong.CENTER)||  sig.equals(ZipLong.FALSE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.CENTER)||  sig.equals(ZipLong.FALSE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.CENTER)||  sig.equals(ZipLong.FALSE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
338	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CUSTOM_SIG))  {	  if(!sig.equals(ZipLong.CUSTOM_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
339	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)&&  hasDataDescriptor)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CUSTOM_DECLARATION)&&  hasDataDescriptor)  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CUSTOM_DECLARATION)&&  hasDataDescriptor)  {	  if(!sig.equals(ZipLong.CUSTOM_DECLARATION))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
340	[BUG]  [BUGGY]  if  (sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
341	[BUG]  [BUGGY]  sig.append('n').append(':');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append('n').append(':');  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append('n').append(':');	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
342	[BUG]  [BUGGY]  sig.append('n').append('-');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append('n').append('-');  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append('n').append('-');	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
343	[BUG]  [BUGGY]  sig.append(':');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append(':');  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append(':');	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
344	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.NUMBER_OF_RANGE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.NUMBER_OF_RANGE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.NUMBER_OF_RANGE))  {	  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
345	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LEN))  {	  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
346	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.BIG))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
347	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FILE)||!sig.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FILE)||!sig.equals(ZipLong.CFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_FILE)||!sig.equals(ZipLong.CFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
348	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_LEN)||!sig.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_LEN)||!sig.equals(ZipLong.CFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_LEN)||!sig.equals(ZipLong.CFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
349	[BUG]  [BUGGY]  Inflater  inf  =  getPreviousZipEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getPreviousZipEntry();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getPreviousZipEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
350	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CUSTOM))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CUSTOM))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CUSTOM))  {	  if    (!sig.equals(ZipLong.CFH_LONG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
351	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_LONG)||!sig.equals(ZipLong.SHORT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_LONG)||!sig.equals(ZipLong.SHORT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_LONG)||!sig.equals(ZipLong.SHORT))  {	  if    (!sig.equals(ZipLong.CFH_LONG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
352	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BIG)||!sig.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BIG)||!sig.equals(ZipLong.CFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BIG)||!sig.equals(ZipLong.CFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
353	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.FLOAT)&&!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.FLOAT)&&!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.FLOAT)&&!sig.equals(ZipLong.LFH_SIG))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
354	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.FUNCTION)||!sig.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.FUNCTION)||!sig.equals(ZipLong.CFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.FUNCTION)||!sig.equals(ZipLong.CFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
355	[BUG]  [BUGGY]  Inflater  inf  =  sig.getInputStream(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.getInputStream(true);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.getInputStream(true);	  Inflater    inf    =    sig.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
356	[BUG]  [BUGGY]  Inflater  inf  =  sig.getFileInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.getFileInputStream();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.getFileInputStream();	  Inflater    inf    =    sig.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
357	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_LONG)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_LONG)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_LONG)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CFH_LONG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
358	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CENTER_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CENTER_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.CENTER_LEN))  {	  if    (!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
359	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.ECD)||!sig.equals(ZipLong.SIG))  {	  if    (!sig.equals(ZipLong.ECD))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
360	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_SIG)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
361	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FOR))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
362	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CENTER_FOR)||!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CENTER_FOR)||!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CENTER_FOR)||!current.equals(ZipLong.CENTER_SIG))  {	  if    (!sig.equals(ZipLong.CENTER_FOR)||!current.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
363	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
364	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LEN))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LEN))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.LEN))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
365	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NULL))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NULL))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.NULL))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
366	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FOR))  {	  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
367	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FULL))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FULL))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.FULL))  {	  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
368	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream(in);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.getInputStream(in);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.getInputStream(in);	  Inflater    inf    =    current.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
369	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FOR)&&!sig.equals(ZipLong.CFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_FOR)&&!sig.equals(ZipLong.CFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_FOR)&&!sig.equals(ZipLong.CFH_SIG))  {	  if    (!sig.equals(ZipLong.CFH_FOR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
370	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
371	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
372	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NULL))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.NULL))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.NULL))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
373	[BUG]  [BUGGY]  Inflater  inf  =  getInflater(sig.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getInflater(sig.length);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getInflater(sig.length);	  Inflater    inf    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
374	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FULL))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FULL))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FULL))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
375	[BUG]  [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextArchiveEntry();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextArchiveEntry();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
376	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntryLong();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntryLong();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntryLong();	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
377	[BUG]  [BUGGY]  Inflater  inf  =  getNextZipEntry(sig.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getNextZipEntry(sig.length);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getNextZipEntry(sig.length);	  Inflater    inf    =    getNextZipEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
378	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FULL))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FULL))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FULL))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
379	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.VALUE_STRING)||!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
380	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.VALUE_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.VALUE_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.VALUE_LEN))  {	  if    (!sig.equals(ZipLong.VALUE_STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
381	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.STRING)||!current.equals(ZipLong.FLOAT))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.STRING)||!current.equals(ZipLong.FLOAT))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.STRING)||!current.equals(ZipLong.FLOAT))  {	  if    (!sig.equals(ZipLong.STRING)||!current.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
382	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LEN))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LEN))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.LEN))  {  return  null;  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
383	[BUG]  [BUGGY]  Inflater  inf  =  sig.inflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.inflater();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.inflater();	  Inflater    inf    =    sig.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
384	[BUG]  [BUGGY]  Inflater  inf  =  sig.toInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  sig.toInflater();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  sig.toInflater();	  Inflater    inf    =    sig.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
385	[BUG]  [BUGGY]  Inflater  inf  =  current.readFully(sig,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  current.readFully(sig,  LFH_LEN);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  current.readFully(sig,  LFH_LEN);	  Inflater    inf    =    current.readIn();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
386	[BUG]  [BUGGY]  Inflater  inf  =  getOutputFileExterns();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  getOutputFileExterns();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  getOutputFileExterns();	  Inflater    inf    =    getOutputFile();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
387	[BUG]  [BUGGY]  Inflater  inf  =  inputStream.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inf  =  inputStream.getInputStream();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inf  =  inputStream.getInputStream();	  Inflater    inf    =    sig.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
388	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DECEMBER)||!sig.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_DECEMBER)||!sig.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_DECEMBER)||!sig.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CENTER_DECEMBER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
389	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.LFH_LEN))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
390	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(sig);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(sig);  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.LFH_SIG))  {  return  new  ZipLong(sig);  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_SIG))    {    return    new    ZipLong(sig);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
391	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.LFH_LEN))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
392	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.LFH_LEN))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
393	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)||  sig.equals(ZipLong.FOR))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
394	[BUG]  [BUGGY]  if(sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.STRING)&&!sig.equals(ZipLong.LFH_SIG))  {	  if(sig.equals(ZipLong.STRING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
395	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_FOR)&&!current.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_FOR)&&!current.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_FOR)&&!current.equals(ZipLong.LFH_LEN))  {	  if    (!current.equals(ZipLong.CFH_FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
396	[BUG]  [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.FOR))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
397	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.TRUE)||  sig.equals(ZipLong.LFH_LEN))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
398	[BUG]  [BUGGY]  if(!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!current.equals(ZipLong.CENTER_SIG))  {	  if    (!current.equals(ZipLong.CFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
399	[BUG]  [BUGGY]  if(sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.FALSE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.FALSE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.CENTER)||!sig.equals(ZipLong.FALSE))  {	  if(sig.equals(ZipLong.TRUE)||!sig.equals(ZipLong.FALSE))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
400	[BUG]  [BUGGY]  if(sig.equals(ZipLong.FOR)||  sig.equals(ZipLong.CENTER))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.FOR)||  sig.equals(ZipLong.CENTER))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.FOR)||  sig.equals(ZipLong.CENTER))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
401	[BUG]  [BUGGY]  if(sig.equals(ZipLong.CENTER)&&  sig.equals(ZipLong.TRUE))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.CENTER)&&  sig.equals(ZipLong.TRUE))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.CENTER)&&  sig.equals(ZipLong.TRUE))  {	  if(sig.equals(ZipLong.TRUE)||    sig.equals(ZipLong.CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
402	[BUG]  [BUGGY]  sig.append(ZipLong.valueOf(lfh));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append(ZipLong.valueOf(lfh));  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append(ZipLong.valueOf(lfh));	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
403	[BUG]  [BUGGY]  sig.append(ZipLong.LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append(ZipLong.LFH_LEN);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append(ZipLong.LFH_LEN);	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
404	[BUG]  [BUGGY]  sig.append(ZipLong.NEGATIVE_INFINITY);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append(ZipLong.NEGATIVE_INFINITY);  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append(ZipLong.NEGATIVE_INFINITY);	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
405	[BUG]  [BUGGY]  sig.append(',');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  sig.append(',');  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	sig.append(',');	  sig.append('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
406	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.LFH_SIG))  {	  if    (!sig.equals(ZipLong.BLOCK_DEFAULT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
407	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.BLOCK_DEFAULT)||!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.BLOCK_DEFAULT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
408	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CENTER_LEN)&&!sig.equals(ZipLong.CFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CENTER_LEN)&&!sig.equals(ZipLong.CFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CENTER_LEN)&&!sig.equals(ZipLong.CFH_LEN))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
409	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.SIG))  {	  if(!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
410	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FLOAT)||!sig.equals(ZipLong.SIG))  {	  if(!sig.equals(ZipLong.FLOAT))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
411	[BUG]  [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null  ||!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null  ||!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
412	[BUG]  [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig  ==  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig  ==  null)  {  if(!sig.equals(ZipLong.FOR))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
413	[BUG]  [BUGGY]  ||!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  ||!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	||!sig.equals(ZipLong.LFH_LEN))  {  return  null;  }	  if(sig    ==    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    null;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
414	[BUG]  [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FUNCTION))  {  return  new  ZipArchiveEntry();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig!=  null)  {  if(!sig.equals(ZipLong.FUNCTION))  {  return  new  ZipArchiveEntry();  }  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig!=  null)  {  if(!sig.equals(ZipLong.FUNCTION))  {  return  new  ZipArchiveEntry();  }	  if(sig!=    null)    {    if(!sig.equals(ZipLong.LFH_LEN))    {    return    new    ZipArchiveEntry();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
415	[BUG]  [BUGGY]  fileNameLen  -=  sig.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  fileNameLen  -=  sig.getLength();  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	fileNameLen  -=  sig.getLength();	  fileNameLen    =    sig.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
416	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.FOR))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
417	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.FULL))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.FULL))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.FULL))  {	  if    (!sig.equals(ZipLong.CFH_LEN)||!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
418	[BUG]  [BUGGY]  if(!current.equals(ZipLong.CFH_CENTER)&&!current.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!current.equals(ZipLong.CFH_CENTER)&&!current.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!current.equals(ZipLong.CFH_CENTER)&&!current.equals(ZipLong.LFH_SIG))  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
419	[BUG]  [BUGGY]  if(!current.equals(ZipLong.CFH_CENTER)&&!current.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!current.equals(ZipLong.CFH_CENTER)&&!current.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!current.equals(ZipLong.CFH_CENTER)&&!current.equals(ZipLong.LFH_LEN))  {	  if    (!current.equals(ZipLong.CFH_CENTER))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
420	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.LOCK))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.LOCK))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.LOCK))  {	  if    (!sig.equals(ZipLong.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
421	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.BLOCK)&&!sig.equals(ZipLong.LFH_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.BLOCK)&&!sig.equals(ZipLong.LFH_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.BLOCK)&&!sig.equals(ZipLong.LFH_LEN))  {	  if    (!sig.equals(ZipLong.BLOCK))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
422	[BUG]  [BUGGY]  if(sig.equals(ZipLong.FOR)&&!sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.FOR)&&!sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.FOR)&&!sig.equals(ZipLong.LFH_SIG))  {	  if(sig.equals(ZipLong.TRUE)&&!sig.equals(ZipLong.LFH_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
423	[BUG]  [BUGGY]  if(!current.equals(ZipLong.CFH_LEN)||  sig.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!current.equals(ZipLong.CFH_LEN)||  sig.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!current.equals(ZipLong.CFH_LEN)||  sig.equals(ZipLong.LFH_SIG))  {	  if    (!current.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
424	[BUG]  [BUGGY]  if(!current.equals(ZipLong.CFH_LEN)&&!current.equals(ZipLong.LFH_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!current.equals(ZipLong.CFH_LEN)&&!current.equals(ZipLong.LFH_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!current.equals(ZipLong.CFH_LEN)&&!current.equals(ZipLong.LFH_SIG))  {	  if    (!current.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
425	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_LEN)&&!current.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_LEN)&&!current.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_LEN)&&!current.equals(ZipLong.CENTER_SIG))  {	  if    (!current.equals(ZipLong.CFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
426	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIG)||!sig.equals(ZipLong.CENTER_LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.CENTER_DIG)||!sig.equals(ZipLong.CENTER_LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.CENTER_DIG)||!sig.equals(ZipLong.CENTER_LEN))  {	  if    (!sig.equals(ZipLong.CENTER_DIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
427	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(sig.getLongValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inflater  =  getInflater(sig.getLongValue());  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inflater  =  getInflater(sig.getLongValue());	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
428	[BUG]  [BUGGY]  Inflater  inflater  =  getInflater(sig.longValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  Inflater  inflater  =  getInflater(sig.longValue());  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	Inflater  inflater  =  getInflater(sig.longValue());	  Inflater    inflater    =    getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
429	[BUG]  [BUGGY]  if  (!current.equals(ZipLong.CFH_FILE)||!current.equals(ZipLong.LEN))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!current.equals(ZipLong.CFH_FILE)||!current.equals(ZipLong.LEN))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!current.equals(ZipLong.CFH_FILE)||!current.equals(ZipLong.LEN))  {	  if    (!sig.equals(ZipLong.CFH_FILE)||!current.equals(ZipLong.LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
430	[BUG]  [BUGGY]  if(sig.equals(ZipLong.CENTER_DIR)||  sig.equals(ZipLong.CENTER_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(sig.equals(ZipLong.CENTER_DIR)||  sig.equals(ZipLong.CENTER_SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(sig.equals(ZipLong.CENTER_DIR)||  sig.equals(ZipLong.CENTER_SIG))  {	  if(!sig.equals(ZipLong.CENTER_DIR)||!sig.equals(ZipLong.CENTER_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
431	[BUG]  [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.SIG))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if(!sig.equals(ZipLong.FOR)||!sig.equals(ZipLong.SIG))  {	  if(!sig.equals(ZipLong.FOR))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
432	[BUG]  [BUGGY]  if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FOR))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      if  (current  !=  null)  {  closeEntry();  }  byte[]  lfh  =  new  byte[LFH_LEN];  try  {  readFully(lfh);  }  catch  (EOFException  e)  {  return  null;  }  ZipLong  sig  =  new  ZipLong(lfh);      [BUGGY]  if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FOR))  {  [BUGGY]      hitCentralDirectory  =  true;  return  null;  }  if  (!sig.equals(ZipLong.LFH_SIG))  {  return  null;  }  int  off  =  WORD;  current  =  new  ZipArchiveEntry();  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	121	121	1	replace	if  (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.FOR))  {	  if    (!sig.equals(ZipLong.STRING)||!sig.equals(ZipLong.LFH_LEN))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
