bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.useUnicodeExtraFields)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,  [BUGGY]  this.useUnicodeExtraFields)  {  [BUGGY]  zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields)  {	boolean  useUnicodeExtraFields)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  [BUGGY]  zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);	boolean  useUnicodeExtraFields)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  this(inputStream,  encoding,  false);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,  [BUGGY]  this(inputStream,  encoding,  false);  [BUGGY]  zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  false);	boolean  useUnicodeExtraFields)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  this(inputStream,  encoding,  null);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,  [BUGGY]  this(inputStream,  encoding,  null);  [BUGGY]  zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  null);	boolean  useUnicodeExtraFields)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  super(encoding);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,  [BUGGY]  super(encoding);  [BUGGY]  zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(encoding);	boolean  useUnicodeExtraFields)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  this(inputStream,  encoding,  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,  [BUGGY]  this(inputStream,  encoding,  true);  [BUGGY]  zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  true);	boolean  useUnicodeExtraFields)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                AssertionFailedError  [CONTEXT]  public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,  [BUGGY]    [BUGGY]  zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	  	boolean  useUnicodeExtraFields)  {  	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  super(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,  [BUGGY]  super(inputStream,  encoding);  [BUGGY]  zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream,  encoding);	boolean  useUnicodeExtraFields)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,  [BUGGY]  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  [BUGGY]  zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields  =  useUnicodeExtraFields;	boolean  useUnicodeExtraFields)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
