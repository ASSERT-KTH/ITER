bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(encoding,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(encoding,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(encoding,  null);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  super(encoding,  this.useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(encoding,  this.useUnicodeExtraFields);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(encoding,  this.useUnicodeExtraFields);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  super(encoding,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(encoding,  true);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(encoding,  true);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  super(encoding,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(encoding,  0);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(encoding,  0);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  super(encoding,  0,  encoding.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(encoding,  0,  encoding.length);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(encoding,  0,  encoding.length);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  super(encoding,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(encoding,  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(encoding,  false);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  super(encoding,  fh);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(encoding,  fh);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(encoding,  fh);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  this(inputStream,  encoding,  zipEncoding,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  zipEncoding,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  zipEncoding,  null);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  this(inputStream,  encoding,  0,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  0,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  0,  null);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  this(inputStream,  encoding,  null,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  null,  zipEncoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  null,  zipEncoding);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  this(inputStream,  encoding,  null,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  null,  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  null,  false);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  this(inputStream,  encoding,  null,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  null,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  null,  null);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  this(inputStream,  encoding,  null,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  null,  true);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  null,  true);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  this(inputStream,  encoding,  ZipEncodingHelper.getZipEncoding(encoding));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  ZipEncodingHelper.getZipEncoding(encoding));  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  ZipEncodingHelper.getZipEncoding(encoding));	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  super(encoding,  inputStream);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(encoding,  inputStream);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(encoding,  inputStream);	  super(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  super(inputStream,  encoding,  false);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(inputStream,  encoding,  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream,  encoding,  false);	  super(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  super(inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream,  encoding,  useUnicodeExtraFields);	  super(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  super(inputStream,  encoding,  this.useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(inputStream,  encoding,  this.useUnicodeExtraFields);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream,  encoding,  this.useUnicodeExtraFields);	  super(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  super(inputStream,  encoding,  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(inputStream,  encoding,  true);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream,  encoding,  true);	  super(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  super(inputStream,  encoding,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(inputStream,  encoding,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream,  encoding,  null);	  super(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  super(inputStream,  encoding,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(inputStream,  encoding,  zipEncoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream,  encoding,  zipEncoding);	  super(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  this.useUnicodeExtraFields  =  encoding;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields  =  encoding;  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields  =  encoding;	  this.useUnicodeExtraFields    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  this.useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields;  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields;	  this.useUnicodeExtraFields    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  This.useUnicodeExtraFields  =  encoding;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  This.useUnicodeExtraFields  =  encoding;  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	This.useUnicodeExtraFields  =  encoding;	  this.useUnicodeExtraFields    =    useUnicodeExtraFields;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  encoding;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  encoding;  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  encoding;	  this.useUnicodeExtraFields    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  encoding)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  encoding)  {  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  encoding)  {	  this.useUnicodeExtraFields)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  zipEncoding)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  zipEncoding)  {  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  zipEncoding)  {	  this.useUnicodeExtraFields)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  true)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  true)  {  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  true)  {	  this.useUnicodeExtraFields)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  null)  {  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  null)  {	  this.useUnicodeExtraFields)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  in)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  in)  {  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  in)  {	  this.useUnicodeExtraFields)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  encoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  encoding);	  this.useUnicodeExtraFields)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveEntry(inputStream,  encoding,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.in  =  new  ZipArchiveEntry(inputStream,  encoding,  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.in  =  new  ZipArchiveEntry(inputStream,  encoding,  false);	  this(inputStream,    encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveEntry(inputStream,  encoding,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.in  =  new  ZipArchiveEntry(inputStream,  encoding,  true);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.in  =  new  ZipArchiveEntry(inputStream,  encoding,  true);	  this(inputStream,    encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  this(inputStream,  encoding,  true,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  true,  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  true,  false);	  this(inputStream,    encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  this(inputStream,  encoding,  true,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  true,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  true,  null);	  this(inputStream,    encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.in  =  new  ZipInputStream(inputStream,  encoding);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveEntry(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.in  =  new  ZipArchiveEntry(inputStream,  encoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.in  =  new  ZipArchiveEntry(inputStream,  encoding);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.current  =  new  ZipArchiveEntry(inputStream,  encoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.current  =  new  ZipArchiveEntry(inputStream,  encoding);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveEntry(inputStream,  encoding,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.in  =  new  ZipArchiveEntry(inputStream,  encoding,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.in  =  new  ZipArchiveEntry(inputStream,  encoding,  null);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  this(inputStream,  encoding,  false,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  false,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  false,  null);	  this(inputStream,    encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  this(inputStream,  encoding,  false,  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  false,  true);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  false,  true);	  this(inputStream,    encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  this(inputStream,  encoding,  false,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  false,  zipEncoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  false,  zipEncoding);	  this(inputStream,    encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  this(inputStream,  encoding,  false,  dataDescriptor);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  false,  dataDescriptor);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  false,  dataDescriptor);	  this(inputStream,    encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  0);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  0);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  inputStream);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  inputStream);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  fh);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  fh);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  fh);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  null);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  true);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  true);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
49	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  -1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  -1);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  -1);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  inputStream);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  inputStream);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  inputStream);	  this.useUnicodeExtraFields)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  inputStream)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  inputStream)  {  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  inputStream)  {	  this.useUnicodeExtraFields)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  this.useUnicodeExtraFields,  false)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields,  false)  {  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields,  false)  {	  this.useUnicodeExtraFields)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  super(inputStream,  encoding,  isEnabled);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(inputStream,  encoding,  isEnabled);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream,  encoding,  isEnabled);	  super(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  this.useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  this.useUnicodeExtraFields);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  this.useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  false);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  false);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  this.useUnicodeExtraFields  =  useUnicodeExtraFields?  ZipEncodingHelper.getZipEncoding(encoding):  null;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields  =  useUnicodeExtraFields?  ZipEncodingHelper.getZipEncoding(encoding):  null;  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields  =  useUnicodeExtraFields?  ZipEncodingHelper.getZipEncoding(encoding):  null;	  this.useUnicodeExtraFields    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  this.useUnicodeExtraFields  =  useUnicodeExtraFields?  ZipEncodingHelper.getZipEncoding(encoding):  zipEncoding;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields  =  useUnicodeExtraFields?  ZipEncodingHelper.getZipEncoding(encoding):  zipEncoding;  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields  =  useUnicodeExtraFields?  ZipEncodingHelper.getZipEncoding(encoding):  zipEncoding;	  this.useUnicodeExtraFields    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  this.useUnicodeExtraFields  =  useUnicodeExtraFields?  null  :  encoding;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.useUnicodeExtraFields  =  useUnicodeExtraFields?  null  :  encoding;  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.useUnicodeExtraFields  =  useUnicodeExtraFields?  null  :  encoding;	  this.useUnicodeExtraFields    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  super(inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(inputStream);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
60	[BUG]  [BUGGY]  this(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  super(out,  encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(out,  encoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(out,  encoding);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
62	[BUG]  [BUGGY]  this(inputStream,  encoding,  false,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  false,  useUnicodeExtraFields);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  false,  useUnicodeExtraFields);	  this(inputStream,    encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  this(inputStream,  String.valueOf(encoding),  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  String.valueOf(encoding),  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  String.valueOf(encoding),  false);	  this(inputStream,    encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
64	[BUG]  [BUGGY]  this(inputStream,  encoding,  false,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  false,  hasDataDescriptor);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  false,  hasDataDescriptor);	  this(inputStream,    encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  this(inputStream,  String.valueOf(encoding),  true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  String.valueOf(encoding),  true);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  String.valueOf(encoding),  true);	  this(inputStream,    encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  this(inputStream,  encoding,  true,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  true,  useUnicodeExtraFields);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  true,  useUnicodeExtraFields);	  this(inputStream,    encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  this(inputStream,  encoding,  true,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  true,  hasDataDescriptor);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  true,  hasDataDescriptor);	  this(inputStream,    encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  this(in,  encoding,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(in,  encoding,  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(in,  encoding,  false);	  this(inputStream,    encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  this(inputStream,  encoding,  null,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  null,  useUnicodeExtraFields);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  null,  useUnicodeExtraFields);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
70	[BUG]  [BUGGY]  this(inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  useUnicodeExtraFields);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
71	[BUG]  [BUGGY]  this(inputStream,  encoding,  useUnicodeExtraFields,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  useUnicodeExtraFields,  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  useUnicodeExtraFields,  null);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  this);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  this);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  this);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.parseZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.parseZipEncoding(encoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.parseZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
74	[BUG]  [BUGGY]  super(inputStream,  encoding,  ZipEncodingHelper.getZipEncoding(encoding));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  super(inputStream,  encoding,  ZipEncodingHelper.getZipEncoding(encoding));  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	super(inputStream,  encoding,  ZipEncodingHelper.getZipEncoding(encoding));	  super(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
75	[BUG]  [BUGGY]  This(inputStream,  encoding,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  This(inputStream,  encoding,  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	This(inputStream,  encoding,  false);	  this(inputStream,    encoding,    true);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
76	[BUG]  [BUGGY]  this(inputStream,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  useUnicodeExtraFields,  false);	  this(inputStream,    encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
77	[BUG]  [BUGGY]  this(inputStream,  encoding,  false,  ZipEncodingHelper.getZipEncoding(encoding));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  false,  ZipEncodingHelper.getZipEncoding(encoding));  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  false,  ZipEncodingHelper.getZipEncoding(encoding));	  this(inputStream,    encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
78	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getCrcEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getCrcEncoding(encoding);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this.zipEncoding  =  ZipEncodingHelper.getCrcEncoding(encoding);	  super(encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  this(inputStream,  encoding,  null,  ZipEncodingHelper.getZipEncoding(encoding));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  null,  ZipEncodingHelper.getZipEncoding(encoding));  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  null,  ZipEncodingHelper.getZipEncoding(encoding));	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  this(inputStream,  encoding,  ZipEncodingHelper.getZipEncoding(encoding),  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  ZipArchiveInputStream(InputStream  inputStream,  String  encoding,    [BUGGY]  this(inputStream,  encoding,  ZipEncodingHelper.getZipEncoding(encoding),  null);  [BUGGY]    zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  this.useUnicodeExtraFields  =  useUnicodeExtraFields;  in  =  new  PushbackInputStream(inputStream,  buf.length);  }  [CLASS]  ZipArchiveInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  boolean  useUnicodeExtraFields  [VARIABLES]  byte[]  buf  boolean  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  ZipArchiveEntry  current  Inflater  inf  String  encoding  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  lengthOfLastRead  offsetInBuffer  readBytesOfEntry  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	101	101	1	replace	this(inputStream,  encoding,  ZipEncodingHelper.getZipEncoding(encoding),  null);	  this(inputStream,    encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
