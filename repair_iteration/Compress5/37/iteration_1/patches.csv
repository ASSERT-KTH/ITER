bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
2	[BUG]  [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
3	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
4	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2));  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
5	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
6	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
7	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  1);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
8	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  hasDataDescriptor);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
9	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
10	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
11	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
12	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
13	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  0);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  0);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
14	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
15	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off));	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
16	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasDataDescriptor);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
17	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
18	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
19	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  current);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
20	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  current);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
21	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
22	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  current);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
23	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  current);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
24	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasDataDescriptor);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasDataDescriptor);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
25	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
26	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
27	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
28	[BUG]  [BUGGY]  int  time  =  entryEncoding.getTime();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  entryEncoding.getTime();  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getTime();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
29	[BUG]  [BUGGY]  current.setTime(time);  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  current.setTime(time);  off  +=  WORD;  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(time);  off  +=  WORD;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
30	[BUG]  [BUGGY]  current.setTime(time);  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  current.setTime(time);  off  +=  SHORT;  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(time);  off  +=  SHORT;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
31	[BUG]  [BUGGY]  lfh  =  entryEncoding.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  lfh  =  entryEncoding.getValue();  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  entryEncoding.getValue();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
32	[BUG]  [BUGGY]  Inflater  inf  =  entryEncoding.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  Inflater  inf  =  entryEncoding.getInputStream();  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  entryEncoding.getInputStream();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
33	[BUG]  [BUGGY]  int  time  =  entryEncoding.getLocalMillis();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  entryEncoding.getLocalMillis();  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getLocalMillis();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
34	[BUG]  [BUGGY]  int  time  =  entryEncoding.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  entryEncoding.getValue();  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getValue();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
35	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  current);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
36	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
37	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  LFH_LEN);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
38	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
39	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  3);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  3);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
40	[BUG]  [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
41	[BUG]  [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
42	[BUG]  [BUGGY]  Inflater  inf  =  entryEncoding.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  Inflater  inf  =  entryEncoding.getInflater();  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  entryEncoding.getInflater();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
43	[BUG]  [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
44	[BUG]  [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
45	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1));  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
46	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
47	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
48	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
49	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
50	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
51	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
52	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  current.setTime(time);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  current.setTime(time);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
53	[BUG]  [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
54	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  sig);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  sig);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
55	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  sig);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
56	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;    [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor);  [BUGGY]    current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
