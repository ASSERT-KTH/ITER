bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
2	[BUG]  [BUGGY]  int  time  =  current.getTime();  if(time!=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  current.getTime();  if(time!=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  current.getTime();  if(time!=  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
3	[BUG]  [BUGGY]  final  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  final  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	final  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
4	[BUG]  [BUGGY]  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
5	[BUG]  [BUGGY]  long  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
6	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
7	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
8	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  2);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  2);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    2);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
9	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  entryEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  entryEncoding);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
10	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  currentDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  currentDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  currentDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
11	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
12	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  hasDataDescriptor,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  hasDataDescriptor,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  hasDataDescriptor,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
13	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
14	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
15	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  entryEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  entryEncoding);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
16	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
17	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  fileNameLen);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  fileNameLen);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
18	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
19	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  SHORT);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  SHORT);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
20	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  WORD);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  WORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
21	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
22	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
23	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
24	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
25	[BUG]  [BUGGY]  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  off  +=  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	off  +=  WORD;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
26	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
27	[BUG]  [BUGGY]  current.setTime(Long.getValue(lfh,  off));  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(Long.getValue(lfh,  off));  off  +=  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(Long.getValue(lfh,  off));  off  +=  WORD;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
28	[BUG]  [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  WORD;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
29	[BUG]  [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setMethod(ZipLong.getValue(lfh,  off));  off  +=  SHORT;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
30	[BUG]  [BUGGY]  current.setTime(lfh);  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(lfh);  off  +=  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(lfh);  off  +=  WORD;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
31	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD,  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  WORD,  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
32	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
33	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
34	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  WORD,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  WORD,  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  WORD,  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
35	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
36	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  currentDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  currentDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  currentDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
37	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
38	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
39	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor,  entryEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor,  entryEncoding);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
40	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
41	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
42	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  1);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
43	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  LFH_LEN);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
44	[BUG]  [BUGGY]  if(current  ==  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current  ==  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current  ==  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
45	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
46	[BUG]  [BUGGY]  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
47	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
48	[BUG]  [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  SHORT;	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
49	[BUG]  [BUGGY]  long  time  =  entryEncoding.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  entryEncoding.getValue();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  entryEncoding.getValue();	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
50	[BUG]  [BUGGY]  int  time  =  entryEncoding.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getLongValue();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getLongValue();	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
51	[BUG]  [BUGGY]  int  time  =  entryEncoding.getValue()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getValue()  -  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getValue()  -  1;	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
52	[BUG]  [BUGGY]  int  time  =  entryEncoding.getSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getSize();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getSize();	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
53	[BUG]  [BUGGY]  int  time  =  entryEncoding.getValue()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getValue()  +  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getValue()  +  1;	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
54	[BUG]  [BUGGY]  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	off  +=  SHORT;	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
55	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
56	[BUG]  [BUGGY]  current.setTime(lfh);  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(lfh);  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(lfh);  off  +=  SHORT;	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
57	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  null)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding!=  null)  {  current.setTime(time);  off  +=  SHORT;  }	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
58	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor,  entryEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor,  entryEncoding);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
59	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
60	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
61	[BUG]  [BUGGY]  Integer  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Integer  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Integer  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  short    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
62	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  3);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  3);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    3);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
63	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  3);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  3);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    3);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
64	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
65	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  2);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  2);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
66	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  -  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  -  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
67	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
68	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
69	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  0);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  0);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
70	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
71	[BUG]  [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
72	[BUG]  [BUGGY]  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
73	[BUG]  [BUGGY]  final  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  final  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	final  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
74	[BUG]  [BUGGY]  long  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
75	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    2,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
76	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor,  entryEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor,  entryEncoding);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    2,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
77	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    2,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
78	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    2,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
79	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  4,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  4,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  4,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    2,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
80	[BUG]  [BUGGY]  Inflater  inf  =  zipEncoding.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  zipEncoding.getInputStream();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  zipEncoding.getInputStream();	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
81	[BUG]  [BUGGY]  Inflater  inf  =  entryEncoding.getInputStream(),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  entryEncoding.getInputStream(),  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  entryEncoding.getInputStream(),  hasDataDescriptor);	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
82	[BUG]  [BUGGY]  Inflater  inf  =  entryEncoding.getInputStream(),  hasDataDescriptor;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  entryEncoding.getInputStream(),  hasDataDescriptor;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  entryEncoding.getInputStream(),  hasDataDescriptor;	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
83	[BUG]  [BUGGY]  Inflater  inf  =  current.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  current.getInputStream();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  current.getInputStream();	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
84	[BUG]  [BUGGY]  Inflater  inf  =  entryEncoding.getInputStream(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  entryEncoding.getInputStream(true);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  entryEncoding.getInputStream(true);	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
85	[BUG]  [BUGGY]  Inflater  inf  =  entryEncoding.getOutputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  entryEncoding.getOutputStream();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  entryEncoding.getOutputStream();	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
86	[BUG]  [BUGGY]  int  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
87	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  -  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  -  1;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
88	[BUG]  [BUGGY]  short  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  short  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	short  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
89	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
90	[BUG]  [BUGGY]  int  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
91	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  entryEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  entryEncoding);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
92	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
93	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
94	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  fileNameLen);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  fileNameLen);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  fileNameLen);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
95	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
96	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
97	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
98	[BUG]  [BUGGY]  final  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  final  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	final  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
99	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
100	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  SHORT);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  SHORT);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
101	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
102	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
103	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
104	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
105	[BUG]  [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
106	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  2,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  2,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  2,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
107	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  1,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  1,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  1,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
108	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
109	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
110	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  4);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  4);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  4);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
111	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  8);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  8);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  8);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
112	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  10);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  10);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  10);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
113	[BUG]  [BUGGY]  Integer  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Integer  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Integer  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  short    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
114	[BUG]  [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off),  hasDataDescriptor);	  short    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
115	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
116	[BUG]  [BUGGY]  if(current  ==  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current  ==  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current  ==  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
117	[BUG]  [BUGGY]  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
118	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
119	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  2);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  2);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
120	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
121	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  0);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  0);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
122	[BUG]  [BUGGY]  long  time  =  entryEncoding.getLocalMillis();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  entryEncoding.getLocalMillis();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  entryEncoding.getLocalMillis();	  int    time    =    entryEncoding.getLocalMillis();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
123	[BUG]  [BUGGY]  int  time  =  entryEncoding.getLocalMillis()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getLocalMillis()  +  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getLocalMillis()  +  1;	  int    time    =    entryEncoding.getLocalMillis();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
124	[BUG]  [BUGGY]  int  time  =  entryEncoding.getZipMillis();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getZipMillis();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getZipMillis();	  int    time    =    entryEncoding.getLocalMillis();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
125	[BUG]  [BUGGY]  int  time  =  entryEncoding.getLocalMillis()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getLocalMillis()  -  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getLocalMillis()  -  1;	  int    time    =    entryEncoding.getLocalMillis();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
126	[BUG]  [BUGGY]  int  time  =  entryEncoding.getZipLocalMillis();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getZipLocalMillis();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getZipLocalMillis();	  int    time    =    entryEncoding.getLocalMillis();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
127	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  current);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
128	[BUG]  [BUGGY]  long  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
129	[BUG]  [BUGGY]  long  time  =  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  entryEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  entryEncoding;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
130	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  -  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  -  1;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
131	[BUG]  [BUGGY]  long  time  =  EntryEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  EntryEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  EntryEncodingHelper.UTF8_ZIP_ENCODING;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
132	[BUG]  [BUGGY]  long  time  =  entryEncoding.getTime();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  entryEncoding.getTime();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  entryEncoding.getTime();	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
133	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  entryEncoding;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
134	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
135	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
136	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  entryEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  entryEncoding);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
137	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  1,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
138	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
139	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
140	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
141	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor,  entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor,  entryEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor,  entryEncoding);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
142	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
143	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
144	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
145	[BUG]  [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding  ==  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
146	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
147	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
148	[BUG]  [BUGGY]  final  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  final  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	final  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
149	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
150	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    LFH_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
151	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  LFH_LEN  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  LFH_LEN  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  LFH_LEN  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    LFH_LEN);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
152	[BUG]  [BUGGY]  Inflater  inf  =  zipEncoding.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  zipEncoding.getInflater();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  zipEncoding.getInflater();	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
153	[BUG]  [BUGGY]  Inflater  inf  =  entryEncoding.getInputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  entryEncoding.getInputFile();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  entryEncoding.getInputFile();	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
154	[BUG]  [BUGGY]  Inflater  inf  =  entryEncoding.getInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  entryEncoding.getInput();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  entryEncoding.getInput();	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
155	[BUG]  [BUGGY]  Inflater  inf  =  current.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  current.getInflater();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  current.getInflater();	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
156	[BUG]  [BUGGY]  Inflater  inf  =  entryEncoding.getOutputFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  entryEncoding.getOutputFile();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  entryEncoding.getOutputFile();	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
157	[BUG]  [BUGGY]  int  time  =  entryEncoding.getTime()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getTime()  -  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getTime()  -  1;	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
158	[BUG]  [BUGGY]  int  time  =  entryEncoding.getTime()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getTime()  +  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getTime()  +  1;	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
159	[BUG]  [BUGGY]  int  time  =  entryEncoding.getTimeInMillis();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getTimeInMillis();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getTimeInMillis();	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
160	[BUG]  [BUGGY]  int  time  =  entryEncoding.getTime()  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getTime()  -  2;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getTime()  -  2;	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
161	[BUG]  [BUGGY]  int  time  =  entryEncoding.getTime()  -  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getTime()  -  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getTime()  -  WORD;	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
162	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
163	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  WORD,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
164	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
165	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasEFS);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasEFS);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
166	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  sig);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
167	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  sig);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
168	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  1);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
169	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
170	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)+  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)+  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)+  1;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
171	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  WORD);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  WORD);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
172	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)-  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)-  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)-  1;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
173	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  2);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  2);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
174	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  2,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
175	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
176	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
177	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
178	[BUG]  [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	short  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1));	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
179	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1),  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  1),  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
180	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off),  current);	  int    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
181	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
182	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
183	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(off);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(off);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(off);	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
184	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(entryEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(entryEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(entryEncoding);	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
185	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(0);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(0);	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
186	[BUG]  [BUGGY]  lfh  =  entryEncoding.getFileName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  entryEncoding.getFileName();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  entryEncoding.getFileName();	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
187	[BUG]  [BUGGY]  lfh  =  entryEncoding.getValue()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  entryEncoding.getValue()  +  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  entryEncoding.getValue()  +  1;	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
188	[BUG]  [BUGGY]  lfh  =  entryEncoding.getShortValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  entryEncoding.getShortValue();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  entryEncoding.getShortValue();	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
189	[BUG]  [BUGGY]  lfh  =  zipEncoding.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  zipEncoding.getValue();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  zipEncoding.getValue();	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
190	[BUG]  [BUGGY]  lfh  =  entryEncoding.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  entryEncoding.getLongValue();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  entryEncoding.getLongValue();	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
191	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  0);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  0);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
192	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  current.setTime(time);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
193	[BUG]  [BUGGY]  current.setTime(ZipEncodingHelper.UTF8_ZIP_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(ZipEncodingHelper.UTF8_ZIP_ENCODING);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(ZipEncodingHelper.UTF8_ZIP_ENCODING);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
194	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)+  1;  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)+  1;  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)+  1;  current.setTime(time);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
195	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off));  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off));  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off));  current.setTime(time);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
196	[BUG]  [BUGGY]  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off));	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
197	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  1);  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  1);  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  +  1);  current.setTime(time);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
198	[BUG]  [BUGGY]  current.setTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(ZipLong.getValue(lfh,  off));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(ZipLong.getValue(lfh,  off));	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
199	[BUG]  [BUGGY]  int  time  =  entryEncoding.getTimeMillis();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getTimeMillis();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getTimeMillis();	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
200	[BUG]  [BUGGY]  int  time  =  entryEncoding.getTimeZone();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding.getTimeZone();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding.getTimeZone();	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
201	[BUG]  [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  zipEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  zipEncoding;	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
202	[BUG]  [BUGGY]  Inflater  inf  =  hasEFS?  zipEncoding.getInputStream()  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasEFS?  zipEncoding.getInputStream()  :  entryEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasEFS?  zipEncoding.getInputStream()  :  entryEncoding;	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
203	[BUG]  [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  inputStream;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  inputStream;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  inputStream;	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
204	[BUG]  [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  entryEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  entryEncoding;	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
205	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  SHORT);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  SHORT);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
206	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
207	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
208	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  2,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  2,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  2,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
209	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  0);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  0);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
210	[BUG]  [BUGGY]  long  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
211	[BUG]  [BUGGY]  long  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
212	[BUG]  [BUGGY]  long  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
213	[BUG]  [BUGGY]  long  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  hasEFS?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
214	[BUG]  [BUGGY]  long  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  fileNameLen;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  fileNameLen;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  fileNameLen;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
215	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
216	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  current  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
217	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  inf);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  inf);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
218	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  bytesReadFromStream);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  bytesReadFromStream);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  bytesReadFromStream);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
219	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  3));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  3));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
220	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  8));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  8));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  8));	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    2));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
221	[BUG]  [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding!=  ZipEncodingHelper.UTF8_ZIP_ENCODING)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
222	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(entryEncoding  ==  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(entryEncoding  ==  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
223	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    2,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
224	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    2,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
225	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor  -  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor  -  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    2,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
226	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1000);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1000);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1000);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
227	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  sig);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
228	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  sig);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
229	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2),  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2),  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2),  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
230	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  inf);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  inf);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
231	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  current  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  current  -  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  current  -  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
232	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  3);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD  +  3);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
233	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
234	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1),  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  -  1),  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
235	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
236	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  -  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off  -  1);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
237	[BUG]  [BUGGY]  current.setTime(off);  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(off);  off  +=  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(off);  off  +=  WORD;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
238	[BUG]  [BUGGY]  current.setTime(date);  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(date);  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(date);  off  +=  SHORT;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
239	[BUG]  [BUGGY]  current.setTime(lfh,  off);  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(lfh,  off);  off  +=  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(lfh,  off);  off  +=  WORD;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
240	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  2));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off  +  2));	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
241	[BUG]  [BUGGY]  if(current!=  null)  {  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  current.setTime(time);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  current.setTime(time);  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off);  current.setTime(time);  }	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
242	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)-  1;  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)-  1;  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)-  1;  current.setTime(time);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
243	[BUG]  [BUGGY]  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(time);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
244	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)+  1L;  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)+  1L;  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off)+  1L;  current.setTime(time);	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
245	[BUG]  [BUGGY]  if(current!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
246	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(!hasDataDescriptor)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(!hasDataDescriptor)  {  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
247	[BUG]  [BUGGY]  if(current!=  null)  {  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
248	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time  +  1);	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
249	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  SHORT,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  SHORT,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  SHORT,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
250	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  0);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  0);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
251	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  dataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  dataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  dataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
252	[BUG]  [BUGGY]  current.setTime(Long.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(Long.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(Long.getValue(lfh,  off));  off  +=  SHORT;	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
253	[BUG]  [BUGGY]  current.setSize(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setSize(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setSize(ZipShort.getValue(lfh,  off));  off  +=  SHORT;	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
254	[BUG]  [BUGGY]  if(current!=  null)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  current.setTime(time);  off  +=  SHORT;  }	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
255	[BUG]  [BUGGY]  current.setTime(off);  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(off);  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(off);  off  +=  SHORT;	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
256	[BUG]  [BUGGY]  current.setTime(lfh,  off);  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setTime(lfh,  off);  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setTime(lfh,  off);  off  +=  SHORT;	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
257	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
258	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  WORD);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  WORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off)+    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
259	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  SHORT);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  SHORT);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
260	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  2,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  2,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  2,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
261	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2.0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2.0);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2.0);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
262	[BUG]  [BUGGY]  lfh  =  entryEncoding.getDataDescriptor();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  entryEncoding.getDataDescriptor();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  entryEncoding.getDataDescriptor();	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
263	[BUG]  [BUGGY]  lfh  =  entryEncoding.getZipEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  entryEncoding.getZipEncoding();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  entryEncoding.getZipEncoding();	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
264	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
265	[BUG]  [BUGGY]  int  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
266	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  entryEncoding;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
267	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  ZIPEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  ZIPEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  ZIPEncodingHelper.UTF8_ZIP_ENCODING;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
268	[BUG]  [BUGGY]  int  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  ZIPEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  ZIPEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  entryEncoding?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  ZIPEncodingHelper.UTF8_ZIP_ENCODING;	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
269	[BUG]  [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInflater()  :  zipEncoding;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInflater()  :  zipEncoding;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasEFS?  entryEncoding.getInflater()  :  zipEncoding;	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
270	[BUG]  [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInflater()  :  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInflater()  :  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasEFS?  entryEncoding.getInflater()  :  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
271	[BUG]  [BUGGY]  Inflater  inf  =  hasEFS?  zipEncoding.getInflater()  :  entryEncoding.getInflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasEFS?  zipEncoding.getInflater()  :  entryEncoding.getInflater();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasEFS?  zipEncoding.getInflater()  :  entryEncoding.getInflater();	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
272	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2),  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2),  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  2),  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
273	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasEFS);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasEFS);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasEFS);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
274	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  SHORT;	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
275	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  inf);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  inf);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
276	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  SHORT);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  SHORT);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
277	[BUG]  [BUGGY]  if(current!=  null)  {  int  length  =  current.getLength();  if(!hasDataDescriptor)  {  current.setTime(length);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  length  =  current.getLength();  if(!hasDataDescriptor)  {  current.setTime(length);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  length  =  current.getLength();  if(!hasDataDescriptor)  {  current.setTime(length);  off  +=  SHORT;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
278	[BUG]  [BUGGY]  while(current!=  null)  {  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  while(current!=  null)  {  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	while(current!=  null)  {  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
279	[BUG]  [BUGGY]  Long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1));	  short    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
280	[BUG]  [BUGGY]  Long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  short    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
281	[BUG]  [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1);	  short    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
282	[BUG]  [BUGGY]  byte  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  byte  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	byte  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  short    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
283	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  SHORT,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
284	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  0);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  WORD,  0);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
285	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue(lfh,  off):  entryEncoding.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue(lfh,  off):  entryEncoding.getValue();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  entryEncoding.getValue(lfh,  off):  entryEncoding.getValue();	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
286	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue(lfh):  entryEncoding.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue(lfh):  entryEncoding.getValue();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  entryEncoding.getValue(lfh):  entryEncoding.getValue();	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
287	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue()  :  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue()  :  0;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  entryEncoding.getValue()  :  0;	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
288	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue()  :  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue()  :  LFH_LEN;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  entryEncoding.getValue()  :  LFH_LEN;	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
289	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1000,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1000,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1000,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
290	[BUG]  [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(time  <  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(time  <  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  time  =  current.getTime();  if(time  <  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
291	[BUG]  [BUGGY]  while(current!=  null)  {  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  while(current!=  null)  {  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	while(current!=  null)  {  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
292	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor  +  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  hasDataDescriptor  +  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
293	[BUG]  [BUGGY]  Inflater  inf  =  hasDataDescriptor?  entryEncoding.getInflater()  :  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasDataDescriptor?  entryEncoding.getInflater()  :  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasDataDescriptor?  entryEncoding.getInflater()  :  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
294	[BUG]  [BUGGY]  Inflater  inf  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  Inflater    inf    =    entryEncoding.getInflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
295	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor,  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasDataDescriptor,  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
296	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasdataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasdataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off  +  1),  hasdataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off    +    1),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
297	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)*  WORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)*  WORD);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)*  WORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    WORD);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
298	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  HORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  HORD);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  HORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    SHORT);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
299	[BUG]  [BUGGY]  if(hasDataDescriptor)  {  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(hasDataDescriptor)  {  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(hasDataDescriptor)  {  int  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
300	[BUG]  [BUGGY]  if(current!=  null)  {  long  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  long  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  long  time  =  current.getTime();  if(time  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
301	[BUG]  [BUGGY]  if(current!=  null)  {  long  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  long  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  long  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setTime(time);  off  +=  SHORT;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
302	[BUG]  [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  WORD;	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
303	[BUG]  [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasEFS?  entryEncoding.getInputStream()  :  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
304	[BUG]  [BUGGY]  Inflater  inf  =  hasEFS?  zipEncoding.getInputStream()  :  entryEncoding.getInputStream();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Inflater  inf  =  hasEFS?  zipEncoding.getInputStream()  :  entryEncoding.getInputStream();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Inflater  inf  =  hasEFS?  zipEncoding.getInputStream()  :  entryEncoding.getInputStream();	  Inflater    inf    =    entryEncoding.getInputStream();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
305	[BUG]  [BUGGY]  lfh  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
306	[BUG]  [BUGGY]  lfh  =  entryEncoding.getLfh();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  entryEncoding.getLfh();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  entryEncoding.getLfh();	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
307	[BUG]  [BUGGY]  lfh  =  entryEncoding.encode(zipEncoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  lfh  =  entryEncoding.encode(zipEncoding);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	lfh  =  entryEncoding.encode(zipEncoding);	  lfh    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
308	[BUG]  [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
309	[BUG]  [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  time  =  current.getTime();  if(!hasDataDescriptor)  {  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  WORD;  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
310	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
311	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(!hasDataDescriptor)  {  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(!hasDataDescriptor)  {  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  WORD;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    WORD;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
312	[BUG]  [BUGGY]  int  time  =  zipEncoding.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  zipEncoding.getValue();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  zipEncoding.getValue();	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
313	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue(lfh,  off):  zipEncoding.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getValue(lfh,  off):  zipEncoding.getValue();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  entryEncoding.getValue(lfh,  off):  zipEncoding.getValue();	  int    time    =    entryEncoding.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
314	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  WORD,  hasDataDescriptor);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  WORD,  hasDataDescriptor);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)/  WORD,  hasDataDescriptor);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
315	[BUG]  [BUGGY]  Short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  Short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	Short  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off));	  short    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
316	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  inf);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  inf);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
317	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  HORD);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  HORD);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  HORD);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
318	[BUG]  [BUGGY]  byte  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  byte  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	byte  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
319	[BUG]  [BUGGY]  short  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  short  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	short  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
320	[BUG]  [BUGGY]  boolean  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  boolean  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	boolean  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  current.setTime(time);	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
321	[BUG]  [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off));  off  +=  SHORT;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setSize(ZipLong.getValue(lfh,  off));  off  +=  SHORT;	  current.setTime(time);    off    +=    SHORT;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
322	[BUG]  [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(time  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  int  time  =  current.getTime();  if(time  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  int  time  =  current.getTime();  if(time  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
323	[BUG]  [BUGGY]  if(hasDataDescriptor)  {  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(hasDataDescriptor)  {  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(hasDataDescriptor)  {  int  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
324	[BUG]  [BUGGY]  if(current!=  null)  {  long  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(current!=  null)  {  long  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(current!=  null)  {  long  time  =  current.getTime();  if(time  >=  0)  {  throw  new  IllegalStateException( " ");  }	  if(current!=    null)    {    int    time    =    current.getTime();    if(time    >=    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
325	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  3);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  3);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  3);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    3);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
326	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1,  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)+  1,  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
327	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  1,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  1,  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,  off)-  1,  sig);	  long    time    =    ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
328	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  +  1;	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
329	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor,  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  2,  hasDataDescriptor,  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    2,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
330	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(!hasDataDescriptor)  {  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(!hasDataDescriptor)  {  current.setCrc(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
331	[BUG]  [BUGGY]  if(!hasDataDescriptor)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(!hasDataDescriptor)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(!hasDataDescriptor)  {  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;  }	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    if(!hasDataDescriptor)    {    current.setTime(time);    off    +=    SHORT;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
332	[BUG]  [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  current.setSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	current.setSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
333	[BUG]  [BUGGY]  if(hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  if(hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	if(hasDataDescriptor)  {  current.setTime(time);  off  +=  WORD;  }	  current.setTime(time);    off    +=    WORD;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
334	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  SHORT,  current);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  SHORT,  current);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  SHORT,  current);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
335	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  SHORT);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)/  WORD,  SHORT);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)/    WORD,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
336	[BUG]  [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  |  DateTimeUtils.currentTimeMillis();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  |  DateTimeUtils.currentTimeMillis();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING  |  DateTimeUtils.currentTimeMillis();	  int    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
337	[BUG]  [BUGGY]  int  time  =  zipEncoding.getLocalMillis();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  zipEncoding.getLocalMillis();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  zipEncoding.getLocalMillis();	  int    time    =    entryEncoding.getLocalMillis();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
338	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor,  LFH_LEN);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor,  LFH_LEN);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  hasDataDescriptor,  LFH_LEN);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)-    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
339	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor  -  1);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  hasDataDescriptor  -  1);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    hasDataDescriptor);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
340	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  sig);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
341	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)-  1,  sig);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
342	[BUG]  [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)&  sig);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)&  sig);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)&  sig);	  int    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off),    sig);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
343	[BUG]  [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  inf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  inf);  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,  off)+  1,  inf);	  long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,    off)+    1,    current);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
344	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getTime()  :  0;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getTime()  :  0;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  entryEncoding.getTime()  :  0;	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
345	[BUG]  [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getTime()  :  LFH_LEN;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  hasDataDescriptor?  entryEncoding.getTime()  :  LFH_LEN;  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  hasDataDescriptor?  entryEncoding.getTime()  :  LFH_LEN;	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
346	[BUG]  [BUGGY]  int  time  =  zipEncoding.getTime();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  int  time  =  zipEncoding.getTime();  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	int  time  =  zipEncoding.getTime();	  int    time    =    entryEncoding.getTime();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
347	[BUG]  [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    AssertionFailedError      [CONTEXT]      (generalPurposeFlag  &  ZipArchiveOutputStream.EFS_FLAG)  !=  0;  final  ZipEncoding  entryEncoding  =  hasEFS  ?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  zipEncoding;  hasDataDescriptor  =  (generalPurposeFlag  &  8)  !=  0;  off  +=  SHORT;  current.setMethod(ZipShort.getValue(lfh,  off));  off  +=  SHORT;      [BUGGY]  long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off));  [BUGGY]      current.setTime(time);  off  +=  WORD;  if  (!hasDataDescriptor)  {  current.setCrc(ZipLong.getValue(lfh,  off));  off  +=  WORD;  current.setCompressedSize(ZipLong.getValue(lfh,  off));  off  +=  WORD;  [CLASS]  ZipArchiveInputStream  [METHOD]  getNextZipEntry  [RETURN_TYPE]  ZipArchiveEntry  [VARIABLES]  byte[]  buf  extraData  fileName  lfh  ZipLong  sig  boolean  closed  hasDataDescriptor  hasEFS  hitCentralDirectory  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  EOFException  e  ZipArchiveEntry  current  Inflater  inf  int  LFH_LEN  SHORT  WORD  bytesReadFromStream  extraLen  fileNameLen  generalPurposeFlag  lengthOfLastRead  off  offsetInBuffer  readBytesOfEntry  versionMadeBy  long  time  	projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	1.0	149	149	1	replace	long  time  =  ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,  off));	  long    time    =    ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,    off);    current.setTime(time);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
