projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off),current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149shorttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+2));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off),current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getTime();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(time);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(time);off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=entryEncoding.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=entryEncoding.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getLocalMillis();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){inttime=current.getTime();if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){inttime=current.getTime();if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=entryEncoding.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){inttime=current.getTime();if(time>=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){inttime=current.getTime();if(time==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off-1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off);current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149shorttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off),sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off),sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=current.getTime();if(time>=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=current.getTime();if(time!=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149finalinttime=current.getTime();if(time>=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=current.getTime();if(time==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=current.getTime();if(time>=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,currentDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,hasDataDescriptor,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,current,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,fileNameLen);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)/WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+WORD+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+WORD,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(Long.getValue(lfh,off));off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setMethod(ZipShort.getValue(lfh,off));off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setMethod(ZipLong.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(lfh);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+WORD,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off),sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)/sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)/WORD,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)-sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,currentDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,hasDataDescriptor,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,hasDataDescriptor,entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current==null){inttime=current.getTime();if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding!=null){inttime=current.getTime();if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=current.getTime();if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setCrc(ZipLong.getValue(lfh,off));off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setCrc(ZipLong.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=entryEncoding.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getLongValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getValue()-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getSize();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getValue()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(lfh);off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding!=null){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),hasDataDescriptor,entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),hasDataDescriptor,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Integertime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+SHORT+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+2));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149shorttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+2));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149time=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149finalinttime=current.getTime();if(time==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=current.getTime();if(time==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2,hasDataDescriptor,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2,hasDataDescriptor,entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/4,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=zipEncoding.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=entryEncoding.getInputStream(),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=entryEncoding.getInputStream(),hasDataDescriptor;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=current.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=entryEncoding.getInputStream(true);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=entryEncoding.getOutputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149shorttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),fileNameLen);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding==ZipEncodingHelper.UTF8_ZIP_ENCODING){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding!=null){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149finalinttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-WORD+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off-1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149shorttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off-1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)/2,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)-1,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+1,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/4);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/8);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/10);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Integertime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149shorttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding!=null){inttime=current.getTime();if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current==null){inttime=current.getTime();if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=current.getTime();if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)/1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=entryEncoding.getLocalMillis();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getLocalMillis()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getZipMillis();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getLocalMillis()-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getZipLocalMillis();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=entryEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=EntryEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=entryEncoding.getTime();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING+entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/1,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/1,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+2,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,hasDataDescriptor,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,hasDataDescriptor,entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+SHORT,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding==ZipEncodingHelper.UTF8_ZIP_ENCODING){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding!=null){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149finalinttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+LFH_LEN+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=zipEncoding.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=entryEncoding.getInputFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=entryEncoding.getInput();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=current.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=entryEncoding.getOutputFile();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getTime()-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getTime()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getTimeInMillis();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getTime()-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getTime()-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,hasDataDescriptor,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-WORD,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off)+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off)-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+2,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149shorttime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off+1),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off),current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding!=null){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(entryEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=entryEncoding.getFileName();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=entryEncoding.getValue()+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=entryEncoding.getShortValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=zipEncoding.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=entryEncoding.getLongValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off);current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(ZipEncodingHelper.UTF8_ZIP_ENCODING);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off)+1;current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off));current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setMethod(ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off+1);current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getTimeMillis();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding.getTimeZone();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasEFS?entryEncoding.getInputStream():zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasEFS?zipEncoding.getInputStream():entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasEFS?entryEncoding.getInputStream():inputStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasEFS?entryEncoding.getInputStream():entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,hasDataDescriptor+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-2,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=hasDataDescriptor?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=hasDataDescriptor?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=hasEFS?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=entryEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:fileNameLen;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,current+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,bytesReadFromStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+3));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+8));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding!=ZipEncodingHelper.UTF8_ZIP_ENCODING){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(entryEncoding==null){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2,hasDataDescriptor+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2,hasDataDescriptor-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1000);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+2),current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),current-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD+3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off-1),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(off);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(date);off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(lfh,off);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off+2));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off);current.setTime(time);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off)-1;current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off)+1L;current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(!hasDataDescriptor){inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/SHORT,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,dataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(Long.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setSize(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(off);off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setTime(lfh,off);off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-2,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2.0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=entryEncoding.getDataDescriptor();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=entryEncoding.getZipEncoding();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?ZipEncodingHelper.UTF8_ZIP_ENCODING:entryEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=entryEncoding?ZipEncodingHelper.UTF8_ZIP_ENCODING:ZIPEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasEFS?entryEncoding.getInflater():zipEncoding;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasEFS?entryEncoding.getInflater():ZipEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasEFS?zipEncoding.getInflater():entryEncoding.getInflater();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+2),hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),hasEFS);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setCrc(ZipShort.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){intlength=current.getLength();if(!hasDataDescriptor){current.setTime(length);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149while(current!=null){inttime=current.getTime();if(time==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149shorttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149bytetime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+SHORT,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+WORD,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?entryEncoding.getValue(lfh,off):entryEncoding.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?entryEncoding.getValue(lfh):entryEncoding.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?entryEncoding.getValue():0;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?entryEncoding.getValue():LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1000,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){inttime=current.getTime();if(time<0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149while(current!=null){inttime=current.getTime();if(time>=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,hasDataDescriptor+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasDataDescriptor?entryEncoding.getInflater():ZipEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=ZipEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),hasDataDescriptor,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off+1),hasdataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)*WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+HORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(hasDataDescriptor){inttime=current.getTime();if(time==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){longtime=current.getTime();if(time==0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){longtime=current.getTime();if(!hasDataDescriptor){current.setTime(time);off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setCrc(ZipShort.getValue(lfh,off));off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasEFS?entryEncoding.getInputStream():ZipEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Inflaterinf=hasEFS?zipEncoding.getInputStream():entryEncoding.getInputStream();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=ZipEncodingHelper.UTF8_ZIP_ENCODING;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=entryEncoding.getLfh();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149lfh=entryEncoding.encode(zipEncoding);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){inttime=current.getTime();if(!hasDataDescriptor){current.setCrc(ZipLong.getValue(lfh,off));off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){inttime=current.getTime();if(!hasDataDescriptor){current.setCrc(ZipShort.getValue(lfh,off));off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(!hasDataDescriptor){current.setCrc(ZipLong.getValue(lfh,off));off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(!hasDataDescriptor){current.setCrc(ZipShort.getValue(lfh,off));off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=zipEncoding.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?entryEncoding.getValue(lfh,off):zipEncoding.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)/WORD,hasDataDescriptor);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149Shorttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,HORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149bytetime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149shorttime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149booleantime=ZipEncodingHelper.UTF8_ZIP_ENCODING;current.setTime(time);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setSize(ZipLong.getValue(lfh,off));off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){inttime=current.getTime();if(time>0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(hasDataDescriptor){inttime=current.getTime();if(time>=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(current!=null){longtime=current.getTime();if(time>=0){thrownewIllegalStateException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)+1,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipShort.getValue(lfh,off)-1,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/2,hasDataDescriptor,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(!hasDataDescriptor){current.setCrc(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(!hasDataDescriptor){current.setMethod(ZipShort.getValue(lfh,off));off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149current.setSize(ZipLong.getValue(lfh,off));off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149if(hasDataDescriptor){current.setTime(time);off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/SHORT,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)/WORD,SHORT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipEncodingHelper.UTF8_ZIP_ENCODING|DateTimeUtils.currentTimeMillis();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=zipEncoding.getLocalMillis();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,hasDataDescriptor,LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,hasDataDescriptor-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)-1,sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)&sig);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipUtil.dosToJavaTime(ZipLong.getValue(lfh,off)+1,inf);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?entryEncoding.getTime():0;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=hasDataDescriptor?entryEncoding.getTime():LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149inttime=zipEncoding.getTime();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java149longtime=ZipEncodingHelper.UTF8_ZIP_ENCODING.getValue(lfh,off));
