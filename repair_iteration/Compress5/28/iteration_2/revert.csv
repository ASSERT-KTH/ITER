projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=lengthOfLastRead;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=LFH_LEN;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=lengthOfLastRead;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=lengthOfLastRead+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=bytesReadFromStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfhLen=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setInputStream(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setPath(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=SHORT;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=WORD+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>=ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=versionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy==ZipFile.BYTE_LEN);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy!=ZipFile.BYTE_LEN);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.DEFAULT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getLongValue(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=lengthOfLastRead-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,versionMadeBy,0,versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{returnnewZipArchiveEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy==ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||off>ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.FUNCTION;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.BYTE_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy!=ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=partesReadFromStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=SHORT;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff+=versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLocation(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.FUNCTION;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off==ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off!=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LONG){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LONG){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_SHIFT){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_NONE){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=off;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=WORD+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=offsetInBuffer;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off-=SHORT;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=SHORT;}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy<ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy<ZipFile.BYTE_LEN){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=ZipShort.getLongValue(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getLongValue(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getLongValue(lfh,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getLongValue(versionMadeBy,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=ZipShort.getValue(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getLongValue(wORD,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getIntValue(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN){off+=WORD;}elseif(versionMadeBy==ZipFile.BYTE_SHIFT){current.setPlatform(
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133OFF-=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intversionMadeBy=ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,off-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,offset);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=SHORT;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy==ZipFile.BYTE_LEN);off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy==ZipFile.BYTE_LEN);off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(off==ZipFile.BYTE_LEN);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy==ZipFile.BYTE_LEN);off+=2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=versionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy==ZipFile.BYTE_SHIFT);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=version;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipShort.LFH_LEN){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipShort.LFH_LEN){off-=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipShort.LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN){off-=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipShort.BYTE_SHIFT)&ZipShort.LFH_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133finalintlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+WORD);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off-WORD);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LONG){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_LEN){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.DEFAULT||versionMadeBy==ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.DEFAULT||versionMadeBy==ZipFile.BYTE_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=VersionMadeBy.DEFAULT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.DEFAULT||versionMadeBy!=ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133finalintlengthOfLastRead=ZipShort.getValue(lfh,off);current.setPath(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+WORD);current.setPath(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setPath(lengthOfLastRead+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setPath(lengthOfLastRead+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+1);current.setPath(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LONG){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133finalintlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+WORD);current.setLength(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy>=ZipFile.BYTE_LEN);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(off!=ZipFile.BYTE_LEN);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=WORD-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy/1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=LFH_LEN;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=LFH_LEN;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off-=LFH_LEN;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SIG){off-=LFH_LEN;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off-=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=WORD-versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy/WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy-WORD+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=lengthOfLastRead-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy==ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy[Delete]ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)|ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((VersionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LONG){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_MASK){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>=ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=lengthOfLastRead+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=lengthOfLastRead+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off-=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LONG){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=JsonStringEncoder.getInstance().getLocalFileName(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>=ZipFile.BYTE_SHIFT)|ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy==ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN&&versionMadeBy==ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy==ZipFile.BYTE_LONG;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy!=ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy>ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy>=ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.length-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.length-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.length*WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.length-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off-WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,offset);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT&&versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipFile.BYTE_LONG){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy>=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off+1);if(versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133finalintoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy==ZipFile.BYTE_LONG){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=LFH_LEN;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||off>=ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN&&off>ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||off>ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||off==ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||off>ZipFile.BYTE_LONG;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||off>ZipFile.BYTE_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||off!=ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetIn
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offset
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{returnnewZipArchiveEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{returnnewZipArchiveEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=SHORT;}else{returnnewZipArchiveEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{returnnewZipArchiveEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>=ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=VersionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off-=VersionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=VersionMadeBy;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=VersionMadeBy;}else{current.setPlatform(versionMadeBy+WORD,versionMadeBy+WORD);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=VersionMadeBy;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=VersionMadeBy;}else{current.setPlatform(versionMadeBy+WORD,versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LONG){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LONG){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT&&versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_SHIFT){off+=LFH_LEN;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off+1);if(versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133finalintoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy>=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy!=ZipFile.BYTE_LONG){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=sig.lengthOfLastRead;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=SHORT;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off-=SHORT;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=WORD+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=WORD+1L;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_NIBLET_MASK){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133finalintlengthOfLastRead=ZipShort.getValue(lfh,off);current.setInputStream(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(current!=null){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setInputStream(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+WORD);current.setInputStream(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setInputStream(lengthOfLastRead+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipShort.LFH_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipShort.LFH_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=JsonStringEncoder.getInstance().quoteAsImpl(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=JsonStringEncoder.getInstance().encodeAsISOControl(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=VersionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=VersionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=VersionMadeBy;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=VersionMadeBy;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=VersionMadeBy;}else{current.setPlatform(versionMadeBy+WORD,versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.LFH_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.LFH_LEN-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.LFH_LEN+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=bytesReadFromStream;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN){off+=bytesReadFromStream;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=bytesReadFromStream;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipShort.LFH_LEN){off+=bytesReadFromStream;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=bytesReadFromStream;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=bytesReadFromStream;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=WORD+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=lengthOfLastRead+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=lengthOfLastRead/1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>=ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy==ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy<ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy<ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=versionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off-=versionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=versionMadeBy;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off-=versionMadeBy;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=versionMadeBy;}else{thrownewIllegalArgumentException("");}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=versionMadeBy;}else{System.arraycopy(lfh,off,current,0,versionMadeBy,offsetInBuffer);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,offset);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,off,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>=ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.getValue();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=versionMadeBy.Offset;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=VersionMadeBy.FUNCTION;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.FUNCTION;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.FUNCTION||versionMadeBy==ZipFile.BYTE_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.FUNCTION||versionMadeBy!=ZipFile.BYTE_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_N){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){intoff+=versionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){intoff+=versionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT||versionMadeBy==ZipFile.NIBLET_MASK){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform(versionMadeBy+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setBase(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setSize(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform(versionMadeBy-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setRaw(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPath(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy!=ZipFile.BYTE_SHIFT);off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=version;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.length+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.length-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.length+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.length-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.length*WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=WORD+versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy+WORD+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy+lengthOfLastRead;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy+LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.LFH_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.LFH_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.LFH_LEN+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.LFH_LEN+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=VersionMadeBy.LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_MASK){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnu
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfhLen=ZipShort.getValue(lfh,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfhLen=ZipShort.getValue(lfh,off+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfhLen=ZipShort.getValue(lfh,off+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfhLen=ZipShort.getValue(lfh,offset);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfhLen=ZipShort.getValue(lfh,off,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfhLen=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(lfh,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(wORD,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(lfh);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(versionMadeBy,WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=ZipShort.getValue(lfh,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(Long.MAX_VALUE);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133finalintlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLocation(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLocation(lengthOfLastRead+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLocation(lengthOfLastRead+WORD);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+WORD);current.setLocation(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,versionMadeBy,0,versionMa
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{System.arraycopy(current,0,inf,versionMadeBy,0,versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{System.arraycopy(current,0,inf,versionMadeBy,0,versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_LEN){off-=WORD;}else{System.arraycopy(current,0,inf,versionMadeBy,0,versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{System.arraycopy(current,0,inf,versionMadeBy,0,versionMa
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off-=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=lengthOfLastRead-2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetIn
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intversionMadeBy=ZipShort.getValue(lfh,off);off+=offsetInBuffer;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intversionMadeBy=ZipShort.getValue(lfh,off);off+=versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.BYTE_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_LONG)&ZipFile.BYTE_LEN);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy+1L;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy+3;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT||off>ZipFile.BYTE_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT||off>ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT&&versionMadeBy==ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK+1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setInputStream(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+1);current.setInputStream(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff+=lengthOfLastRead;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff-=versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff+=versionMadeBy-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff+=versionMadeBy+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff+=BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off)-1;if(versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off+2);if(versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT&&versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy==ZipFile.BYTE_SHIFT);off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT&&versionMadeBy==ZipFile.BYTE_SHIFT){off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.NIBLET_MASK){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SIG){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=WORD;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=LFH_LEN;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_LONG)&ZipFile.BYTE_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>=ZipFile.BYTE_SHIFT)&ZipFile.BYTE_NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_LEN){off-=WORD;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=offset;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfhLen=ZipShort.getValue(lfh,off+3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>=ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy!=ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy>=ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHORT){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SIG){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.length+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN>off-=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(current!=null){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setPath(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.MAX_VALUE;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(versionMadeBy,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(versionMadeBy,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=bytesReadFromStream-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=bytesReadFromStream-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setLocale(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.length+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy+4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off>=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off!=ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off>=ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+1);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>>ZipFile.BYTE_LEN){off+=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=4;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT&&versionMadeBy!=ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT&&versionMadeBy!=ZipFile.BYTE_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT&&versionMadeBy>=ZipFile.BYTE_SHIFT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT&&versionMadeBy>=ZipFile.BYTE_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN,versionMadeBy){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{returnnewZipArchiveEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=bytesReadFromStream+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>=ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getLongValue(versionMadeBy,0);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.NIBLET_MASK){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.NIBLET_MASK){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.NIBLET_MASK){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy+8;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||current!=ZipFile.BYTE_LEN){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>=ZipFile.BYTE_LEN)&ZipFile.NIBLET_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy>>ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off==ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off<=ZipFile.BYTE_LEN){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||versionMadeBy==ZipFile.BYTE_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(versionMadeBy,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SIG){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN||versionMadeBy==ZipShort.LFH_LONG){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN||versionMadeBy==ZipShort.LFH_FLOAT){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN||versionMadeBy==ZipShort.LFH_FOR){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipShort.LFH_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN||versionMadeBy==ZipShort.LFH_FLAG){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.getLength();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPath((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off-1);if(versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.DEFAULT+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.DEFAULT+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.DEFAULT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_T_MASK){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.off;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_LEN){off-=WORD;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off-=WORD;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOf
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=lengthOfLastRead+WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setLocation(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+1);current.setLocation(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLocation(lengthOfLastRead-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,current);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT&&versionMadeBy!=ZipFile.BYTE_SHIFT){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT&&versionMadeBy!=ZipFile.BYTE_SHIFT){off+=LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.BYTE_SHIFT){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipShort.BYTE_SHIFT){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.BYTE_LEN){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipShort.BYTE_LEN){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipShort.LFH_LEN){off-=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_LEN||off>versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.getLength();
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.LFH_LEN-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.LFH_LEN+1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy!=ZipFile.BYTE_LEN);off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy>=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy>=ZipFile.BYTE_SHIFT){off+=WORD;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SHORT){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off-=SHORT;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133(versionMadeBy>=ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off-=WORD;}else{System.arraycopy(current,0,inf,versionMadeBy,0,versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133System.arraycopy(current,0,inf,versionMadeBy,0,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+1);current.setLength(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LITERAL){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy-1L;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy-10;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipFile.BYTE_LEN){off+=2;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipShort.LFH_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT&&versionMadeBy==ZipShort.LFH_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipShort.LFH_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT&&versionMadeBy==ZipShort.LFH_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy!=ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LONG)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset-=lengthOfLastRead;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_SECONDS){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT||versionMadeBy>ZipFile.NIBLET_MASK){off+=LFH_LEN;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);off+=offsetInBuffer;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>=ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=2;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=1;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off+=BYTE_SHIFT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy!=ZipFile.BYTE_LEN)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off<SHORT){if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off<SHORT){if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.length*2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off<ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setDelimiter(versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setInputStream(inputStream);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy==ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy==ZipFile.BYTE_LEN){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off-=WORD;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy!=ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||off>=ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off>=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LAST){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133fileNameLen=ZipShort.getValue(lfh,off+1,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff+=versionMadeBy.LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off)-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133longlengthOfLastRead=ZipShort.getValue(lfh,off);current.setPath(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPath(ZipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPath(zipShort.getValue(lfh,off));
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off!=ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&File.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off==ZipShort.LFH_LEN){off-=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off==ZipShort.LFH_LEN){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133longlengthOfLastRead=ZipShort.getValue(lfh,off);current.setFileName(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setFileName(ZipShort.getValue(lfh,off);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.DEFAULT||versionMadeBy>ZipShort.NIBLET_MASK;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.DEFAULT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy<ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.NIBLET_MASK){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipFile.BYTE_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT|off+=versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.FUNCTION-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(sig.equals(ZipLong.LFH_LEN)){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setInputStream(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(sig.equals(ZipLong.BYTE_LEN)){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setInputStream(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(sig.equals(ZipLong.FOR)){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setInputStream(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=WORD;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MAS
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off=WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off+=VersionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN){off+=VersionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.NIBLET_MASK){off+=VersionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off+1,versionMadeBy);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off-1);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>=ZipFile.BYTE_LEN)&ZipFile.BYTE_SHIFT);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,off+3);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfh=ZipShort.getValue(lfh,off)-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.intValue;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy.FUNCTION;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LONG){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=VersionMadeBy.LFH_LEN-1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.LFH_LEN+2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT||Offset<ZipFile.BYTE_SHIFT||Offset<ZipFile.NIBLET_MASK){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT||Offset<ZipFile.BYTE_SHIFT||Offset>ZipFile.NIBLET_MASK){off+=LFH_LEN;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT||Offset<ZipFile.BYTE_SHIFT||Offset<ZipFile.NIBLET_MASK;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=SHORT;}else{current.setPlatform((versionMadeBy!=ZipFile.BYTE_LEN)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LEN)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_LONG)&ZipFile.N
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT||versionMadeBy>ZipFile.NIBLET_MASK){off+=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlfhLen=ZipShort.getValue(lfh,off)-WORD;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy-ZipShort.LFH_LEN;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=versionMadeBy-ZipShort.MAX_VALUE;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_TOP){off+=SHORT;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off-=WORD;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returnnull;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off==ZipFile.BYTE_LEN){off-=SHORT;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(off==ZipFile.BYTE_LEN){off-=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off-=WORD;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off-=versionMadeBy.length*2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_LEN){intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy!=ZipFile.BYTE_LEN){off+=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoffsetInBuffer=ZipShort.getValue(lfh,off);if(versionMadeBy!=ZipFile.BYTE_LEN){off+=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(versionMadeBy,ZipShort.NONE);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getValue(versionMadeBy,ZipShort.NIBLET_MASK);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN){off+=bytesReadFromStream;}else{fileNameLen+=versionMadeBy;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN){off+=bytesReadFromStream;}else{returnnewZipArchiveEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN){off+=bytesReadFromStream;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipShort.LFH_LEN){off+=bytesReadFromStream;}else{current.setInputStream(inputStream);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT&&versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT&&versionMadeBy==ZipFile.BYTE_LEN){off-=WORD;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133off+=VersionMadeBy.getLongValue(versionMadeBy,ZipShort.NONE);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT||versionMadeBy!=ZipFile.BYTE_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<SHORT&&versionMadeBy!=ZipFile.BYTE_LEN){off-=SHORT;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133longlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLength(lengthOfLastRead+2);
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy!=ZipFile.BYTE_SHIFT){off+=WORD;}else{current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&ZipFile.NIBLET_MASK
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff=WORD+versionMadeBy;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133intoff+=lfh.length;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT||versionMadeBy>ZipFile.NIBLET_MASK){off+=WORD;}else{current.setPlatform(versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(sig.equals(ZipLong.LFH_LEN)){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLocation(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(sig.equals(ZipLong.FOR)){intlengthOfLastRead=ZipShort.getValue(lfh,off);current.setLocation(lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy!=ZipFile.BYTE_LEN){off+=2;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,fileNameLen,versionMadeBy,lengthOfLastRead);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offset<ZipFile.BYTE_SHIFT||off>ZipFile.BYTE_SHIFT?versionMadeBy:ZipFile.NIBLET_MASK;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off-=WORD;}else{returnnewZipArchiveEntry();}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,versionMadeBy,0,versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off-=SHORT;}else{System.arraycopy(current,0,inf,versionMadeBy,0,versionMadeBy);}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133Offsets.checkState(versionMadeBy==ZipFile.BYTE_LEN);off+=1;
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy==ZipFile.BYTE_LEN||versionMadeBy==ZipFile.BYTE_LEN){off-=SHORT;}else{intoffsetInBuffer=ZipShort.getValue(lfh,off);return
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133if(versionMadeBy<ZipFile.BYTE_SHIFT){off+=versionMadeBy;}else{returncurrent;}
projects/Compress5/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java133current.setPlatform((versionMadeBy>>ZipFile.BYTE_SHIFT)&zipFile.NIBLET_MASK);
