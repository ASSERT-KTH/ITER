projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=options.helpOptions();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optList.get(defaultLongOptPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)options.getComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optList.clone();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optList.get(0);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767for(Iteratori=optList.iterator();i.hasNext();){
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767for(Iteratori=prefixList.iterator();i.hasNext();){
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767for(Iteratori=options.iterator();i.hasNext();){
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767for(Iteratori=this.optList.iterator();i.hasNext();){
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.helpOptions();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkNotNull(optList);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList.size()==max);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList.size()>max);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.helpOption(optList);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767for(Iteratori=this.prefixList.iterator();i.hasNext();){
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.getOptionComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767sb.append(lpad);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=options.getOptionComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=options.comparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=options.defaultComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList.size()==max-1);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList.size()<max);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList.size()==max+1);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkNotNull(prefixList);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkNotNull(optBuf);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optList.getComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optionList.getComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)this.options.getComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767For(Iteratori=optList.iterator();i.hasNext();){
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optionList.get(defaultLongOptPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optList.get(defaultLongOptPrefix+1);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optionList.clone();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Comparatorcomparator=(OptionComparator)optList.clone();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.helpOption(prefixList);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.helpOption(defaultLongOptPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.helpOption(optBuf);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.helpOption(lpad);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.getOptionComparator(defaultLongOptPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.getOptionComparator(optList);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=optList.getOptionComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optList.get(1);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optionList.get(0);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767sb.append(defaultNewLine);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767sb.append(defaultLongOptPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767sb.append(defaultSyntaxPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList.size()>max+1);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList.size()>max-1);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.comparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.removeOption(optList);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optList.get(prefixList);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767for(Iteratori=options.prefixList.iterator();i.hasNext();){
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767for(Iteratori=options.optList.iterator();i.hasNext();){
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optList.get(optList.size()-1);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767sb.append(DefaultSyntaxPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList.size()>=max);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.findOptionComparator(defaultLongOptPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.defaultOptionComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=options.addOptionComparator(option);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=options.findOptionComparator(defaultLongOptPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)optList.get();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.helpOption(defaultDescPad);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList!=null);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767for(Iteratori=this.options.iterator();i.hasNext();){
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)prefixList.clone();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.helpOption(defaultLeftPad);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.findOptionComparator();
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(!optList.isEmpty());
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=options.findOptionComparator(defaultLeftPad);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=options.addOptionComparator(defaultLeftPad);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.getOptionComparator(defaultLeftPad);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.getOptionComparator(defaultWidth);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionoptionComparator=options.getOptionComparator(defaultDescPad);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767Preconditions.checkState(optList.size()>max&&optBuf.length()>max);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767sb.append(defaultWidth);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767OptionComparatorcomparator=(OptionComparator)prefixList.get(defaultLongOptPrefix);
projects/Cli33/src/main/java/org/apache/commons/cli/HelpFormatter.java767for(Iteratori=options.getOptions().iterator();i.hasNext();){
