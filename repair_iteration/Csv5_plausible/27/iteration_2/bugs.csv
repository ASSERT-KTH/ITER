bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.write('n');  }  else  {  out.write('t');  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  out.write('n');  }  else  {  out.write('t');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  out.write('n');  }  else  {  out.write('t');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('t');    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.write('n');  }  else  {  out.write('t');  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  null)  {  out.write('n');  }  else  {  out.write('t');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  null)  {  out.write('n');  }  else  {  out.write('t');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('t');    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.write('n');  }  else  {  out.write('t');  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  false)  {  out.write('n');  }  else  {  out.write('t');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  false)  {  out.write('n');  }  else  {  out.write('t');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('t');    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.write('n');  }  else  {  out.write('t');  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  false)  {  out.write('n');  }  else  {  out.write('t');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  false)  {  out.write('n');  }  else  {  out.write('t');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('t');    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('t');    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  values.length  -  1);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  values.length  -  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  values.length  -  1);	  System.arraycopy(values,    0,    printRecord,    0,    values.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(values,  0,  newRecord,  0,  values.length);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  newRecord,  0,  values.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  newRecord,  0,  values.length);	  System.arraycopy(values,    0,    printRecord,    0,    values.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(values,  0,  out,  0,  values.length);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  out,  0,  values.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  out,  0,  values.length);	  System.arraycopy(values,    0,    printRecord,    0,    values.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  1,  values.length);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  1,  values.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  1,  values.length);	  System.arraycopy(values,    0,    printRecord,    0,    values.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  values.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  values.length  +  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  values.length  +  1);	  System.arraycopy(values,    0,    printRecord,    0,    values.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  value.length,  0,  values.length);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  value.length,  0,  values.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  value.length,  0,  values.length);	  System.arraycopy(values,    0,    printRecord,    0,    values.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
12	[BUG]  [BUGGY]  getFormat().printRecord(values,  quote);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(values,  quote);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(values,  quote);	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
14	[BUG]  [BUGGY]  getFormat().printRecord(this,  values);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(this,  values);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(this,  values);	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
15	[BUG]  [BUGGY]  getFormat().printRecord(record,  values);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(record,  values);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(record,  values);	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
16	[BUG]  [BUGGY]  getFormat().printRecord(newRecord,  values);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(newRecord,  values);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(newRecord,  values);	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
17	[BUG]  [BUGGY]  getFormat().printRecord(this.values,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(this.values,  newRecord);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(this.values,  newRecord);	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
18	[BUG]  [BUGGY]  if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  else  {  println();  }	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
19	[BUG]  [BUGGY]  out.println();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.println();  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.println();	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  out.println();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  quote)  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  quote)  {  out.println();  }	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.println();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  quote)  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  quote)  {  out.println();  }	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.println();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  false)  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  false)  {  out.println();  }	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  false)  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  false)  {  out.println();  }	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
24	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	Appendable  out  =(Appendable)this.newRecord.clone();	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  Appendable  out  =(Appendable)this.values.get(newRecord);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	Appendable  out  =(Appendable)this.values.get(newRecord);	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  value.length  -  1);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  value.length  -  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  value.length  -  1);	  System.arraycopy(values,    0,    printRecord,    0,    value.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  value.length  +  1);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  value.length  +  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  value.length  +  1);	  System.arraycopy(values,    0,    printRecord,    0,    value.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(values,  0,  out,  0,  value.length);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  out,  0,  value.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  out,  0,  value.length);	  System.arraycopy(values,    0,    printRecord,    0,    value.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  value.length,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  value.length,  newRecord);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  value.length,  newRecord);	  System.arraycopy(values,    0,    printRecord,    0,    value.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  1,  value.length);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  1,  value.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  1,  value.length);	  System.arraycopy(values,    0,    printRecord,    0,    value.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  if(newRecord)  {  out.write('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  out.write('n');  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  out.write('n');  }  else  {  println();  }	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
32	[BUG]  [BUGGY]  if(newRecord)  {  out.write('n');  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  out.write('n');  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  out.write('n');  }  else  {  throw  new  IllegalStateException( " ");  }	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
33	[BUG]  [BUGGY]  if(newRecord)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
34	[BUG]  [BUGGY]  out.write('0');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.write('0');  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.write('0');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
35	[BUG]  [BUGGY]  out.write('#');  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.write('#');  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.write('#');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  quote);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  quote);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  quote);	  System.arraycopy(values,    0,    printRecord,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  1,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  1,  newRecord);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  1,  newRecord);	  System.arraycopy(values,    0,    printRecord,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(values,  0,  newRecord,  0,  printRecord.length);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  newRecord,  0,  printRecord.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  newRecord,  0,  printRecord.length);	  System.arraycopy(values,    0,    printRecord,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  newRecord.length);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  newRecord.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  newRecord.length);	  System.arraycopy(values,    0,    printRecord,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
40	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.write('n');  }  else  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  out.write('n');  }  else  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  out.write('n');  }  else  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.write('n');  }  else  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  null)  {  out.write('n');  }  else  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  null)  {  out.write('n');  }  else  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.write('n');  }  else  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  false)  {  out.write('n');  }  else  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  false)  {  out.write('n');  }  else  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.write('n');  }  else  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  false)  {  out.write('n');  }  else  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  false)  {  out.write('n');  }  else  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  ||  newRecord)  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  ||  newRecord)  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	||  newRecord)  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values)  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values)  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values)  {  println();  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  if(values  ==  null)  {  for(final  Appendable  out  :  values)  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values  ==  null)  {  for(final  Appendable  out  :  values)  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values  ==  null)  {  for(final  Appendable  out  :  values)  {  println();  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  if(values  ==  null)  {  for(final  Appendable  out  :  values)  {  print(out);  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values  ==  null)  {  for(final  Appendable  out  :  values)  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values  ==  null)  {  for(final  Appendable  out  :  values)  {  print(out);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  out.flush();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.flush();  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.flush();	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
49	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  quote)  {  out.flush();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  quote)  {  out.flush();  }	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
50	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  false)  {  out.flush();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  false)  {  out.flush();  }	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
51	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  quote)  {  out.flush();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  quote)  {  out.flush();  }	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
52	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  false)  {  out.flush();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  false)  {  out.flush();  }	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
53	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  out.flush();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  out.flush();  }	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
54	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  null)  {  out.flush();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  null)  {  out.flush();  }	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
55	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out.toString());  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out.toString());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out.toString());  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
56	[BUG]  [BUGGY]  for(final  Appendable  out  :  values)  {  print(out.toString());  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  for(final  Appendable  out  :  values)  {  print(out.toString());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	for(final  Appendable  out  :  values)  {  print(out.toString());  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
57	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.toArray(new  Appendable[values.size()  ]))  {  print(out.toString());  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.toArray(new  Appendable[values.size()  ]))  {  print(out.toString());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values.toArray(new  Appendable[values.size()  ]))  {  print(out.toString());  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
58	[BUG]  [BUGGY]  final  Appendable  out  :  values)  {  print(out.toString());  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  final  Appendable  out  :  values)  {  print(out.toString());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	final  Appendable  out  :  values)  {  print(out.toString());  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
59	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.keySet())  {  print(out.toString());  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.keySet())  {  print(out.toString());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values.keySet())  {  print(out.toString());  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
60	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.toArray())  {  print(out.toString());  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.toArray())  {  print(out.toString());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values.toArray())  {  print(out.toString());  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
62	[BUG]  [BUGGY]  for(final  Appendable  out  :  values)  {  print(out);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  for(final  Appendable  out  :  values)  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	for(final  Appendable  out  :  values)  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
63	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.toArray(new  Appendable[values.size()  ]))  {  print(out);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.toArray(new  Appendable[values.size()  ]))  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values.toArray(new  Appendable[values.size()  ]))  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
64	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.toArray())  {  print(out);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.toArray())  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values.toArray())  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
65	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.clone();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  Appendable  out  =(Appendable)this.values.clone();  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	Appendable  out  =(Appendable)this.values.clone();	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
66	[BUG]  [BUGGY]  if(values  ==  null)  {  for(final  Appendable  out  :  values.toArray(new  Appendable[values.size()  ]))  {  print(out.toString());  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values  ==  null)  {  for(final  Appendable  out  :  values.toArray(new  Appendable[values.size()  ]))  {  print(out.toString());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values  ==  null)  {  for(final  Appendable  out  :  values.toArray(new  Appendable[values.size()  ]))  {  print(out.toString());  }	  if(values    ==    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
67	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  out.println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  quote)  {  out.println();  }  else  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  quote)  {  out.println();  }  else  {  out.println();  }	  if(newRecord)    {    out.println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
68	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values.keySet())  {  print(out);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values.keySet())  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Appendable  out  :  values.keySet())  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values.keySet())    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
69	[BUG]  [BUGGY]  if(values  ==  null)  {  for(final  Appendable  out  :  values.keySet())  {  print(out);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values  ==  null)  {  for(final  Appendable  out  :  values.keySet())  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values  ==  null)  {  for(final  Appendable  out  :  values.keySet())  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values.keySet())    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  for(final  Appendable  out  :  values.keySet())  {  print(out);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  for(final  Appendable  out  :  values.keySet())  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	for(final  Appendable  out  :  values.keySet())  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values.keySet())    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
71	[BUG]  [BUGGY]  final  Appendable  out  =  values.keySet();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  final  Appendable  out  =  values.keySet();  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	final  Appendable  out  =  values.keySet();	  if(values!=    null)    {    for(final    Appendable    out    :    values.keySet())    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
72	[BUG]  [BUGGY]  final  Appendable  out  :  values.keySet())  {  print(out);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  final  Appendable  out  :  values.keySet())  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	final  Appendable  out  :  values.keySet())  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values.keySet())    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
73	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.iterator().next())  {  print(out);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.iterator().next())  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values.iterator().next())  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values.keySet())    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
74	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.write('n');  }  else  {  out.write('r');  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  out.write('n');  }  else  {  out.write('r');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  out.write('n');  }  else  {  out.write('r');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
75	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.write('n');  }  else  {  out.write('r');  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  false)  {  out.write('n');  }  else  {  out.write('r');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  false)  {  out.write('n');  }  else  {  out.write('r');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
76	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.write('n');  }  else  {  out.write('r');  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  null)  {  out.write('n');  }  else  {  out.write('r');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  null)  {  out.write('n');  }  else  {  out.write('r');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
77	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.write('n');  }  else  {  out.write('r');  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  false)  {  out.write('n');  }  else  {  out.write('r');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  false)  {  out.write('n');  }  else  {  out.write('r');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
78	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  false)  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  false)  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
79	[BUG]  [BUGGY]  getFormat().printRecord(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(newRecord);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(newRecord);	  getFormat().printRecord(values);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
80	[BUG]  [BUGGY]  if(newRecord)  {  getFormat().printRecord(values);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  getFormat().printRecord(values);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  getFormat().printRecord(values);  }	  getFormat().printRecord(values);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
81	[BUG]  [BUGGY]  getFormat().printRecord(this.values);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(this.values);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(this.values);	  getFormat().printRecord(values);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
82	[BUG]  [BUGGY]  getFormat().printRecord(record);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(record);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(record);	  getFormat().printRecord(values);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
83	[BUG]  [BUGGY]  getFormat().printRecord(this);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(this);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(this);	  getFormat().printRecord(values);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  if(newRecord)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  println();  }  else  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  println();  }  else  {  out.println();  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
85	[BUG]  [BUGGY]  if(newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  println();  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
86	[BUG]  [BUGGY]  if(newRecord)  {  out.println();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  out.println();  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  out.println();  }  else  {  println();  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
87	[BUG]  [BUGGY]  out.write('n');  else  if(newRecord)  {  out.write('r');  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.write('n');  else  if(newRecord)  {  out.write('r');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.write('n');  else  if(newRecord)  {  out.write('r');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
88	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  ==  false)  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  ==  false)  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
89	[BUG]  [BUGGY]  OutputStream  out  =  this.format.getOutputStream();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  OutputStream  out  =  this.format.getOutputStream();  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	OutputStream  out  =  this.format.getOutputStream();	  if(newRecord)    {    out.write('n');    }    else    {    out.write('t');    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
90	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.write('N');  }  else  {  out.write('t');  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  false)  {  out.write('N');  }  else  {  out.write('t');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  false)  {  out.write('N');  }  else  {  out.write('t');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('t');    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
91	[BUG]  [BUGGY]  ((  Appendable)value).print(out.toString());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  ((  Appendable)value).print(out.toString());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	((  Appendable)value).print(out.toString());	  if(values    ==    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
92	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  properties)  {  print(out.toString());  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  properties)  {  print(out.toString());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Appendable  out  :  properties)  {  print(out.toString());  }	  if(values    ==    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
93	[BUG]  [BUGGY]  final  Appendable  out  =  values.toArray(new  Appendable[values.size()  ]);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  final  Appendable  out  =  values.toArray(new  Appendable[values.size()  ]);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	final  Appendable  out  =  values.toArray(new  Appendable[values.size()  ]);	  if(values    ==    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
94	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out.toString();  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out.toString();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out.toString();  }	  if(values    ==    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
95	[BUG]  [BUGGY]  if(newRecord  >=  false)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  >=  false)  {  out.flush();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  >=  false)  {  out.flush();  }	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
96	[BUG]  [BUGGY]  if(newRecord)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  out.close();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  out.close();  }	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
97	[BUG]  [BUGGY]  getFormat().printRecord(values,  newRecord,  quote);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(values,  newRecord,  quote);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(values,  newRecord,  quote);	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
98	[BUG]  [BUGGY]  if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  else  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  else  {  out.println();  }	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
99	[BUG]  [BUGGY]  if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  getFormat().printRecord(values,  newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  value.length,  value.length);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  value.length,  value.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  value.length,  value.length);	  System.arraycopy(values,    0,    printRecord,    0,    value.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printrecord,  0,  value.length);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printrecord,  0,  value.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printrecord,  0,  value.length);	  System.arraycopy(values,    0,    printRecord,    0,    value.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  value.length  -  2);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  value.length  -  2);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  value.length  -  2);	  System.arraycopy(values,    0,    printRecord,    0,    value.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
103	[BUG]  [BUGGY]  final  Appendable  out  :  values)  {  print(out);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  final  Appendable  out  :  values)  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	final  Appendable  out  :  values)  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
104	[BUG]  [BUGGY]  ((  Appendable)value).print(out);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  ((  Appendable)value).print(out);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	((  Appendable)value).print(out);	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
105	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  Printer  out  =  new  Printer(out);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  Printer  out  =  new  Printer(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Appendable  out  :  values)  {  Printer  out  =  new  Printer(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
106	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out,  newRecord);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out,  newRecord);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Appendable  out  :  values)  {  print(out,  newRecord);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printrecord,  0,  values.length);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printrecord,  0,  values.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printrecord,  0,  values.length);	  System.arraycopy(values,    0,    printRecord,    0,    values.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  values.length  -  2);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  values.length  -  2);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  values.length  -  2);	  System.arraycopy(values,    0,    printRecord,    0,    values.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
109	[BUG]  [BUGGY]  if(newRecord  >=  false)  {  out.println();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  >=  false)  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  >=  false)  {  out.println();  }	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
110	[BUG]  [BUGGY]  out.println(newRecord);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.println(newRecord);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.println(newRecord);	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
111	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.println();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  null)  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  null)  {  out.println();  }	  if(newRecord)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  value);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  value);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  value);	  System.arraycopy(values,    0,    printRecord,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  newRecord,  quote);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  newRecord,  quote);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  newRecord,  quote);	  System.arraycopy(values,    0,    printRecord,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
114	[BUG]  [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  data.length);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  printRecord,  0,  data.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  printRecord,  0,  data.length);	  System.arraycopy(values,    0,    printRecord,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
115	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values.values())  {  print(out);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  values.values())  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Appendable  out  :  values.values())  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values.keySet())    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
116	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  this.values.keySet())  {  print(out);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  this.values.keySet())  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Appendable  out  :  this.values.keySet())  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values.keySet())    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
117	[BUG]  [BUGGY]  Appendable  out  =(Appendable)newRecord.clone();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  Appendable  out  =(Appendable)newRecord.clone();  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	Appendable  out  =(Appendable)newRecord.clone();	  if(newRecord)    {    out.println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
118	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(value);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  Appendable  out  =(Appendable)this.values.get(value);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	Appendable  out  =(Appendable)this.values.get(value);	  if(newRecord)    {    out.println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
119	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.get(newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  Appendable  out  =(Appendable)values.get(newRecord);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	Appendable  out  =(Appendable)values.get(newRecord);	  if(newRecord)    {    out.println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
120	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.append('n');  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.append('n');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
121	[BUG]  [BUGGY]  out.write( "n ");  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.write( "n ");  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.write( "n ");	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
122	[BUG]  [BUGGY]  out.write('  ');  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.write('  ');  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.write('  ');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
123	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  >=  quote)  {  out.flush();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  >=  quote)  {  out.flush();  }	  if(newRecord)    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
124	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.values)  {  print(out);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.values)  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values.values)  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
125	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.values)  {  print(out.toString());  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.values)  {  print(out.toString());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values.values)  {  print(out.toString());  }	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
126	[BUG]  [BUGGY]  ((  Appendable)value).append(print(out.toString()));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  ((  Appendable)value).append(print(out.toString()));  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	((  Appendable)value).append(print(out.toString()));	  if(values!=    null)    {    for(final    Appendable    out    :    values)    {    print(out.toString());    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
127	[BUG]  [BUGGY]  getFormat().printRecord(record,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(record,  newRecord);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(record,  newRecord);	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
128	[BUG]  [BUGGY]  getFormat().printRecord(values,  quotes);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  getFormat().printRecord(values,  quotes);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	getFormat().printRecord(values,  quotes);	  getFormat().printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
129	[BUG]  [BUGGY]  out.write('/');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.write('/');  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.write('/');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
130	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  out.println();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord  >=  quote)  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord  >=  quote)  {  out.println();  }	  if(newRecord)    {    out.println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
131	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  quote)  {  out.println();  }  else  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  quote)  {  out.println();  }  else  {  out.println();  }	  if(newRecord)    {    out.println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
132	[BUG]  [BUGGY]  if(!newRecord)  {  out.println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(!newRecord)  {  out.println();  }  else  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(!newRecord)  {  out.println();  }  else  {  out.println();  }	  if(newRecord)    {    out.println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
133	[BUG]  [BUGGY]  if(!newRecord)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(!newRecord)  {  out.println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(!newRecord)  {  out.println();  }	  if(newRecord)    {    out.println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
134	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.write('n');  }  else  {  out.write('r');  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  quote)  {  out.write('n');  }  else  {  out.write('r');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  quote)  {  out.write('n');  }  else  {  out.write('r');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
135	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  quote)  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  quote)  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
136	[BUG]  [BUGGY]  out.write('n');  if(newRecord)  {  out.write('r');  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  out.write('n');  if(newRecord)  {  out.write('r');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	out.write('n');  if(newRecord)  {  out.write('r');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(values,  0,  this.values,  0,  values.length);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  System.arraycopy(values,  0,  this.values,  0,  values.length);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	System.arraycopy(values,  0,  this.values,  0,  values.length);	  System.arraycopy(values,    0,    printRecord,    0,    values.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
138	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  values.toArray(new  Object[size()  ]));  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  values.toArray(new  Object[size()  ]));  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  values.toArray(new  Object[size()  ]));  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
139	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  System.arraycopy(values,  0,  printrecord,  0,  values.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  System.arraycopy(values,  0,  printrecord,  0,  values.length);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  System.arraycopy(values,  0,  printrecord,  0,  values.length);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
140	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  System.arraycopy(values,  0,  println,  value,  quote);  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  System.arraycopy(values,  0,  println,  value,  quote);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  System.arraycopy(values,  0,  println,  value,  quote);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
141	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  System.arraycopy(values,  0,  println,  quote);  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  System.arraycopy(values,  0,  println,  quote);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord)  {  for(final  Object[]  values  =  new  Object[size()  ];  System.arraycopy(values,  0,  println,  quote);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
142	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.entrySet())  {  print(out);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(values!=  null)  {  for(final  Appendable  out  :  values.entrySet())  {  print(out);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(values!=  null)  {  for(final  Appendable  out  :  values.entrySet())  {  print(out);  }	  if(values!=    null)    {    for(final    Appendable    out    :    values.keySet())    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
143	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.write('n');  }  else  {  out.write('n');  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  quote)  {  out.write('n');  }  else  {  out.write('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  quote)  {  out.write('n');  }  else  {  out.write('n');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
144	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.write('n');  }  else  {  out.write('t');  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }  println();    [BUGGY]  if(newRecord!=  quote)  {  out.write('n');  }  else  {  out.write('t');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	if(newRecord!=  quote)  {  out.write('n');  }  else  {  out.write('t');  }	  if(newRecord)    {    out.write('n');    }    else    {    out.write('t');    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
