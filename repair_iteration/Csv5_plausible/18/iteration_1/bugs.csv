bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  newRecord  =  true;  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  newRecord  =  true;  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	newRecord  =  true;	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
2	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord  =  false;  }  else  {  out.append(object.getDelimiter());  }  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  if(newRecord!=  null)  {  newRecord  =  false;  }  else  {  out.append(object.getDelimiter());  }  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	if(newRecord!=  null)  {  newRecord  =  false;  }  else  {  out.append(object.getDelimiter());  }	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
3	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(object.getDelimiter());  }  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(object.getDelimiter());  }  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(object.getDelimiter());  }	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
4	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(value);  }  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(value);  }  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(value);  }	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
5	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord  =  false;  }  else  {  out.append(value);  }  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  if(newRecord!=  null)  {  newRecord  =  false;  }  else  {  out.append(value);  }  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	if(newRecord!=  null)  {  newRecord  =  false;  }  else  {  out.append(value);  }	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
6	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(value,  offset,  len);  }  [CE]  <identifier>  expected  [FE]              AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(value,  offset,  len);  }  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(value,  offset,  len);  }	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
7	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(value,  offset  +  len);  }  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(value,  offset  +  len);  }	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
8	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                  AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]    [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	  	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
9	[BUG]  [BUGGY]  newRecord  = " ";  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  newRecord  = " ";  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	newRecord  = " ";	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
10	[BUG]  [BUGGY]  newRecord  &=  false;  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  newRecord  &=  false;  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	newRecord  &=  false;	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
11	[BUG]  [BUGGY]  newRecord  =  null;  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  newRecord  =  null;  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	newRecord  =  null;	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
12	[BUG]  [BUGGY]  newRecord  &=  null;  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  newRecord  &=  null;  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	newRecord  &=  null;	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
13	[BUG]  [BUGGY]  newRecord  = "null ";  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  newRecord  = "null ";  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	newRecord  = "null ";	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
14	[BUG]  [BUGGY]  newRecord  = "exports ";  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]  newRecord  = "exports ";  [BUGGY]  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	newRecord  = "exports ";	newRecord  =  false;  	non-compiled	[CE]  <identifier>  expected	35	None	replace
