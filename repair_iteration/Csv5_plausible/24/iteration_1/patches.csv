bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.size()  ]),  quote)  {  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.size()  ]),  quote)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.toArray(new  Object[values.size()  ]),  quote)  {	  for(final    Object    value    :    values.toArray(new    Object[values.size()    ]))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  for(final  Object  value  :  this.values.toArray(new  Object[values.size()  ]))  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  this.values.toArray(new  Object[values.size()  ]))  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  this.values.toArray(new  Object[values.size()  ]))  {	  for(final    Object    value    :    values.toArray(new    Object[values.size()    ]))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.size()  ]),  newRecord)  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.size()  ]),  newRecord)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.toArray(new  Object[values.size()  ]),  newRecord)  {	  for(final    Object    value    :    values.toArray(new    Object[values.size()    ]))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.size()  ]));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.size()  ]));  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.toArray(new  Object[values.size()  ]));	  for(final    Object    value    :    values.toArray(new    Object[values.size()    ]))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.size()  -  1]))  {  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.size()  -  1]))  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.toArray(new  Object[values.size()  -  1]))  {	  for(final    Object    value    :    values.toArray(new    Object[values.size()    ]))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  for(final  Object  value  :  values.values().toArray(new  Object[values.size()  ]))  {  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.values().toArray(new  Object[values.size()  ]))  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.values().toArray(new  Object[values.size()  ]))  {	  for(final    Object    value    :    values.toArray(new    Object[values.size()    ]))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out.append(values[i]);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out.append(values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out.append(values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  newRecord(values[i]);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  newRecord(values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  newRecord(values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().printRecord(values[i]);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().printRecord(values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().printRecord(values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().format(values[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().format(values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().format(values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().printRecord(values[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().printRecord(values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().printRecord(values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  if(values!=  null)  {  for(Object  value  :  values)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(Object  value  :  values)  {  out.println();  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(Object  value  :  values)  {  out.println();  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().format(values[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().format(values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  getFormat().format(values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  for(final  Object  value  :  getAssignedValues())  {  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getAssignedValues())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getAssignedValues())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
15	[BUG]  [BUGGY]  for(final  Object  value  :  getRecordes())  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getRecordes())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getRecordes())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  for(final  Object  value  :  getImplicitRecords())  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getImplicitRecords())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getImplicitRecords())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  for(final  Object  value  :  getRawValues())  {  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getRawValues())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getRawValues())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  for(final  Object  value  :  getRecordedValues())  {  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getRecordedValues())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getRecordedValues())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  for(final  Object  value  :  getAllRecords())  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getAllRecords())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getAllRecords())  {	  for(final    Object    value    :    getRecords())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
20	[BUG]  [BUGGY]  for(final  Object  value  :  getAssignedRecords())  {  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getAssignedRecords())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getAssignedRecords())  {	  for(final    Object    value    :    getRecords())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
21	[BUG]  [BUGGY]  for(final  Object  value  :  getColumns())  {  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getColumns())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getColumns())  {	  for(final    Object    value    :    getRecords())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  for(final  Object  value  :  getRecords().values)  {  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getRecords().values)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getRecords().values)  {	  for(final    Object    value    :    getRecords())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  for(final  Object  value  :  newRecord.values)  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  newRecord.values)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  newRecord.values)  {	  for(final    Object    value    :    newRecord)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  for(final  Object  value  :  items)  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  items)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  items)  {	  for(final    Object    value    :    newRecord)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  for(final  Object  value  :  newRecords)  {  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  newRecords)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  newRecords)  {	  for(final    Object    value    :    newRecord)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
26	[BUG]  [BUGGY]  for(final  Object  value  :  this.values.values)  {  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  this.values.values)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  this.values.values)  {	  for(final    Object    value    :    this.values)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  for(final  Object  value  :  this.values.keySet())  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  this.values.keySet())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  this.values.keySet())  {	  for(final    Object    value    :    this.values)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  for(final  Object  value  :  this.values,  quote)  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  this.values,  quote)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  this.values,  quote)  {	  for(final    Object    value    :    this.values)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  for(final  Object  value  :  this.values,  newRecord)  {  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  this.values,  newRecord)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  this.values,  newRecord)  {	  for(final    Object    value    :    this.values)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  for(final  Object  value  :  values.keySet())  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.keySet())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.keySet())  {	  for(final    Object    value    :    values.values)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[size()  ]))  {  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[size()  ]))  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.toArray(new  Object[size()  ]))  {	  for(final    Object    value    :    values.values)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  for(final  Object  value  :  this.values.toArray())  {  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  this.values.toArray())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  this.values.toArray())  {	  for(final    Object    value    :    values.toArray())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  for(final  Object  value  :  values.values())  {  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.values())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.values())  {	  for(final    Object    value    :    values.toArray())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  for(final  Object  value  :  values.iterator().next())  {  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.iterator().next())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.iterator().next())  {	  for(final    Object    value    :    values.toArray())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  for(final  Object  value  :  this.values.length)  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  this.values.length)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  this.values.length)  {	  for(final    Object    value    :    values.length)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
36	[BUG]  [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.length]))  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.toArray(new  Object[values.length]))  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.toArray(new  Object[values.length]))  {	  for(final    Object    value    :    values.length)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  for(final  Object  value  :  getBaseValues())  {  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getBaseValues())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getBaseValues())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  for(final  Object  value  :  getImmediateParentValues())  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getImmediateParentValues())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getImmediateParentValues())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
39	[BUG]  [BUGGY]  for(final  Object  value  :  getAllRecordes())  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getAllRecordes())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getAllRecordes())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
40	[BUG]  [BUGGY]  for(final  Object  value  :  getNewRecords())  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getNewRecords())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getNewRecords())  {	  for(final    Object    value    :    getRecords())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  for(final  Object  value  :  getFields())  {  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getFields())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getFields())  {	  for(final    Object    value    :    getRecords())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  for(final  Object  value  :  getRecords()),  newRecord)  {  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getRecords()),  newRecord)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getRecords()),  newRecord)  {	  for(final    Object    value    :    getRecords())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  for(final  Object  value  :  this.values),  newRecord)  {  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  this.values),  newRecord)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  this.values),  newRecord)  {	  for(final    Object    value    :    this.values)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  for(final  Object  value  :  data.toArray())  {  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  data.toArray())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  data.toArray())  {	  for(final    Object    value    :    values.toArray())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  for(final  Object  value  :  items.toArray())  {  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  items.toArray())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  items.toArray())  {	  for(final    Object    value    :    values.toArray())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  for(final  Object  key  :  newRecord)  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  key  :  newRecord)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  key  :  newRecord)  {	  for(final    Object    value    :    newRecord)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
47	[BUG]  [BUGGY]  for(final  Object  value  :  data)  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  data)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  data)  {	  for(final    Object    value    :    newRecord)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i,  values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i,  values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i,  values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i,  values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  if(values  ==  null)  {  for(Object  value  :  values)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values  ==  null)  {  for(Object  value  :  values)  {  out.println();  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values  ==  null)  {  for(Object  value  :  values)  {  out.println();  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
51	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  value[i];  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  value[i];  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  out[i]  =  value[i];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
52	[BUG]  [BUGGY]  if(newRecord)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(newRecord)  {  out.println();  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(newRecord)  {  out.println();  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  out.println( "n ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  out.println( "n ");  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  out.println( "n ");  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
54	[BUG]  [BUGGY]  for(final  Object  value  :  data.values)  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  data.values)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  data.values)  {	  for(final    Object    value    :    values.values)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  for(final  Object  value  :  data.toArray(new  Object[values.size()  ]))  {  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  data.toArray(new  Object[values.size()  ]))  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  data.toArray(new  Object[values.size()  ]))  {	  for(final    Object    value    :    values.toArray(new    Object[values.size()    ]))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  for(final  Object  value  :  items.toArray(new  Object[values.size()  ]))  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  items.toArray(new  Object[values.size()  ]))  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  items.toArray(new  Object[values.size()  ]))  {	  for(final    Object    value    :    values.toArray(new    Object[values.size()    ]))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  for(final  Object  value  :  iterables.toArray())  {  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  iterables.toArray())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  iterables.toArray())  {	  for(final    Object    value    :    values.toArray())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  for(final  Object  value  :  getEmptyValues())  {  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getEmptyValues())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getEmptyValues())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  for(final  Object  value  :  getAllRecordedValues())  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getAllRecordedValues())  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getAllRecordedValues())  {	  for(final    Object    value    :    getValues())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  print(values[i]);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  print(values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  print(values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  print(values[i]);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  print(values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  print(values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  printRecord(i);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  printRecord(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  printRecord(i,  values[i]);  }  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  printRecord(i,  values[i]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
65	[BUG]  [BUGGY]  For(final  Object  value  :  values)  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  For(final  Object  value  :  values)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	For(final  Object  value  :  values)  {	  for(final    Object    value    :    newRecord)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  for(final  Object  value  :  this.values),  newRecord  =  true;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  this.values),  newRecord  =  true;  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  this.values),  newRecord  =  true;	  for(final    Object    value    :    this.values)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
67	[BUG]  [BUGGY]  for(final  Object  value  :  values.values),  newRecord)  {  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  values.values),  newRecord)  {  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  values.values),  newRecord)  {	  for(final    Object    value    :    values.values)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  for(final  Object  value  :  getRecords()),  newRecord  =  true;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {    [BUGGY]  for(final  Object  value  :  getRecords()),  newRecord  =  true;  [BUGGY]    print(value);  }  println();  }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	for(final  Object  value  :  getRecords()),  newRecord  =  true;	  for(final    Object    value    :    getRecords())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
