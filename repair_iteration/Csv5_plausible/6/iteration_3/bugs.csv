bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.record  =  true;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  this.record  =  true;  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	this.record  =  true;	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
2	[BUG]  [BUGGY]  Appendable  out  =  getRecords();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Appendable  out  =  getRecords();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Appendable  out  =  getRecords();	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
3	[BUG]  [BUGGY]  ((  Appendable)out).record  =  true;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  ((  Appendable)out).record  =  true;  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	((  Appendable)out).record  =  true;	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
4	[BUG]  [BUGGY]  ((  Appendable)out).setRecord(newRecord);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  ((  Appendable)out).setRecord(newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	((  Appendable)out).setRecord(newRecord);	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
5	[BUG]  [BUGGY]  Assertions.notNull(out,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  newRecord);	  Assertions.notEmpty(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
6	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(newRecord,  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(newRecord,  out);	  Assertions.notEmpty(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
7	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(newRecord,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(newRecord,  format);	  Assertions.notEmpty(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
8	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord,  format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  newRecord,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  newRecord,  format);	  Assertions.notEmpty(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
9	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.newRecord);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  this.newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  this.newRecord);	  Assertions.notEmpty(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
10	[BUG]  [BUGGY]  Assertions.notNull(out,  format,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  format,  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format,  newRecord);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
11	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  this.newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,  this.newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  this.newRecord);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
12	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  this.record);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  this.record);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  newRecord,  this.record);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
13	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  this.newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  this.newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  newRecord,  this.newRecord);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
14	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(this.format,  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  newRecord);	  Assertions.notEmpty(this.format);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
15	[BUG]  [BUGGY]  Assertions.notNull(out,  this.format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  this.format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  this.format);	  Assertions.notEmpty(this.format);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
16	[BUG]  [BUGGY]  Assertions.notEmpty(format,  null);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,  null);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  null);	  Assertions.notEmpty(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
17	[BUG]  [BUGGY]  Assertions.notNull(out,  format, "out ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  format, "out ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format, "out ");	  Assertions.notEmpty(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
18	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(newRecord);	  Assertions.notNull(out,       "out   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
19	[BUG]  [BUGGY]  Assertions.notEmpty( "out ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty( "out ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty( "out ");	  Assertions.notNull(out,       "out   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
20	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,   "set  format ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(newRecord,   "set  format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(newRecord,   "set  format ");	  Assertions.notEmpty(format,       "set    format   ",    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
21	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord, "set  format   ",  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(newRecord, "set  format   ",  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(newRecord, "set  format   ",  format);	  Assertions.notEmpty(format,       "set    format   ",    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
22	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "set  format: "  +  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,   "set  format: "  +  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "set  format: "  +  newRecord);	  Assertions.notEmpty(format,       "set    format   ",    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
23	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord,   ",  newRecord ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  newRecord,   ",  newRecord ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  newRecord,   ",  newRecord ");	  Assertions.notEmpty(out,    format,   ",    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
24	[BUG]  [BUGGY]  Assertions.notNull(out,  format,   ",  newRecord ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  format,   ",  newRecord ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format,   ",  newRecord ");	  Assertions.notEmpty(out,    format,   ",    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
25	[BUG]  [BUGGY]  Assertions.notNull(out,   "newRecord ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,   "newRecord ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,   "newRecord ");	  Assertions.notEmpty(out,    format,   ",    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
26	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  out.append('n');  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	out.append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
27	[BUG]  [BUGGY]  out.append(format).append('n');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  out.append(format).append('n');  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	out.append(format).append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
28	[BUG]  [BUGGY]  out.append(newRecord).append('n');  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  out.append(newRecord).append('n');  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	out.append(newRecord).append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
29	[BUG]  [BUGGY]  out.append(newRecord);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  out.append(newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	out.append(newRecord);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
30	[BUG]  [BUGGY]  Appendable  out  =  new  Appendable(format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Appendable  out  =  new  Appendable(format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Appendable  out  =  new  Appendable(format);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
31	[BUG]  [BUGGY]  out.append(format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  out.append(format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	out.append(format);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
32	[BUG]  [BUGGY]  Assertions.notEmpty(format,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  out);	  Assertions.notNull(out,    format);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  format);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  newRecord,  format);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  this.newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  this.newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  this.newRecord);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  this);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  this);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  this);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord,  format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  newRecord,  format);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
38	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  out);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  newRecord,  out);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
39	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.newRecord,  out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  this.newRecord,  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  this.newRecord,  out);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
40	[BUG]  [BUGGY]  Ansertions.notEmpty(format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Ansertions.notEmpty(format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Ansertions.notEmpty(format);	  Assertions.notNull(format);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
41	[BUG]  [BUGGY]  Assertions.notEmpty( "set  format ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty( "set  format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty( "set  format ");	  Assertions.notNull(out,       "set    format   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
42	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.format,  format.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  this.format,  format.toString());  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  this.format,  format.toString());	  Assertions.notEmpty(out,    this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  Assertions.notNull(out,  this.format,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  this.format,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  this.format,  format);	  Assertions.notEmpty(out,    this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
44	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.format,  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  this.format,  null);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  this.format,  null);	  Assertions.notEmpty(out,    this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
45	[BUG]  [BUGGY]  Assertions.notNull(out,  this.format,   "format ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  this.format,   "format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  this.format,   "format ");	  Assertions.notEmpty(out,    this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
46	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.format,  format.getName());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  this.format,  format.getName());  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  this.format,  format.getName());	  Assertions.notEmpty(out,    this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
47	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  this.format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(this.format,  this.format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  this.format);	  Assertions.notEmpty(this.format,    format);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, "out ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format, "out ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, "out ");	  Assertions.notEmpty(out,       "out   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
49	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  out);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(this.format,  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  out);	  Assertions.notEmpty(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
50	[BUG]  [BUGGY]  Assertions.notEmpty(format,  out, "format ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,  out, "format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  out, "format ");	  Assertions.notNull(out,    format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
51	[BUG]  [BUGGY]  Assertions.notEmpty(format,  format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  format);	  Assertions.notNull(out,    format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(this.format,  null);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  null);	  Assertions.notEmpty(this.format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  this);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,  this);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  this);	  Assertions.notEmpty(out,    format,    null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
54	[BUG]  [BUGGY]  Assertions.notNull(out,  format,  null);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  format,  null);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format,  null);	  Assertions.notEmpty(out,    format,    null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
55	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  null,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,  null,  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  null,  newRecord);	  Assertions.notEmpty(out,    format,    null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
56	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,   " ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,   " ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,   " ");	  Assertions.notEmpty(out,    format,    null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
57	[BUG]  [BUGGY]  Assertions.notEmpty(out,  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  null);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  null);	  Assertions.notEmpty(out,    format,    null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
58	[BUG]  [BUGGY]  Assertions.notEmpty( "Format ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty( "Format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty( "Format ");	  Assertions.notEmpty(   "format   ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
59	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  format,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(this.format,  format,  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  format,  out);	  Assertions.notEmpty(out,    format,    this.format);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
60	[BUG]  [BUGGY]  Assertions.notNull(out,  format,  this.format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  format,  this.format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format,  this.format);	  Assertions.notEmpty(out,    format,    this.format);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
61	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.format,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  this.format,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  this.format,  format);	  Assertions.notEmpty(out,    format,    this.format);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  out);  this.format  =  format;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  out);  this.format  =  format;  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  newRecord,  out);  this.format  =  format;	  NodeTraversal.traverse(compiler,    out,    newRecord);    this.format    =    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord,  this.format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord,  this.format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  newRecord,  this.format);	  NodeTraversal.traverse(compiler,    out,    newRecord);    this.format    =    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
64	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  this);  this.format  =  format;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  this);  this.format  =  format;  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  this);  this.format  =  format;	  NodeTraversal.traverse(compiler,    out,    newRecord);    this.format    =    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
65	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  this.format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  this.format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  newRecord,  this.format);	  NodeTraversal.traverse(compiler,    out,    newRecord);    this.format    =    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
66	[BUG]  [BUGGY]  Context.traverse(compiler,  out,  newRecord);  this.format  =  format;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Context.traverse(compiler,  out,  newRecord);  this.format  =  format;  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Context.traverse(compiler,  out,  newRecord);  this.format  =  format;	  NodeTraversal.traverse(compiler,    out,    newRecord);    this.format    =    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
67	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, ",null ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format, ",null ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, ",null ");	  Assertions.notEmpty(out,    format,   "null   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
68	[BUG]  [BUGGY]  Assertions.notNull(out,  format,   "null ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  format,   "null ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format,   "null ");	  Assertions.notEmpty(out,    format,   "null   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
69	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
70	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
71	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(1);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(1);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
72	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(0);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(0);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(0);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
73	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(2);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(2);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(2);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
74	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(4);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(4);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
75	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, "set  format ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format, "set  format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, "set  format ");	  Assertions.notEmpty(out,       "set    format   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
76	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "Format ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,   "Format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "Format ");	  Assertions.notNull(out,    format,   "Format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
77	[BUG]  [BUGGY]  Assertions.notNull(format,   "Format ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(format,   "Format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(format,   "Format ");	  Assertions.notNull(out,    format,   "Format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
78	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, "Format ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format, "Format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, "Format ");	  Assertions.notNull(out,    format,   "Format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
79	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  this.format,   "format ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(this.format,  this.format,   "format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  this.format,   "format ");	  Assertions.notEmpty(this.format,    format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
80	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  format,  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(this.format,  format,  null);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  format,  null);	  Assertions.notEmpty(this.format,    format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
81	[BUG]  [BUGGY]  Assertions.notNull(format,   "set  format: ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(format,   "set  format: ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(format,   "set  format: ");	  Assertions.notEmpty(format,       "set    format:   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
82	[BUG]  [BUGGY]  Assertions.notNull(out,   "set  format: ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,   "set  format: ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,   "set  format: ");	  Assertions.notEmpty(format,       "set    format:   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
83	[BUG]  [BUGGY]  Assertions.notEmpty(out,   "set  format: ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,   "set  format: ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,   "set  format: ");	  Assertions.notEmpty(format,       "set    format:   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
84	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "set  format:n ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,   "set  format:n ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "set  format:n ");	  Assertions.notEmpty(format,       "set    format:   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
85	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.format.clone();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Appendable  out  =(Appendable)this.format.clone();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Appendable  out  =(Appendable)this.format.clone();	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
86	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Appendable  out  =(Appendable)this.newRecord.clone();	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
87	[BUG]  [BUGGY]  Appendable  out  =(Appendable)format.clone();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Appendable  out  =(Appendable)format.clone();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Appendable  out  =(Appendable)format.clone();	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
88	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.format.get(newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Appendable  out  =(Appendable)this.format.get(newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Appendable  out  =(Appendable)this.format.get(newRecord);	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
89	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.format.cloneTree();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Appendable  out  =(Appendable)this.format.cloneTree();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Appendable  out  =(Appendable)this.format.cloneTree();	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
90	[BUG]  [BUGGY]  Assertions.notEmpty(format,  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,  1);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  1);	  Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
91	[BUG]  [BUGGY]  Assertions.notNull(out,   "set  format:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,   "set  format:  {  0  }   ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,   "set  format:  {  0  }   ");	  Assertions.notEmpty(format,       "set    format:    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	38	None	replace
92	[BUG]  [BUGGY]  Assertions.notEmpty(out,   "set  format:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,   "set  format:  {  0  }   ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,   "set  format:  {  0  }   ");	  Assertions.notEmpty(format,       "set    format:    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	38	None	replace
93	[BUG]  [BUGGY]  Assertions.notNull(format,   "set  format:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(format,   "set  format:  {  0  }   ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(format,   "set  format:  {  0  }   ");	  Assertions.notEmpty(format,       "set    format:    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	38	None	replace
94	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, ",format ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format, ",format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, ",format ");	  Assertions.notEmpty(this.format,    format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
95	[BUG]  [BUGGY]  Assertions.notEmpty(out, "set  format   ",  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out, "set  format   ",  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out, "set  format   ",  format);	  Assertions.notEmpty(format,       "set    format   ",    out);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
96	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, "set  format:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format, "set  format:  {  0  }   ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, "set  format:  {  0  }   ");	  Assertions.notEmpty(format,       "set    format:    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	38	None	replace
97	[BUG]  [BUGGY]  Assertions.notEmpty(format, ",set  format:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format, ",set  format:  {  0  }   ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format, ",set  format:  {  0  }   ");	  Assertions.notEmpty(format,       "set    format:    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	38	None	replace
98	[BUG]  [BUGGY]  Assertions.notEmpty(out,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  out);	  Assertions.notEmpty(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
99	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  this.format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  this.format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  this.format);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
100	[BUG]  [BUGGY]  Assertions.notNotNull(out,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNotNull(out,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNotNull(out,  format);	  Assertions.notNull(out,    format);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
101	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  this.newRecord);  this.format  =  format;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  this.newRecord);  this.format  =  format;  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  this.newRecord);  this.format  =  format;	  NodeTraversal.traverse(compiler,    out,    newRecord);    this.format    =    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
102	[BUG]  [BUGGY]  Assertions.notEmpty(out,  FormatUtils.EMPTY_STRING);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  FormatUtils.EMPTY_STRING);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  FormatUtils.EMPTY_STRING);	  Assertions.notEmpty(out,       "out   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
103	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  out.iterator();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Iterator  <  Appendable>  it  =  out.iterator();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Iterator  <  Appendable>  it  =  out.iterator();	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
104	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  out.values().iterator();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Iterator  <  Appendable>  it  =  out.values().iterator();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Iterator  <  Appendable>  it  =  out.values().iterator();	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
105	[BUG]  [BUGGY]  ((  CSVFormat)out).setRecord(newRecord);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  ((  CSVFormat)out).setRecord(newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	((  CSVFormat)out).setRecord(newRecord);	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
106	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "set  format:  {  0  }   ",  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,   "set  format:  {  0  }   ",  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "set  format:  {  0  }   ",  newRecord);	  Assertions.notEmpty(format,       "set    format   ",    newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
107	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.values().iterator();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.values().iterator();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Iterator  <  Appendable>  it  =  this.format.values().iterator();	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
108	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	safeMultiply(out,  format)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
109	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.keySet().iterator();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.keySet().iterator();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Iterator  <  Appendable>  it  =  this.format.keySet().iterator();	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
110	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.newRecords.iterator();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Iterator  <  Appendable>  it  =  this.newRecords.iterator();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Iterator  <  Appendable>  it  =  this.newRecords.iterator();	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
111	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.iterator();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.iterator();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Iterator  <  Appendable>  it  =  this.format.iterator();	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
112	[BUG]  [BUGGY]  Assertions.checkNotEmpty(out,  format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.checkNotEmpty(out,  format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.checkNotEmpty(out,  format);	  Assertions.checkNotNull(out,    format);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
113	[BUG]  [BUGGY]  Assertions.notEmpty(format, ",set  format ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format, ",set  format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format, ",set  format ");	  Assertions.notNull(format,       "set    format   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
114	[BUG]  [BUGGY]  safeGet(out,  format))  {  out.append('n');  }  else  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  safeGet(out,  format))  {  out.append('n');  }  else  {  out.append(format);  }  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	safeGet(out,  format))  {  out.append('n');  }  else  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
115	[BUG]  [BUGGY]  safeGet(out,  format))  {  out.append('n');  }  else  if(newRecord)  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  safeGet(out,  format))  {  out.append('n');  }  else  if(newRecord)  {  out.append(format);  }  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	safeGet(out,  format))  {  out.append('n');  }  else  if(newRecord)  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
116	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.iterator();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.iterator();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Iterator  <  Appendable>  it  =  this.formats.iterator();	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
117	[BUG]  [BUGGY]  safeGet(out,  format))  {  out.append('n');  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  safeGet(out,  format))  {  out.append('n');  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	safeGet(out,  format))  {  out.append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
118	[BUG]  [BUGGY]  Assertions.notNull(out,  format, "],  newRecord ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  format, "],  newRecord ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format, "],  newRecord ");	  Assertions.notEmpty(out,    format,   ",    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
119	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  newRecord,  out);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
120	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  out);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
121	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  record);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,  record);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  record);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
122	[BUG]  [BUGGY]  Assertions.notNull(format,  this.format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(format,  this.format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(format,  this.format);	  Assertions.notEmpty(format,    this.format);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
123	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.records();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Iterator  <  Appendable>  it  =  this.records();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Iterator  <  Appendable>  it  =  this.records();	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
124	[BUG]  [BUGGY]  ((  Appendable)out).append(this.format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  ((  Appendable)out).append(this.format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	((  Appendable)out).append(this.format);	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
125	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.records.iterator();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Iterator  <  Appendable>  it  =  this.records.iterator();  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Iterator  <  Appendable>  it  =  this.records.iterator();	  if(newRecord)    {    for(final    Appendable    out    :    getRecords())    {    this.record    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
126	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  newRecord, ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,  newRecord, ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  newRecord, ");	  Assertions.notEmpty(out,    format,   ",    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
127	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,   "[newRecord] ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format,   "[newRecord] ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,   "[newRecord] ");	  Assertions.notEmpty(out,    format,   ",    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
128	[BUG]  [BUGGY]  Assertions.checkNotNull(out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.checkNotNull(out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.checkNotNull(out);	  Assertions.notNull(out);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
129	[BUG]  [BUGGY]  Assertions.isTrue(out.length  ==  0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.isTrue(out.length  ==  0);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.isTrue(out.length  ==  0);	  Assertions.notNull(out);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
130	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  format,  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  format,  newRecord);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
131	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  this.newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  this.newRecord);	  NodeTraversal.traverse(compiler,    out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
132	[BUG]  [BUGGY]  out.append('n').append(newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  out.append('n').append(newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	out.append('n').append(newRecord);	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
133	[BUG]  [BUGGY]  this.newRecord  =  format;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  this.newRecord  =  format;  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	this.newRecord  =  format;	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
134	[BUG]  [BUGGY]  Appendable  out  =  format.append('n');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Appendable  out  =  format.append('n');  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Appendable  out  =  format.append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
135	[BUG]  [BUGGY]  out.append('n').append(format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  out.append('n').append(format);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	out.append('n').append(format);	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
136	[BUG]  [BUGGY]  Assertions.notNull(format,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(format,  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(format,  newRecord);	  Assertions.notNull(format);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
137	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.format,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  this.format,  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  this.format,  newRecord);	  Assertions.notEmpty(out,    this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
138	[BUG]  [BUGGY]  Assertions.notEmpty(format,  'Format');  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,  'Format');  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  'Format');	  Assertions.notNull(out,    format,   "Format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
139	[BUG]  [BUGGY]  Assertions.notNull(newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(newRecord);	  Assertions.notEmpty(format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
140	[BUG]  [BUGGY]  Assertions.notEmpty(format,  this.newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,  this.newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  this.newRecord);	  Assertions.notEmpty(format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
141	[BUG]  [BUGGY]  OutputStream  newRecord  =  format.append('n');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  OutputStream  newRecord  =  format.append('n');  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	OutputStream  newRecord  =  format.append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
142	[BUG]  [BUGGY]  out.append(format).append('[');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  out.append(format).append('[');  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	out.append(format).append('[');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
143	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, "] ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format, "] ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, "] ");	  Assertions.notEmpty(out,       "out   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
144	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, "n ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(out,  format, "n ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, "n ");	  Assertions.notEmpty(out,       "out   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
145	[BUG]  [BUGGY]  if(newRecord!=  null)  {  NodeTraversal.traverse(compiler,  out,  newRecord);  this.format  =  format;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  if(newRecord!=  null)  {  NodeTraversal.traverse(compiler,  out,  newRecord);  this.format  =  format;  }  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	if(newRecord!=  null)  {  NodeTraversal.traverse(compiler,  out,  newRecord);  this.format  =  format;  }	  NodeTraversal.traverse(compiler,    out,    newRecord);    this.format    =    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
146	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.newRecord);  this.format  =  format;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  this.newRecord);  this.format  =  format;  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  this.newRecord);  this.format  =  format;	  NodeTraversal.traverse(compiler,    out,    newRecord);    this.format    =    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
147	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  this);  this.format  =  format;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  NodeTraversal.traverse(compiler,  newRecord,  this);  this.format  =  format;  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  newRecord,  this);  this.format  =  format;	  NodeTraversal.traverse(compiler,    out,    newRecord);    this.format    =    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
148	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "set  format. ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,   "set  format. ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "set  format. ");	  Assertions.notNull(format,       "set    format   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
149	[BUG]  [BUGGY]  Assertions.notEmpty(format,  'n');  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,  'n');  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  'n');	  Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
150	[BUG]  [BUGGY]  Assertions.notNull(out,  format, "set  format ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notNull(out,  format, "set  format ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format, "set  format ");	  Assertions.notEmpty(out,       "set    format   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
151	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "set  format:  {  0  }   ",  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(format,   "set  format:  {  0  }   ",  out);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "set  format:  {  0  }   ",  out);	  Assertions.notEmpty(format,       "set    format   ",    out);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
152	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(this.format,  format,  newRecord);  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  format,  newRecord);	  Assertions.notEmpty(this.format,    format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
153	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  format,   "out ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");      [BUGGY]  Assertions.notEmpty(this.format,  format,   "out ");  [BUGGY]        this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  format,   "out ");	  Assertions.notEmpty(this.format,    format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
