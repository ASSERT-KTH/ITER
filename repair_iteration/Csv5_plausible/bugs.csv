bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] } else if (format.isEscaping()) { [FE] AssertionError [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); [BUGGY] } else if (format.isEscaping()) { [BUGGY] printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	1.0	117	117	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); [BUGGY] [BUGGY] } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	1.0	117	117	1	add	
3	[BUG] [BUGGY] out.append(value, offset, offset + len); [FE] AssertionError [CONTEXT] final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { [BUGGY] out.append(value, offset, offset + len); [BUGGY] } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	1.0	120	120	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { [BUGGY] [BUGGY] out.append(value, offset, offset + len); } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	1.0	120	120	1	add	
5	[BUG] [BUGGY] public CSVPrinter(final Appendable out, final CSVFormat format) { [FE] AssertionError [CONTEXT] [BUGGY] public CSVPrinter(final Appendable out, final CSVFormat format) { [BUGGY] Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); this.out = out; this.format = format; this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	58	58	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); this.out = out; this.format = format; this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	58	58	1	add	
7	[BUG] [BUGGY] private boolean newRecord = true; [FE] AssertionError [CONTEXT] [BUGGY] private boolean newRecord = true; [BUGGY]  [CLASS] CSVPrinter  [VARIABLES] 	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	43	43	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private boolean newRecord = true; [CLASS] CSVPrinter  [VARIABLES] 	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	43	43	1	add	
9	[BUG] [BUGGY] Assertions.notNull(out, "out"); [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { [BUGGY] Assertions.notNull(out, "out"); [BUGGY] Assertions.notNull(format, "format"); this.out = out; this.format = format; this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { [BUGGY] [BUGGY] Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); this.out = out; this.format = format; this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	add	
11	[BUG] [BUGGY] Assertions.notNull(format, "format"); [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); [BUGGY] Assertions.notNull(format, "format"); [BUGGY]  this.out = out; this.format = format; this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); [BUGGY] [BUGGY] Assertions.notNull(format, "format"); this.out = out; this.format = format; this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	add	
13	[BUG] [BUGGY] this.out = out; [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); [BUGGY] this.out = out; [BUGGY] this.format = format; this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); [BUGGY] [BUGGY] this.out = out; this.format = format; this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	add	
15	[BUG] [BUGGY] this.format = format; [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); this.out = out; [BUGGY] this.format = format; [BUGGY] this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); this.out = out; [BUGGY] [BUGGY] this.format = format; this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	add	
17	[BUG] [BUGGY] this.format.validate(); [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); this.out = out; this.format = format; [BUGGY] this.format.validate(); [BUGGY] } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); this.out = out; this.format = format; [BUGGY] [BUGGY] this.format.validate(); } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	add	
19	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); this.out = out; this.format = format; this.format.validate(); [BUGGY] } [BUGGY]  [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public CSVPrinter(final Appendable out, final CSVFormat format) { Assertions.notNull(out, "out"); Assertions.notNull(format, "format"); this.out = out; this.format = format; this.format.validate(); [BUGGY] [BUGGY] } [CLASS] CSVPrinter [METHOD] <init> [RETURN_TYPE] CSVFormat)  Appendable out CSVFormat format [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	add	
21	[BUG] [BUGGY] if (value == null) { [FE] AssertionError [CONTEXT] public void print(final Object value) throws IOException {  String strValue; [BUGGY] if (value == null) { [BUGGY] final String nullString = format.getNullString(); strValue = nullString == null ? Constants.EMPTY : nullString; } else { strValue = value.toString(); } this.print(value, strValue, 0, strValue.length()); } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object value [VARIABLES] CSVFormat format Object value boolean newRecord String nullString strValue Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	1	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void print(final Object value) throws IOException {  String strValue; [BUGGY] [BUGGY] if (value == null) { final String nullString = format.getNullString(); strValue = nullString == null ? Constants.EMPTY : nullString; } else { strValue = value.toString(); } this.print(value, strValue, 0, strValue.length()); } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object value [VARIABLES] CSVFormat format Object value boolean newRecord String nullString strValue Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	1	add	
23	[BUG] [BUGGY] strValue = value.toString(); [FE] AssertionError [CONTEXT] public void print(final Object value) throws IOException {  String strValue; if (value == null) { final String nullString = format.getNullString(); strValue = nullString == null ? Constants.EMPTY : nullString; } else { [BUGGY] strValue = value.toString(); [BUGGY] } this.print(value, strValue, 0, strValue.length()); } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object value [VARIABLES] CSVFormat format Object value boolean newRecord String nullString strValue Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void print(final Object value) throws IOException {  String strValue; if (value == null) { final String nullString = format.getNullString(); strValue = nullString == null ? Constants.EMPTY : nullString; } else { [BUGGY] [BUGGY] strValue = value.toString(); } this.print(value, strValue, 0, strValue.length()); } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object value [VARIABLES] CSVFormat format Object value boolean newRecord String nullString strValue Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	add	
25	[BUG] [BUGGY] this.print(value, strValue, 0, strValue.length()); [FE] AssertionError [CONTEXT] public void print(final Object value) throws IOException {  String strValue; if (value == null) { final String nullString = format.getNullString(); strValue = nullString == null ? Constants.EMPTY : nullString; } else { strValue = value.toString(); } [BUGGY] this.print(value, strValue, 0, strValue.length()); [BUGGY] } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object value [VARIABLES] CSVFormat format Object value boolean newRecord String nullString strValue Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void print(final Object value) throws IOException {  String strValue; if (value == null) { final String nullString = format.getNullString(); strValue = nullString == null ? Constants.EMPTY : nullString; } else { strValue = value.toString(); } [BUGGY] [BUGGY] this.print(value, strValue, 0, strValue.length()); } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object value [VARIABLES] CSVFormat format Object value boolean newRecord String nullString strValue Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	add	
27	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public void print(final Object value) throws IOException {  String strValue; if (value == null) { final String nullString = format.getNullString(); strValue = nullString == null ? Constants.EMPTY : nullString; } else { strValue = value.toString(); } this.print(value, strValue, 0, strValue.length()); [BUGGY] } [BUGGY]  [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object value [VARIABLES] CSVFormat format Object value boolean newRecord String nullString strValue Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	
28	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void print(final Object value) throws IOException {  String strValue; if (value == null) { final String nullString = format.getNullString(); strValue = nullString == null ? Constants.EMPTY : nullString; } else { strValue = value.toString(); } this.print(value, strValue, 0, strValue.length()); [BUGGY] [BUGGY] } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object value [VARIABLES] CSVFormat format Object value boolean newRecord String nullString strValue Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	add	
29	[BUG] [BUGGY] if (!newRecord) { [FE] AssertionError [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { [BUGGY] if (!newRecord) { [BUGGY] out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	111	111	1	replace	
30	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { [BUGGY] [BUGGY] if (!newRecord) { out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	111	111	1	add	
31	[BUG] [BUGGY] out.append(format.getDelimiter()); [FE] AssertionError [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { if (!newRecord) { [BUGGY] out.append(format.getDelimiter()); [BUGGY] } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { if (!newRecord) { [BUGGY] [BUGGY] out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	add	
33	[BUG] [BUGGY] if (format.isQuoting()) { [FE] AssertionError [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } [BUGGY] if (format.isQuoting()) { [BUGGY]  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	114	114	1	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } [BUGGY] [BUGGY] if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	114	114	1	add	
35	[BUG] [BUGGY] newRecord = false; [FE] AssertionError [CONTEXT] out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } [BUGGY] newRecord = false; [BUGGY] } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	replace	
36	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } [BUGGY] [BUGGY] newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	122	122	1	add	
37	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; [BUGGY] } [BUGGY]  [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	
38	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; [BUGGY] [BUGGY] } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	add	
39	[BUG] [BUGGY] final String recordSeparator = format.getRecordSeparator(); [FE] AssertionError [CONTEXT] public void println() throws IOException { [BUGGY] final String recordSeparator = format.getRecordSeparator(); [BUGGY] out.append(recordSeparator); newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	324	324	1	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void println() throws IOException { [BUGGY] [BUGGY] final String recordSeparator = format.getRecordSeparator(); out.append(recordSeparator); newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	324	324	1	add	
41	[BUG] [BUGGY] out.append(recordSeparator); [FE] AssertionError [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); [BUGGY] out.append(recordSeparator); [BUGGY] newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	
42	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); [BUGGY] [BUGGY] out.append(recordSeparator); newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	add	
43	[BUG] [BUGGY] newRecord = true; [FE] AssertionError [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); out.append(recordSeparator); [BUGGY] newRecord = true; [BUGGY] } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	326	326	1	replace	
44	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); out.append(recordSeparator); [BUGGY] [BUGGY] newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	326	326	1	add	
45	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); out.append(recordSeparator); newRecord = true; [BUGGY] } [BUGGY]  [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	327	327	1	replace	
46	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); out.append(recordSeparator); newRecord = true; [BUGGY] [BUGGY] } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	327	327	1	add	
47	[BUG] [BUGGY] for (final Object value : values) { [FE] AssertionError [CONTEXT] public void printRecord(final Object... values) throws IOException { [BUGGY] for (final Object value : values) { [BUGGY] print(value); } println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void printRecord(final Object... values) throws IOException { [BUGGY] [BUGGY] for (final Object value : values) { print(value); } println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	355	355	1	add	
49	[BUG] [BUGGY] print(value); [FE] AssertionError [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { [BUGGY] print(value); [BUGGY] } println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	356	356	1	replace	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { [BUGGY] [BUGGY] print(value); } println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	356	356	1	add	
51	[BUG] [BUGGY] println(); [FE] AssertionError [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { print(value); } [BUGGY] println(); [BUGGY] } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { print(value); } [BUGGY] [BUGGY] println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	add	
53	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { print(value); } println(); [BUGGY] } [BUGGY]  [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { print(value); } println(); [BUGGY] [BUGGY] } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	359	359	1	add	
