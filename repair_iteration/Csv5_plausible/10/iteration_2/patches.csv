bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  format.length  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  format.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  out,  0,  format.length  -  1);	  System.arraycopy(out,    0,    this.format,    0,    format.length    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  format.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  format.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  1,  format.length  -  1);	  System.arraycopy(out,    0,    this.format,    0,    format.length    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  format.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  format.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  format.length  -  1);	  System.arraycopy(out,    0,    this.format,    0,    format.length    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
4	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(out,  format);	  this.newRecord    =    new    Record    <    CSV>(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
5	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  this.format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(out,  this.format);	  this.newRecord    =    new    Record    <    CSV>(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
6	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(out,  true);	  this.newRecord    =    new    Record    <    CSV>(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
7	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(out,  false);	  this.newRecord    =    new    Record    <    CSV>(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  out.length);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(out,  out.length);	  this.newRecord    =    new    Record    <    CSV>(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
9	[BUG]  [BUGGY]  this.newRecord  =  Lists.  <  CSV_NAME>emptyList();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.  <  CSV_NAME>emptyList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.  <  CSV_NAME>emptyList();	  this.newRecord    =    Collections.    <    CSV_NAME>emptyList();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
10	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptySet();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptySet();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  CSV_NAME>emptySet();	  this.newRecord    =    Collections.    <    CSV_NAME>emptyList();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
11	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyList()?  Collections.  <  CSV_NAME>emptyList()  :  Collections.  <  CSV_NAME>emptyList();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyList()?  Collections.  <  CSV_NAME>emptyList()  :  Collections.  <  CSV_NAME>emptyList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  CSV_NAME>emptyList()?  Collections.  <  CSV_NAME>emptyList()  :  Collections.  <  CSV_NAME>emptyList();	  this.newRecord    =    Collections.    <    CSV_NAME>emptyList();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
12	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyArray();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyArray();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  CSV_NAME>emptyArray();	  this.newRecord    =    Collections.    <    CSV_NAME>emptyList();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
13	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSV_NAME>emptyList();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSV_NAME>emptyList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSV_NAME>emptyList();	  this.newRecord    =    Collections.    <    CSV_NAME>emptyList();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
14	[BUG]  [BUGGY]  this.record();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.record();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.record();	  reset();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
15	[BUG]  [BUGGY]  rehashCode();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  rehashCode();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	rehashCode();	  reset();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
16	[BUG]  [BUGGY]  recalculate();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  recalculate();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	recalculate();	  reset();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
17	[BUG]  [BUGGY]  It.newRecord  =  true;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  It.newRecord  =  true;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	It.newRecord  =  true;	  This.newRecord    =    false;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
18	[BUG]  [BUGGY]  This.newRecord  =  null;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  This.newRecord  =  null;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	This.newRecord  =  null;	  This.newRecord    =    false;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
19	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.out,  out);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    out);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
20	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.format,  out);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    out);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
21	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  out.length);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  out.length);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    out);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
22	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  0);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  0);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    out);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
23	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  out.toString());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  out.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  out.toString());	  this.newRecord    =    new    Record    <    CSVFormat>(out,    out);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
24	[BUG]  [BUGGY]  if(this.newRecord!=  false)  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(this.newRecord!=  false)  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(this.newRecord!=  false)  {  newRecord();  }	  if(newRecord!=    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
25	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord!=    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
26	[BUG]  [BUGGY]  if(this.newRecord!=  false)  {  this.newRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(this.newRecord!=  false)  {  this.newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(this.newRecord!=  false)  {  this.newRecord();  }	  if(newRecord!=    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
27	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord!=    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
28	[BUG]  [BUGGY]  this.newRecord  |=  true;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  |=  true;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  |=  true;	  this.newRecord    |=    false;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
29	[BUG]  [BUGGY]  this.newRecord  &=  false;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  &=  false;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  &=  false;	  this.newRecord    |=    false;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
30	[BUG]  [BUGGY]  this.newRecord  |=  null;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  |=  null;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  |=  null;	  this.newRecord    |=    false;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
31	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedList  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  LinkedList  <  CSVFormat>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  LinkedList  <  CSVFormat>();	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(0);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(this.out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(this.out);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(1);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(4);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(4);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  out,  0,  newRecord);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.out,  0,  this.format,  0,  newRecord);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  newRecord);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  newRecord);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  this.record);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  this.record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  this.record);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(newRecord,  0,  this.format,  0,  out.length);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(newRecord,  0,  this.format,  0,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(newRecord,  0,  this.format,  0,  out.length);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(newRecord,  0,  this.format,  0,  out.record);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(newRecord,  0,  this.format,  0,  out.record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(newRecord,  0,  this.format,  0,  out.record);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  this.newRecord);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  this.newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  this.newRecord);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  format.length);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.format,  0,  format.length);	  System.arraycopy(this.format,    0,    out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  this.format.length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  this.format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  out,  0,  this.format.length);	  System.arraycopy(this.format,    0,    out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  if(this.newRecord  ==  false)  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(this.newRecord  ==  false)  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(this.newRecord  ==  false)  {  newRecord();  }	  if(newRecord    ==    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
46	[BUG]  [BUGGY]  if(this.newRecord  ==  false)  {  this.newRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(this.newRecord  ==  false)  {  this.newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(this.newRecord  ==  false)  {  this.newRecord();  }	  if(newRecord    ==    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  format.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  format.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.format,  0,  format.length  -  1);	  System.arraycopy(format,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  format.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  format.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.format,  0,  format.length  +  1);	  System.arraycopy(format,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  out.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.format,  0,  out.length);	  System.arraycopy(format,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
50	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord!=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
51	[BUG]  [BUGGY]  (newRecord!=  null)?  null  :  new  Record();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  (newRecord!=  null)?  null  :  new  Record();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	(newRecord!=  null)?  null  :  new  Record();	  if(newRecord!=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
52	[BUG]  [BUGGY]  (newRecord  ==  null)?  null  :  new  Record();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  (newRecord  ==  null)?  null  :  new  Record();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	(newRecord  ==  null)?  null  :  new  Record();	  if(newRecord!=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
53	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(3);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(3);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(3);	  this.newRecord    =    new    Record    <    CSVFormat>(1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
54	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(8);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(8);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(8);	  this.newRecord    =    new    Record    <    CSVFormat>(1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
55	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(5);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(5);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(5);	  this.newRecord    =    new    Record    <    CSVFormat>(1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
56	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.record);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.record);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
57	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.in);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.in);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.in);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  this.out.length);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  this.out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  out,  0,  this.out.length);	  System.arraycopy(this.format,    0,    out,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  1,  out.length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  out,  1,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  out,  1,  out.length);	  System.arraycopy(this.format,    0,    out,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.in,  0,  out.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.in,  0,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.in,  0,  out.length);	  System.arraycopy(this.format,    0,    out,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  format.length  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  format.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.out,  0,  this.format,  0,  format.length  -  1);	  System.arraycopy(this.out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  this.format.length);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  this.format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.out,  0,  this.format,  0,  this.format.length);	  System.arraycopy(this.out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  format.length  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  format.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.out,  0,  this.format,  0,  format.length  +  1);	  System.arraycopy(this.out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
64	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSV>();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSV>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSV>();	  this.newRecord    =    new    ArrayList();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
65	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedList();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  LinkedList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  LinkedList();	  this.newRecord    =    new    ArrayList();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
66	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  String>();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  String>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  String>();	  this.newRecord    =    new    ArrayList();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
67	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVRecord>();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVRecord>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSVRecord>();	  this.newRecord    =    new    ArrayList();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  this.newRecord  =  new  java.util.ArrayList();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  java.util.ArrayList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  java.util.ArrayList();	  this.newRecord    =    new    ArrayList();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
69	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.out,  format);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
70	[BUG]  [BUGGY]  newRecord  =  new  Record  <  CSVFormat>(this.format,  out);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  newRecord  =  new  Record  <  CSVFormat>(this.format,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	newRecord  =  new  Record  <  CSVFormat>(this.format,  out);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
71	[BUG]  [BUGGY]  this.newRecord  =  new  Record(this.format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(this.format);	  this.newRecord    =    new    Record(this.out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
72	[BUG]  [BUGGY]  this.newRecord  =  new  Record(this.out,  this.format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(this.out,  this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(this.out,  this.format);	  this.newRecord    =    new    Record(this.out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
73	[BUG]  [BUGGY]  this.newRecord  =  new  Record(this.format,  this.out);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(this.format,  this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(this.format,  this.out);	  this.newRecord    =    new    Record(this.out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
74	[BUG]  [BUGGY]  this.newRecord  =  new  Record(this.out,  out);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(this.out,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(this.out,  out);	  this.newRecord    =    new    Record(this.out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
75	[BUG]  [BUGGY]  this.newRecord  =  new  Record(this.record);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(this.record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(this.record);	  this.newRecord    =    new    Record(this.out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length  -  1);	  System.arraycopy(cSVFormat,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length  +  1);	  System.arraycopy(cSVFormat,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length  -  2);	  System.arraycopy(cSVFormat,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  1,  format.length);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  1,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(cSVFormat,  0,  this.format,  1,  format.length);	  System.arraycopy(cSVFormat,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
80	[BUG]  [BUGGY]  this.newRecord  =  new  Record(0L);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(0L);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(0L);	  this.newRecord    =    new    Record(0);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
81	[BUG]  [BUGGY]  this.newRecord  =  new  Record(2);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(2);	  this.newRecord    =    new    Record(0);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  format.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  format.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  out,  0,  format.length  +  1);	  System.arraycopy(out,    0,    this.format,    0,    format.length    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  format.length  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  format.length  +  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  format.length  +  2);	  System.arraycopy(out,    0,    this.format,    0,    format.length    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  format.length  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  format.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  1,  format.length  +  1);	  System.arraycopy(out,    0,    this.format,    0,    format.length    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
85	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  out);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    format);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
86	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.format,  format);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    format);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
87	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  format,  false);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    format);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
88	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format,  true);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  format,  true);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    format);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
89	[BUG]  [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.err.println( "Unable  to  instantiate  CSVFormat: "  +  out);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
90	[BUG]  [BUGGY]  AssertionError.println( "Unable  to  instantiate  CSVFormat: "  +  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.println( "Unable  to  instantiate  CSVFormat: "  +  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.println( "Unable  to  instantiate  CSVFormat: "  +  out);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
91	[BUG]  [BUGGY]  AssertionError.error( "Unable  to  instantiate  CSVFormat: "  +  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.error( "Unable  to  instantiate  CSVFormat: "  +  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.error( "Unable  to  instantiate  CSVFormat: "  +  out);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
92	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(this.out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(this.out);	  this.newRecord    =    new    HashMap    <    CSVFormat>(this.out);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
93	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(this.format);	  this.newRecord    =    new    HashMap    <    CSVFormat>(this.out);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
94	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.out,  this.format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.out,  this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(this.out,  this.format);	  this.newRecord    =    new    HashMap    <    CSVFormat>(this.out);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
95	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.out,  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.out,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(this.out,  format);	  this.newRecord    =    new    HashMap    <    CSVFormat>(this.out);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
96	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.out,  out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.out,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(this.out,  out);	  this.newRecord    =    new    HashMap    <    CSVFormat>(this.out);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
97	[BUG]  [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>(this.out);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>(this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  TreeMap  <  CSVFormat>(this.out);	  this.newRecord    =    new    HashMap    <    CSVFormat>(this.out);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
98	[BUG]  [BUGGY]  this.newRecord  =  Lists.newLinkedList();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.newLinkedList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.newLinkedList();	  this.newRecord    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
99	[BUG]  [BUGGY]  this.newRecord  =  Lists.newArrayList(this.out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.newArrayList(this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.newArrayList(this.out);	  this.newRecord    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
100	[BUG]  [BUGGY]  this.newRecord  =  Lists.newArrayList(0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.newArrayList(0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.newArrayList(0);	  this.newRecord    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
101	[BUG]  [BUGGY]  this.newRecord  =  Collections.newArrayList();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.newArrayList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.newArrayList();	  this.newRecord    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
102	[BUG]  [BUGGY]  this.newRecord  =  Lists.newHashSet();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.newHashSet();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.newHashSet();	  this.newRecord    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
103	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  false,  format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  false,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  false,  format);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
104	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  false);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.out,  false);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
105	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  false);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.format,  false);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    false);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
106	[BUG]  [BUGGY]  setRecord(true,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  setRecord(true,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	setRecord(true,  false);	  setRecord(true);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
107	[BUG]  [BUGGY]  this.record  =  true;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.record  =  true;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.record  =  true;	  setRecord(true);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
108	[BUG]  [BUGGY]  setRecord(false,  true);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  setRecord(false,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	setRecord(false,  true);	  setRecord(true);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
109	[BUG]  [BUGGY]  setRecord(false,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  setRecord(false,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	setRecord(false,  false);	  setRecord(true);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  out.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  out.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  out,  0,  out.length  +  1);	  System.arraycopy(out,    0,    this.format,    0,    out.length    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  +  3);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  +  3);	  System.arraycopy(out,    0,    this.format,    0,    out.length    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  out.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  out.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  1,  out.length  +  1);	  System.arraycopy(out,    0,    this.format,    0,    out.length    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
113	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  true);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.out,  true);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    true);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
114	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  true);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.format,  true);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    true);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
115	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  null);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  null);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    true);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
116	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(5);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(5);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(5);	  this.newRecord    =    new    HashMap    <    CSVFormat>(4);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
117	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(0);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(0);	  this.newRecord    =    new    HashMap    <    CSVFormat>(4);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
118	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(2);	  this.newRecord    =    new    HashMap    <    CSVFormat>(4);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
119	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(6);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(6);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(6);	  this.newRecord    =    new    HashMap    <    CSVFormat>(4);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
120	[BUG]  [BUGGY]  this.newRecord  =  Collections.unmodifiableList();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.unmodifiableList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.unmodifiableList();	  this.newRecord    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
121	[BUG]  [BUGGY]  this.newRecord  =  Collections.unmodifiableCollection(this.out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.unmodifiableCollection(this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.unmodifiableCollection(this.out);	  this.newRecord    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
122	[BUG]  [BUGGY]  this.newRecord  =  Collections.unmodifiableCollection(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.unmodifiableCollection(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.unmodifiableCollection(out);	  this.newRecord    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
123	[BUG]  [BUGGY]  this.newRecord  =  Collections.unmodifiableCollection(this.format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.unmodifiableCollection(this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.unmodifiableCollection(this.format);	  this.newRecord    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
124	[BUG]  [BUGGY]  this.newRecord  =  Collections.unmodifiableCollection(false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.unmodifiableCollection(false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.unmodifiableCollection(false);	  this.newRecord    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
125	[BUG]  [BUGGY]  this.newRecord  =  Collections.unmodifiableSet();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.unmodifiableSet();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.unmodifiableSet();	  this.newRecord    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
126	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this,  format);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this,  format);	  this.newRecord    =    new    Record    <    CSVFormat>(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
127	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this,  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this,  out);	  this.newRecord    =    new    Record    <    CSVFormat>(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
128	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this,  Format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this,  Format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this,  Format);	  this.newRecord    =    new    Record    <    CSVFormat>(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
129	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.record);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.record);	  this.newRecord    =    new    Record    <    CSV>(format);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
130	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(cSVFormat);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(cSVFormat);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(cSVFormat);	  this.newRecord    =    new    Record    <    CSV>(format);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
131	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(format,  true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(format,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(format,  true);	  this.newRecord    =    new    Record    <    CSV>(format);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
132	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(out);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
133	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(this.out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(this.out);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
134	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(0,  0);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(0,  0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(0,  0);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
135	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(1);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
136	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(0);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(0);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
137	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(this.format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(this.format);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
138	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(0);	  this.newRecord    =    new    Record    <    CSV>(2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
139	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(3);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(3);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(3);	  this.newRecord    =    new    Record    <    CSV>(2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
140	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(8);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(8);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(8);	  this.newRecord    =    new    Record    <    CSV>(2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
141	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(5);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(5);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(5);	  this.newRecord    =    new    Record    <    CSV>(2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
142	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.format,  out);	  this.newRecord    =    new    Record    <    CSV>(this.format);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
143	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  this.out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.format,  this.out);	  this.newRecord    =    new    Record    <    CSV>(this.format);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
144	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  this.in);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  this.in);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.format,  this.in);	  this.newRecord    =    new    Record    <    CSV>(this.format);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
145	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  this.type);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  this.type);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.format,  this.type);	  this.newRecord    =    new    Record    <    CSV>(this.format);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
146	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  this.version);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format,  this.version);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.format,  this.version);	  this.newRecord    =    new    Record    <    CSV>(this.format);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
147	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(true);	  this.newRecord    =    new    Record    <    CSV>(false);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
148	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false,  true);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(false,  true);	  this.newRecord    =    new    Record    <    CSV>(false);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
149	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(false,  false);	  this.newRecord    =    new    Record    <    CSV>(false);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
150	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(0L);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(0L);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(0L);	  this.newRecord    =    new    Record    <    CSVFormat>(0);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
151	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  this.newRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  this.newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  this.newRecord();  }	  if(newRecord    ==    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
152	[BUG]  [BUGGY]  this.newRecord  =  newRecord;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  newRecord;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  newRecord;	  this.newRecord    =    null;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
153	[BUG]  [BUGGY]  this.newRecord  =  record;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  record;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  record;	  this.newRecord    =    null;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
154	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle2D.Double();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle2D.Double();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle2D.Double();	  this.newRecord    =    null;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
155	[BUG]  [BUGGY]  this.newRecord  =  new  HashSet  <  CSV>();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashSet  <  CSV>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashSet  <  CSV>();	  this.newRecord    =    null;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
156	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(6);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(6);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(6);	  this.newRecord    =    new    Record    <    CSV>(4);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
157	[BUG]  [BUGGY]  this.newRecord  =  new  Record(cSVFormat);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(cSVFormat);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(cSVFormat);	  this.newRecord    =    new    Record(record);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
158	[BUG]  [BUGGY]  this.newRecord  =  new  Record(record,  out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(record,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(record,  out);	  this.newRecord    =    new    Record(record);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
159	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  This.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  This.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  This.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
160	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  This.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  This.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  This.newRecord  =  true;  }	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
161	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  This.newRecord  =  true;  }  else  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  This.newRecord  =  true;  }  else  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  This.newRecord  =  true;  }  else  {  this.newRecord  =  false;  }	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
162	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  This.newRecord  =  true;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  This.newRecord  =  true;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  This.newRecord  =  true;  }  else  {  throw  new  IllegalStateException( " ");  }	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
163	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  this.out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.format,  this.out);	  this.newRecord    =    new    Record    <    CSVFormat>(this.format);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
164	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  this.in);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  this.in);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.format,  this.in);	  this.newRecord    =    new    Record    <    CSVFormat>(this.format);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
165	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  this.type);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format,  this.type);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.format,  this.type);	  this.newRecord    =    new    Record    <    CSVFormat>(this.format);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
166	[BUG]  [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;	  this.newRecord    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
167	[BUG]  [BUGGY]  this.newRecord  =  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.EMPTY_STRING;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.EMPTY_STRING;	  this.newRecord    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
168	[BUG]  [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;	  this.newRecord    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
169	[BUG]  [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST  |  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST  |  Collections.EMPTY_STRING;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.EMPTY_LIST  |  Collections.EMPTY_STRING;	  this.newRecord    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
170	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  out.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  out.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.out,  0,  this.format,  0,  out.length  -  1);	  System.arraycopy(this.out,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
171	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  out.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  out.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.out,  0,  this.format,  0,  out.length  +  1);	  System.arraycopy(this.out,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
172	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  out.length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  out.length  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.out,  0,  this.format,  0,  out.length  -  2);	  System.arraycopy(this.out,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
173	[BUG]  [BUGGY]  System.arraycopy(this.in,  0,  this.format,  0,  out.length);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.in,  0,  this.format,  0,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.in,  0,  this.format,  0,  out.length);	  System.arraycopy(this.out,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
174	[BUG]  [BUGGY]  this.newRecord  =  new  Record(out,  this.format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(out,  this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(out,  this.format);	  this.newRecord    =    new    Record(out);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
175	[BUG]  [BUGGY]  this.newRecord  =  new  Record(out,  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(out,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(out,  format);	  this.newRecord    =    new    Record(out);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
176	[BUG]  [BUGGY]  this.newRecord  =  new  Record(out,  out.toString());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(out,  out.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(out,  out.toString());	  this.newRecord    =    new    Record(out);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
177	[BUG]  [BUGGY]  this.newRecord  =  new  Record(out,  true);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(out,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(out,  true);	  this.newRecord    =    new    Record(out);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
178	[BUG]  [BUGGY]  this.newRecord(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord(out);	  this.newRecord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
179	[BUG]  [BUGGY]  this.newRecord(false);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord(false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord(false);	  this.newRecord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
180	[BUG]  [BUGGY]  this.newRecord(true);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord(true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord(true);	  this.newRecord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
181	[BUG]  [BUGGY]  this.newRecord(this.out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord(this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord(this.out);	  this.newRecord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
182	[BUG]  [BUGGY]  this.newRecord(record);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord(record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord(record);	  this.newRecord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  3);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  3);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  -  3);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  4);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  4);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  -  4);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
185	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  out.length  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  out.length  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  1,  out.length  -  2);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
186	[BUG]  [BUGGY]  this.newRecord  =  new  RecordImpl(out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordImpl(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordImpl(out);	  this.newRecord    =    new    RecordImpl();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
187	[BUG]  [BUGGY]  this.newRecord  =  new  RecordImpl(this.out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordImpl(this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordImpl(this.out);	  this.newRecord    =    new    RecordImpl();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
188	[BUG]  [BUGGY]  this.newRecord  =  new  RecordImpl(0);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordImpl(0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordImpl(0);	  this.newRecord    =    new    RecordImpl();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
189	[BUG]  [BUGGY]  this.newRecord  =  new  RectangleImpl();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RectangleImpl();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RectangleImpl();	  this.newRecord    =    new    RecordImpl();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
190	[BUG]  [BUGGY]  newRecord(this.format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  newRecord(this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	newRecord(this.format);	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
191	[BUG]  [BUGGY]  newRecord(out,  this.format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  newRecord(out,  this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	newRecord(out,  this.format);	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
192	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord(out);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  newRecord(out);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  newRecord(out);  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
193	[BUG]  [BUGGY]  if(out!=  null)  {  newRecord(out);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(out!=  null)  {  newRecord(out);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(out!=  null)  {  newRecord(out);  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
194	[BUG]  [BUGGY]  if(out!=  null)  {  newRecord(out);  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(out!=  null)  {  newRecord(out);  }  else  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(out!=  null)  {  newRecord(out);  }  else  {  out.append('n');  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
195	[BUG]  [BUGGY]  if(out!=  null)  {  newRecord(out);  }  else  {  out.reset();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(out!=  null)  {  newRecord(out);  }  else  {  out.reset();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(out!=  null)  {  newRecord(out);  }  else  {  out.reset();  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
196	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  1,  format.length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  out,  1,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  out,  1,  format.length);	  System.arraycopy(out,    0,    this.format,    1,    format.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
197	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  1,  format.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  1,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  1,  format.length);	  System.arraycopy(out,    0,    this.format,    1,    format.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
198	[BUG]  [BUGGY]  System.arraycopy(format,  0,  this.format,  1,  out.length);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(format,  0,  this.format,  1,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(format,  0,  this.format,  1,  out.length);	  System.arraycopy(out,    0,    this.format,    1,    format.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
199	[BUG]  [BUGGY]  System.err.println( "Unable  to  parse  CSV  file: "  +  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.err.println( "Unable  to  parse  CSV  file: "  +  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.err.println( "Unable  to  parse  CSV  file: "  +  out);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    parse    CSV    file:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
200	[BUG]  [BUGGY]  AssertionError.println( "Unable  to  parse  CSV  file: "  +  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.println( "Unable  to  parse  CSV  file: "  +  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.println( "Unable  to  parse  CSV  file: "  +  out);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    parse    CSV    file:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
201	[BUG]  [BUGGY]  AssertionError.error( "Unable  to  parse  CSV  file: "  +  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.error( "Unable  to  parse  CSV  file: "  +  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.error( "Unable  to  parse  CSV  file: "  +  out);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    parse    CSV    file:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
202	[BUG]  [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>(format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>(format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  TreeMap  <  CSVFormat>(format);	  this.newRecord    =    new    TreeMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
203	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  /  2);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  /  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  /  2);	  System.arraycopy(out,    0,    this.format,    0,    out.length    +    2);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
204	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  *  2);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  *  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  *  2);	  System.arraycopy(out,    0,    this.format,    0,    out.length    +    2);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
205	[BUG]  [BUGGY]  AssertionError.error(out,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.error(out,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.error(out,  newRecord);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
206	[BUG]  [BUGGY]  AssertionError.warning( "msg.newRecord ",  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.warning( "msg.newRecord ",  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.warning( "msg.newRecord ",  newRecord);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
207	[BUG]  [BUGGY]  AssertionError.warning( "msg.new.record ",  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.warning( "msg.new.record ",  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.warning( "msg.new.record ",  newRecord);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
208	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(out);	  this.newRecord    =    new    LinkedHashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
209	[BUG]  [BUGGY]  AssertionError.error( "Unexpected  newRecord: "  +  out.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.error( "Unexpected  newRecord: "  +  out.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.error( "Unexpected  newRecord: "  +  out.toString());	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.length();    i++)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
210	[BUG]  [BUGGY]  newRecord  =  true;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  newRecord  =  true;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	newRecord  =  true;	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
211	[BUG]  [BUGGY]  if(newRecord)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord)  {  newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord)  {  newRecord  =  false;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
212	[BUG]  [BUGGY]  ||  newRecord)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||  newRecord)  {  newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||  newRecord)  {  newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
213	[BUG]  [BUGGY]  ||  newRecord)  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||  newRecord)  {  this.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||  newRecord)  {  this.newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
214	[BUG]  [BUGGY]  if(newRecord)  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord)  {  this.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord)  {  this.newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
215	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  out.length  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  out.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.format,  0,  out.length  -  1);	  System.arraycopy(format,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
216	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  out.length  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  out.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.format,  0,  out.length  +  1);	  System.arraycopy(format,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
217	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(7);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(7);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(7);	  this.newRecord    =    new    HashMap    <    CSVFormat>(8);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
218	[BUG]  [BUGGY]  if(newRecord!=  null)  {  setRecord(false);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  setRecord(false);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  setRecord(false);  }	  setRecord(false);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
219	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  setRecord(false);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  setRecord(false);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  setRecord(false);  }	  setRecord(false);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
220	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  setRecord(false);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  setRecord(false);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  setRecord(false);  }	  setRecord(false);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
221	[BUG]  [BUGGY]  if(newRecord!=  false)  {  setRecord(false);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  false)  {  setRecord(false);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  false)  {  setRecord(false);  }	  setRecord(false);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
222	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  out.length  -  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  out.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  out.length  -  1);	  System.arraycopy(this.format,    0,    this.out,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
223	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  out.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  out.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  out.length  +  1);	  System.arraycopy(this.format,    0,    this.out,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
224	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.out,  0,  out.length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.out,  0,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.out,  0,  out.length);	  System.arraycopy(this.format,    0,    this.out,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
225	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  out.length  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  out.length  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  out.length  -  2);	  System.arraycopy(this.format,    0,    this.out,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
226	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  String>emptySet();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  String>emptySet();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  String>emptySet();	  this.newRecord    =    Collections.    <    String>emptyList();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
227	[BUG]  [BUGGY]  this.newRecord  =  Lists.  <  String>emptyList();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.  <  String>emptyList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.  <  String>emptyList();	  this.newRecord    =    Collections.    <    String>emptyList();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
228	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  Object>emptyList();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  Object>emptyList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  Object>emptyList();	  this.newRecord    =    Collections.    <    String>emptyList();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
229	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  String>emptyArray();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  String>emptyArray();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  String>emptyArray();	  this.newRecord    =    Collections.    <    String>emptyList();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
230	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.out,  this.format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.out,  this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.out,  this.format);	  this.newRecord    =    new    Record    <    CSV>(this.out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
231	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.out,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.out,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.out,  out);	  this.newRecord    =    new    Record    <    CSV>(this.out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
232	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.out,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.out,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.out,  format);	  this.newRecord    =    new    Record    <    CSV>(this.out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
233	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.in);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.in);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.in);	  this.newRecord    =    new    Record    <    CSV>(this.out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
234	[BUG]  [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.err.println( "Unable  to  instantiate  CSVFormat: "  +  getName());	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    getName());    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
235	[BUG]  [BUGGY]  System.err.println( "Can  not  instantiate  CSVFormat: "  +  getName());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.err.println( "Can  not  instantiate  CSVFormat: "  +  getName());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.err.println( "Can  not  instantiate  CSVFormat: "  +  getName());	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    getName());    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
236	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  this.format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.out,  this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.out,  this.format);	  this.newRecord    =    new    Record    <    CSVFormat>(this.out);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
237	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out,  format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(out,  format);	  this.newRecord    =    new    HashMap    <    CSVFormat>(out);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
238	[BUG]  [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  TreeMap  <  CSVFormat>(out);	  this.newRecord    =    new    HashMap    <    CSVFormat>(out);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
239	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out,  this.format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out,  this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(out,  this.format);	  this.newRecord    =    new    HashMap    <    CSVFormat>(out);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
240	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "null ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    newRecord();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
241	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  newRecord();  }  else  {  out.append( "null ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  newRecord();  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    newRecord();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
242	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "n ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "n ");  }	  if(newRecord!=    null)    {    newRecord();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  format.length  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  format.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  format.length  +  1);	  System.arraycopy(this.format,    0,    this.out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  this.format.length);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  this.format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  this.format.length);	  System.arraycopy(this.format,    0,    this.out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  format.length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  format.length  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  format.length  -  2);	  System.arraycopy(this.format,    0,    this.out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
246	[BUG]  [BUGGY]  this.newRecord  =  Collections.emptyMap();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.emptyMap();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.emptyMap();	  this.newRecord    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
247	[BUG]  [BUGGY]  this.newRecord  =  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.EMPTY_SET;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.EMPTY_SET;	  this.newRecord    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
248	[BUG]  [BUGGY]  this.newRecord  =  Collections.emptyArray();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.emptyArray();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.emptyArray();	  this.newRecord    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
249	[BUG]  [BUGGY]  this.newRecord  =  new  RecordWriter(out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordWriter(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordWriter(out);	  this.newRecord    =    new    RecordWriter();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
250	[BUG]  [BUGGY]  this.newRecord  =  new  RecordWriter(this.out);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordWriter(this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordWriter(this.out);	  this.newRecord    =    new    RecordWriter();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
251	[BUG]  [BUGGY]  this.newRecord  =  new  RecordWriter(true);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordWriter(true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordWriter(true);	  this.newRecord    =    new    RecordWriter();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
252	[BUG]  [BUGGY]  this.newRecord  =  new  RecordWriter(false);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordWriter(false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordWriter(false);	  this.newRecord    =    new    RecordWriter();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
253	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  record);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(out,  record);	  this.newRecord    =    new    Record    <    CSV>(record);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
254	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(record,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(record,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(record,  out);	  this.newRecord    =    new    Record    <    CSV>(record);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
255	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(record,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(record,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(record,  format);	  this.newRecord    =    new    Record    <    CSV>(record);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
256	[BUG]  [BUGGY]  ||(newRecord  ==  false  &&  format.equals( " ")))  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||(newRecord  ==  false  &&  format.equals( " ")))  {  this.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||(newRecord  ==  false  &&  format.equals( " ")))  {  this.newRecord  =  true;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
257	[BUG]  [BUGGY]  ||(newRecord  ==  false  &&  format.equals( "n ")))  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||(newRecord  ==  false  &&  format.equals( "n ")))  {  this.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||(newRecord  ==  false  &&  format.equals( "n ")))  {  this.newRecord  =  true;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
258	[BUG]  [BUGGY]  ||  newRecord  ==  false)  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||  newRecord  ==  false)  {  this.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||  newRecord  ==  false)  {  this.newRecord  =  true;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
259	[BUG]  [BUGGY]  ||(newRecord  ==  false  &&  this.newRecord!=  false))  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||(newRecord  ==  false  &&  this.newRecord!=  false))  {  this.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||(newRecord  ==  false  &&  this.newRecord!=  false))  {  this.newRecord  =  true;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
260	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
261	[BUG]  [BUGGY]  System.arraycopy(out,  0,  out,  0,  format.length);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  out,  0,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  out,  0,  format.length);	  System.arraycopy(format,    0,    out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(out,  0,  format,  0,  format.length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  format,  0,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  format,  0,  format.length);	  System.arraycopy(format,    0,    out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
263	[BUG]  [BUGGY]  System.arraycopy(cSVFormat,  0,  out,  0,  format.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(cSVFormat,  0,  out,  0,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(cSVFormat,  0,  out,  0,  format.length);	  System.arraycopy(format,    0,    out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
264	[BUG]  [BUGGY]  System.arraycopy(data,  0,  out,  0,  format.length);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(data,  0,  out,  0,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(data,  0,  out,  0,  format.length);	  System.arraycopy(format,    0,    out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
265	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  1,  out.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  1,  out.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  -  1,  out.length  +  1);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    1,    out.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
266	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  1,  out.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  1,  out.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  -  1,  out.length  -  1);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    1,    out.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
267	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  1,  format.length);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  -  1,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  -  1,  format.length);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    1,    out.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
268	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  +  1,  out.length);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  +  1,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  +  1,  out.length);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    1,    out.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
269	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(1);	  this.newRecord    =    new    HashMap    <    CSVFormat>(1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
270	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  out.length  -  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  out.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  out,  0,  out.length  -  1);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
271	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  out.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  out.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  1,  out.length  -  1);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
272	[BUG]  [BUGGY]  this.newRecord  =  new  Record(0,  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(0,  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(0,  1);	  this.newRecord    =    new    Record(1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
273	[BUG]  [BUGGY]  this.newRecord  =  new  Record(4);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(4);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(4);	  this.newRecord    =    new    Record(1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
274	[BUG]  [BUGGY]  append( "null ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  append( "null ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	append( "null ");	  append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
275	[BUG]  [BUGGY]  append( "None ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  append( "None ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	append( "None ");	  append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
276	[BUG]  [BUGGY]  append( "# ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  append( "# ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	append( "# ");	  append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
277	[BUG]  [BUGGY]  append( "  <   ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  append( "  <   ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	append( "  <   ");	  append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
278	[BUG]  [BUGGY]  append( "  <  / ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  append( "  <  / ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	append( "  <  / ");	  append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
279	[BUG]  [BUGGY]  append( "   ");  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  append( "   ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	append( "   ");	  append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
280	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.cSVFormat);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.cSVFormat);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.cSVFormat);	  this.newRecord    =    new    Record    <    CSVFormat>(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
281	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat,  format);	  this.newRecord    =    new    Record    <    CSVFormat>(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
282	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat,  out);	  this.newRecord    =    new    Record    <    CSVFormat>(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
283	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  1,  out.length);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  1,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  1,  out.length);	  System.arraycopy(out,    0,    this.format,    1,    out.length);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
284	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  2,  out.length);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  2,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  2,  out.length);	  System.arraycopy(out,    0,    this.format,    1,    out.length);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
285	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  out,  0,  this.format.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.out,  0,  out,  0,  this.format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.out,  0,  out,  0,  this.format.length);	  System.arraycopy(this.out,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
286	[BUG]  [BUGGY]  if(this.newRecord!=  null)  {  this.newRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(this.newRecord!=  null)  {  this.newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(this.newRecord!=  null)  {  this.newRecord();  }	  if(newRecord    >=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
287	[BUG]  [BUGGY]  if(this.newRecord!=  null)  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(this.newRecord!=  null)  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(this.newRecord!=  null)  {  newRecord();  }	  if(newRecord    >=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
288	[BUG]  [BUGGY]  (newRecord!=  null))  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  (newRecord!=  null))  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	(newRecord!=  null))  {  newRecord();  }	  if(newRecord    >=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
289	[BUG]  [BUGGY]  ((  CSVFormat)out).setRecord(newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ((  CSVFormat)out).setRecord(newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	((  CSVFormat)out).setRecord(newRecord);	  if(newRecord    >=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
290	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.out,  0,  format.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.out,  0,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.out,  0,  format.length);	  System.arraycopy(this.format,    0,    this.out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
291	[BUG]  [BUGGY]  System.arraycopy(format,  0,  this.out,  0,  format.length);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(format,  0,  this.out,  0,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(format,  0,  this.out,  0,  format.length);	  System.arraycopy(this.format,    0,    this.out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
292	[BUG]  [BUGGY]  (newRecord!=  false))  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  (newRecord!=  false))  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	(newRecord!=  false))  {  newRecord();  }	  if(newRecord!=    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
293	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyList(out);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyList(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  CSV_NAME>emptyList(out);	  this.newRecord    =    Collections.    <    CSV_NAME>emptyList();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
294	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyMap();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyMap();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  CSV_NAME>emptyMap();	  this.newRecord    =    Collections.    <    CSV_NAME>emptyList();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
295	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out,  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(out,  out);	  this.newRecord    =    new    HashMap    <    CSVFormat>(out);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
296	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out,  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(out,  true);	  this.newRecord    =    new    HashMap    <    CSVFormat>(out);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
297	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length();  i++)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length();  i++)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length();  i++)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.length();    i++)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
298	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length();  i++)  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length();  i++)  {  this.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length();  i++)  {  this.newRecord  =  true;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.length();    i++)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
299	[BUG]  [BUGGY]  System.arraycopy(format,  0,  out,  0,  format.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(format,  0,  out,  0,  format.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(format,  0,  out,  0,  format.length  -  1);	  System.arraycopy(format,    0,    out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
300	[BUG]  [BUGGY]  System.arraycopy(format,  0,  out,  1,  format.length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(format,  0,  out,  1,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(format,  0,  out,  1,  format.length);	  System.arraycopy(format,    0,    out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
301	[BUG]  [BUGGY]  System.arraycopy(format,  0,  out,  0,  format.length  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(format,  0,  out,  0,  format.length  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(format,  0,  out,  0,  format.length  +  1);	  System.arraycopy(format,    0,    out,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
302	[BUG]  [BUGGY]  this.newRecord  |=  0;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  |=  0;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  |=  0;	  this.newRecord    |=    false;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
303	[BUG]  [BUGGY]  if(newRecord!=  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
304	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
305	[BUG]  [BUGGY]  if(newRecord!=  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
306	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  j  =  0;  j  <  out.length;  ++j)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  j  =  0;  j  <  out.length;  ++j)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  j  =  0;  j  <  out.length;  ++j)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
307	[BUG]  [BUGGY]  AssertionError.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.println( "Unable  to  instantiate  CSVFormat: "  +  getName());	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    getName());    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
308	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    getName());    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
309	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  getName());  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    getName());    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
310	[BUG]  [BUGGY]  (newRecord  ==  false))  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  (newRecord  ==  false))  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	(newRecord  ==  false))  {  newRecord();  }	  if(newRecord    ==    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
311	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.record();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.record();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.record();  }	  if(newRecord    ==    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
312	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord();  }	  if(newRecord    ==    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
313	[BUG]  [BUGGY]  newRecord(out,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  newRecord(out,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	newRecord(out,  format);	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
314	[BUG]  [BUGGY]  if(out!=  null)  {  newRecord(out);  }  else  {  out.addChangeListener(this);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(out!=  null)  {  newRecord(out);  }  else  {  out.addChangeListener(this);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(out!=  null)  {  newRecord(out);  }  else  {  out.addChangeListener(this);  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
315	[BUG]  [BUGGY]  if(out!=  null)  {  newRecord(out);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(out!=  null)  {  newRecord(out);  }  else  {  out.append( "n ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(out!=  null)  {  newRecord(out);  }  else  {  out.append( "n ");  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
316	[BUG]  [BUGGY]  append( "  }   ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  append( "  }   ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	append( "  }   ");	  append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
317	[BUG]  [BUGGY]  this.newRecord  =  new  Record(out,  record);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(out,  record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(out,  record);	  this.newRecord    =    new    Record(record);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
318	[BUG]  [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>(4);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  TreeMap  <  CSVFormat>(4);	  this.newRecord    =    new    TreeMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
319	[BUG]  [BUGGY]  Arrays.arraycopy(out,  0,  this.format,  0,  out.length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Arrays.arraycopy(out,  0,  this.format,  0,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Arrays.arraycopy(out,  0,  this.format,  0,  out.length);	  System.arraycopy(format,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
320	[BUG]  [BUGGY]  setRecord(true,  true);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  setRecord(true,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	setRecord(true,  true);	  setRecord(true);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
321	[BUG]  [BUGGY]  this.newRecord  =  new  Record(out,  this.out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(out,  this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(out,  this.out);	  this.newRecord    =    new    Record(this.out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
322	[BUG]  [BUGGY]  It.newRecord  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  It.newRecord  =  false;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	It.newRecord  =  false;	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
323	[BUG]  [BUGGY]  Iterator.newRecord  =  false;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator.newRecord  =  false;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator.newRecord  =  false;	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
324	[BUG]  [BUGGY]  The.newRecord  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  The.newRecord  =  false;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	The.newRecord  =  false;	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
325	[BUG]  [BUGGY]  if(newRecord)  {  setRecord(false);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord)  {  setRecord(false);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord)  {  setRecord(false);  }	  setRecord(false);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
326	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  this);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  this);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  this);	  this.newRecord    =    new    Record    <    CSVFormat>(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
327	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  cSVFormat);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  cSVFormat);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  cSVFormat);	  this.newRecord    =    new    Record    <    CSVFormat>(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
328	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(out,  out);	  this.newRecord    =    new    Record    <    CSV>(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
329	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
330	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
331	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
332	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  this.newRecords.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator  <  CSV>  it  =  this.newRecords.iterator();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator  <  CSV>  it  =  this.newRecords.iterator();	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
333	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(6);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(6);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(6);	  this.newRecord    =    new    Record    <    CSVFormat>(4);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
334	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(4);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(4);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(4);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
335	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(2);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(2);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
336	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(8);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(8);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(8);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
337	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(format,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(format,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(format,  out);	  this.newRecord    =    new    Record    <    CSV>(format);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
338	[BUG]  [BUGGY]  this.newRecord  =  Collections.unmodifiableList(out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.unmodifiableList(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.unmodifiableList(out);	  this.newRecord    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
339	[BUG]  [BUGGY]  this.newRecord  =  new  Record(out,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(out,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(out,  out);	  this.newRecord    =    new    Record(out);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
340	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }	  if(newRecord!=    null)    {    newRecord();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
341	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(false,  out);	  this.newRecord    =    new    Record    <    CSV>(false);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
342	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  String>emptyList(out);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  String>emptyList(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  String>emptyList(out);	  this.newRecord    =    Collections.    <    String>emptyList();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
343	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  Record>();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  Record>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  Record>();	  this.newRecord    =    new    ArrayList();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
344	[BUG]  [BUGGY]  this.newRecord  =  new  Record(3);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(3);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(3);	  this.newRecord    =    new    Record(1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
345	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  out);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  out);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  out);  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
346	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  out);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  out);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  out);  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
347	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  this.format  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  this.format  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  this.format  +  1);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
348	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  this.format  -  1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  this.format  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  this.format  -  1);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
349	[BUG]  [BUGGY]  if(newRecord!=  false)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  false)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  false)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
350	[BUG]  [BUGGY]  ||(newRecord  ==  false))  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||(newRecord  ==  false))  {  this.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||(newRecord  ==  false))  {  this.newRecord  =  true;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
351	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  *  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length  *  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length  *  1);	  System.arraycopy(out,    0,    this.format,    0,    out.length    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
352	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  out.length,  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  out.length,  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  1,  out.length,  1);	  System.arraycopy(out,    0,    this.format,    1,    out.length);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
353	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(record);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(record);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
354	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  System.err.println( "Unable  to  parse  CSV  file: "  +  out);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  System.err.println( "Unable  to  parse  CSV  file: "  +  out);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  System.err.println( "Unable  to  parse  CSV  file: "  +  out);  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    parse    CSV    file:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
355	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  System.err.println( "Unable  to  parse  CSV  file: "  +  out);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  System.err.println( "Unable  to  parse  CSV  file: "  +  out);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  System.err.println( "Unable  to  parse  CSV  file: "  +  out);  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    parse    CSV    file:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
356	[BUG]  [BUGGY]  if(newRecord!=  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
357	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
358	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  j  =  0;  j  <  out.size();  ++j)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  j  =  0;  j  <  out.size();  ++j)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  j  =  0;  j  <  out.size();  ++j)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
359	[BUG]  [BUGGY]  this.newRecord(out,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord(out,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord(out,  false);	  this.newRecord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
360	[BUG]  [BUGGY]  this.newRecord(out,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord(out,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord(out,  format);	  this.newRecord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
361	[BUG]  [BUGGY]  this.newRecord(out,  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord(out,  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord(out,  null);	  this.newRecord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
362	[BUG]  [BUGGY]  this.newRecord  =  Lists.newArrayList(out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.newArrayList(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.newArrayList(out);	  this.newRecord    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
363	[BUG]  [BUGGY]  this.newRecord  =  Lists.newArrayList(record);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.newArrayList(record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.newArrayList(record);	  this.newRecord    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
364	[BUG]  [BUGGY]  this.newRecord  =  Lists.newArrayList(1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.newArrayList(1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.newArrayList(1);	  this.newRecord    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
365	[BUG]  [BUGGY]  System.arraycopy(newRecord,  0,  this.format,  0,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(newRecord,  0,  this.format,  0,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(newRecord,  0,  this.format,  0,  out);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
366	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  1,  newRecord);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
367	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.toString());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.toString());	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
368	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.data.length);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.data.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.data.length);	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
369	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    i++)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
370	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  j  =  0;  j  <  out.size();  j++)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  j  =  0;  j  <  out.size();  j++)  {  this.newRecord  =  false;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  j  =  0;  j  <  out.size();  j++)  {  this.newRecord  =  false;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    i++)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
371	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  format  +  1);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    format);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
372	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  format.toString());	  this.newRecord    =    new    Record    <    CSVFormat>(out,    format);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
373	[BUG]  [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST  +  1;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.EMPTY_LIST  +  1;	  this.newRecord    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
374	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  E>emptyList();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  E>emptyList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  E>emptyList();	  this.newRecord    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
375	[BUG]  [BUGGY]  System.arraycopy(format,  0,  this.format,  0,  format.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(format,  0,  this.format,  0,  format.length  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(format,  0,  this.format,  0,  format.length  -  1);	  System.arraycopy(format,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
376	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(out);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
377	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(8);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(8);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(8);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
378	[BUG]  [BUGGY]  if(newRecord!=  null)  {  this.newRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  this.newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  this.newRecord();  }	  if(newRecord    ==    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
379	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  this.record();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  this.record();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  this.record();  }	  if(newRecord    ==    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
380	[BUG]  [BUGGY]  if(newRecord!=  null)  {  this.record();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  this.record();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  this.record();  }	  if(newRecord    ==    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
381	[BUG]  [BUGGY]  this.newRecord  =  new  RecordReader(out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordReader(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordReader(out);	  this.newRecord    =    new    RecordWriter();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
382	[BUG]  [BUGGY]  this.newRecord  =  new  RecordReader();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordReader();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordReader();	  this.newRecord    =    new    RecordWriter();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
383	[BUG]  [BUGGY]  System.arraycopy(out,  0,  out,  0,  this.format.length);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(out,  0,  out,  0,  this.format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(out,  0,  out,  0,  this.format.length);	  System.arraycopy(this.format,    0,    out,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
384	[BUG]  [BUGGY]  if(newRecord  >  0)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  >  0)  {  newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  >  0)  {  newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
385	[BUG]  [BUGGY]  if(newRecord!=  false)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  false)  {  newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  false)  {  newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
386	[BUG]  [BUGGY]  ||  newRecord)  {  thisRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||  newRecord)  {  thisRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||  newRecord)  {  thisRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
387	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  String,Object>();	  this.newRecord    =    null;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
388	[BUG]  [BUGGY]  this.newRecord  =  new  java.util.ArrayList  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  java.util.ArrayList  <  CSVFormat>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  java.util.ArrayList  <  CSVFormat>();	  this.newRecord    =    new    LinkedHashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
389	[BUG]  [BUGGY]  rehash();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  rehash();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	rehash();	  reset();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
390	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(out,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>(out,  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Rectangle  <  CSV>(out,  out);	  this.newRecord    =    new    Rectangle    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
391	[BUG]  [BUGGY]  if(newRecord!=  null)  {  setRecord(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  setRecord(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  setRecord(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  setRecord(false);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
392	[BUG]  [BUGGY]  if(newRecord!=  null)  {  setRecord(false);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  setRecord(false);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  setRecord(false);  }  else  {  throw  new  IllegalStateException( " ");  }	  setRecord(false);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
393	[BUG]  [BUGGY]  System.arraycopy(format,  0,  this.format,  1,  format.length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(format,  0,  this.format,  1,  format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(format,  0,  this.format,  1,  format.length);	  System.arraycopy(out,    0,    this.format,    1,    format.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
394	[BUG]  [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat:  ' "  +  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat:  ' "  +  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.err.println( "Unable  to  instantiate  CSVFormat:  ' "  +  out);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
395	[BUG]  [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: ",  +  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: ",  +  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.err.println( "Unable  to  instantiate  CSVFormat: ",  +  out);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
396	[BUG]  [BUGGY]  Iterator  <  CSVFormat>  it  =  this.newRecords.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator  <  CSVFormat>  it  =  this.newRecords.iterator();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator  <  CSVFormat>  it  =  this.newRecords.iterator();	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
397	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  newRecord);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
398	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  this.type);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out,  this.type);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(out,  this.type);	  this.newRecord    =    new    Record    <    CSV>(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
399	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  this.format.values().iterator();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator  <  CSV>  it  =  this.format.values().iterator();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator  <  CSV>  it  =  this.format.values().iterator();	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
400	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  this.format.values().iterator().next();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator  <  CSV>  it  =  this.format.values().iterator().next();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator  <  CSV>  it  =  this.format.values().iterator().next();	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
401	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  this.format.iterator();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator  <  CSV>  it  =  this.format.iterator();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator  <  CSV>  it  =  this.format.iterator();	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.size();    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
402	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    ==    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
403	[BUG]  [BUGGY]  ||  newRecord  ==  null)  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||  newRecord  ==  null)  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||  newRecord  ==  null)  {  newRecord();  }	  if(newRecord    ==    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
404	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  String>emptyList()?  Collections.  <  String>emptyList()  :  Collections.  <  String>emptyList();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  String>emptyList()?  Collections.  <  String>emptyList()  :  Collections.  <  String>emptyList();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  String>emptyList()?  Collections.  <  String>emptyList()  :  Collections.  <  String>emptyList();	  this.newRecord    =    Collections.    <    String>emptyList();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
405	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  String>emptyList()?  Collections.  <  String>emptyList()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  String>emptyList()?  Collections.  <  String>emptyList()  :  null;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  String>emptyList()?  Collections.  <  String>emptyList()  :  null;	  this.newRecord    =    Collections.    <    String>emptyList();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
406	[BUG]  [BUGGY]  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	{  this.newRecord  =  true;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
407	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  this.newRecorders.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator  <  CSV>  it  =  this.newRecorders.iterator();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator  <  CSV>  it  =  this.newRecorders.iterator();	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
408	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  this.newRecords();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator  <  CSV>  it  =  this.newRecords();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator  <  CSV>  it  =  this.newRecords();	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
409	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  this.newRecorders().iterator();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator  <  CSV>  it  =  this.newRecorders().iterator();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator  <  CSV>  it  =  this.newRecorders().iterator();	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
410	[BUG]  [BUGGY]  this.newRecord  =  new  RecordImpl(System.identityHashCode(this));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordImpl(System.identityHashCode(this));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordImpl(System.identityHashCode(this));	  this.newRecord    =    new    RecordImpl();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
411	[BUG]  [BUGGY]  this.newRecord  =  new  RecordImpl(System.err);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordImpl(System.err);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordImpl(System.err);	  this.newRecord    =    new    RecordImpl();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
412	[BUG]  [BUGGY]  this.newRecord  =  new  RecordImpl(System.out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordImpl(System.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordImpl(System.out);	  this.newRecord    =    new    RecordImpl();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
413	[BUG]  [BUGGY]  this.newRecord  =  new  RecordImpl(record);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordImpl(record);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordImpl(record);	  this.newRecord    =    new    RecordImpl();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
414	[BUG]  [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  out.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(cSVFormat,  0,  this.format,  0,  out.length);	  System.arraycopy(this.out,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
415	[BUG]  [BUGGY]  System.arraycopy(this.print,  0,  this.format,  0,  out.length);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.print,  0,  this.format,  0,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.print,  0,  this.format,  0,  out.length);	  System.arraycopy(this.out,    0,    this.format,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
416	[BUG]  [BUGGY]  append( "none ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  append( "none ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	append( "none ");	  append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
417	[BUG]  [BUGGY]  append( "  => ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  append( "  => ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	append( "  => ");	  append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
418	[BUG]  [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST?  Collections.  <  E>emptyList()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST?  Collections.  <  E>emptyList()  :  Collections.EMPTY_LIST;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.EMPTY_LIST?  Collections.  <  E>emptyList()  :  Collections.EMPTY_LIST;	  this.newRecord    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
419	[BUG]  [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST?  Collections.emptyList()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.EMPTY_LIST?  Collections.emptyList()  :  Collections.EMPTY_LIST;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.EMPTY_LIST?  Collections.emptyList()  :  Collections.EMPTY_LIST;	  this.newRecord    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
420	[BUG]  [BUGGY]  this.newRecord  =  new  Record(out,  this.type);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(out,  this.type);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(out,  this.type);	  this.newRecord    =    new    Record(out);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
421	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  newRecord.equals( " ")))  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||(newRecord!=  null  &&  newRecord.equals( " ")))  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||(newRecord!=  null  &&  newRecord.equals( " ")))  {  newRecord();  }	  if(newRecord    >=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
422	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  newRecord.isEmpty()))  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||(newRecord!=  null  &&  newRecord.isEmpty()))  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||(newRecord!=  null  &&  newRecord.isEmpty()))  {  newRecord();  }	  if(newRecord    >=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
423	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  newRecord.size()  >  0))  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||(newRecord!=  null  &&  newRecord.size()  >  0))  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||(newRecord!=  null  &&  newRecord.size()  >  0))  {  newRecord();  }	  if(newRecord    >=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
424	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  newRecord.isEnabled()))  {  newRecord();  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  ||(newRecord!=  null  &&  newRecord.isEnabled()))  {  newRecord();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	||(newRecord!=  null  &&  newRecord.isEnabled()))  {  newRecord();  }	  if(newRecord    >=    null)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
425	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  this.format.length);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.format,  0,  this.format.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.format,  0,  this.format.length);	  System.arraycopy(format,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
426	[BUG]  [BUGGY]  this.newRecord  =  new  RecordWriter(System.out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordWriter(System.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordWriter(System.out);	  this.newRecord    =    new    RecordWriter();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
427	[BUG]  [BUGGY]  this.newRecord  =  new  RecordWriter(this);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordWriter(this);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordWriter(this);	  this.newRecord    =    new    RecordWriter();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
428	[BUG]  [BUGGY]  this.newRecord  =  new  RecordWriter(out,  true);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  RecordWriter(out,  true);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  RecordWriter(out,  true);	  this.newRecord    =    new    RecordWriter();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
429	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  this.format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  this.format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  this.format);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
430	[BUG]  [BUGGY]  this.newRecord  |=  newRecord;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  |=  newRecord;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  |=  newRecord;	  this.newRecord    |=    false;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
431	[BUG]  [BUGGY]  this.newRecord  =  Collections.emptyOrEmptySet();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.emptyOrEmptySet();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.emptyOrEmptySet();	  this.newRecord    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
432	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false,  format);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(false,  format);	  this.newRecord    =    new    Record    <    CSV>(false);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
433	[BUG]  [BUGGY]  if(newRecord!=  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  false)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord!=    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
434	[BUG]  [BUGGY]  if(newRecord!=  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  false)  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord!=    false)    {    newRecord();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
435	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(3);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(3);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(3);	  this.newRecord    =    new    HashMap    <    CSVFormat>(4);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
436	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(10);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(10);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(10);	  this.newRecord    =    new    HashMap    <    CSVFormat>(8);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
437	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  this.type);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  this.type);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  this.type);	  this.newRecord    =    new    Record    <    CSVFormat>(out,    out);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
438	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.in,  this.out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.in,  this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.in,  this.out);	  this.newRecord    =    new    Record    <    CSVFormat>(this.out);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
439	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  K,  V>();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  HashMap  <  K,  V>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  HashMap  <  K,  V>();	  this.newRecord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
440	[BUG]  [BUGGY]  System.err.println( "Failed  to  instantiate  CSVFormat: "  +  getName());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.err.println( "Failed  to  instantiate  CSVFormat: "  +  getName());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.err.println( "Failed  to  instantiate  CSVFormat: "  +  getName());	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    getName());    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
441	[BUG]  [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat:  ' "  +  getName());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat:  ' "  +  getName());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.err.println( "Unable  to  instantiate  CSVFormat:  ' "  +  getName());	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    getName());    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
442	[BUG]  [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: ",  getName());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: ",  getName());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.err.println( "Unable  to  instantiate  CSVFormat: ",  getName());	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    getName());    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
443	[BUG]  [BUGGY]  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	{  this.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
444	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  false;  }  else  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.newRecord  =  true;  }	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    this.newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
445	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.in,  this.out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.in,  this.out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record  <  CSV>(this.in,  this.out);	  this.newRecord    =    new    Record    <    CSV>(this.out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
446	[BUG]  [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyImpl();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Collections.  <  CSV_NAME>emptyImpl();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Collections.  <  CSV_NAME>emptyImpl();	  this.newRecord    =    Collections.    <    CSV_NAME>emptyList();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
447	[BUG]  [BUGGY]  Iterator.notEmpty( "newRecord ".equals(this.record));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator.notEmpty( "newRecord ".equals(this.record));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator.notEmpty( "newRecord ".equals(this.record));	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
448	[BUG]  [BUGGY]  Iterator.notEmpty( "newRecord ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator.notEmpty( "newRecord ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator.notEmpty( "newRecord ");	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
449	[BUG]  [BUGGY]  Iterator.notEmpty( "newRecord ".equals(this.newRecord));  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  Iterator.notEmpty( "newRecord ".equals(this.newRecord));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	Iterator.notEmpty( "newRecord ".equals(this.newRecord));	  This.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
450	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  out.length  -  1,  out.length);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  out.length  -  1,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  out.length  -  1,  out.length);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    1,    out.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
451	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  out.length  -  1,  out.length);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  out.length  -  1,  out.length);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(this.out,  0,  this.format,  0,  out.length  -  1,  out.length);	  System.arraycopy(out,    0,    this.format,    0,    out.length    -    1,    out.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
452	[BUG]  [BUGGY]  System.arraycopy(newRecord,  0,  this.format,  0,  out.toString());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  System.arraycopy(newRecord,  0,  this.format,  0,  out.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	System.arraycopy(newRecord,  0,  this.format,  0,  out.toString());	  System.arraycopy(out,    0,    this.format,    0,    newRecord);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
453	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.append('n');  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
454	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.append( "n ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.append( "n ");  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
455	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.printStackTrace();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.printStackTrace();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.printStackTrace();  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
456	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.println();  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.println();  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
457	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.append( ", ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord!=  null)  {  newRecord(out);  }  else  {  out.append( ", ");  }	  newRecord(out);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
458	[BUG]  [BUGGY]  if(newRecord  <  =  true)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  <  =  true)  {  newRecord  =  true;  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  <  =  true)  {  newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
459	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "no   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "no   ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "no   ");  }	  if(newRecord!=    null)    {    newRecord();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
460	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "no-record ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "no-record ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	if(newRecord  ==  null)  {  newRecord();  }  else  {  out.append( "no-record ");  }	  if(newRecord!=    null)    {    newRecord();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
461	[BUG]  [BUGGY]  setRecord(true,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  setRecord(true,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	setRecord(true,  newRecord);	  setRecord(true);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
462	[BUG]  [BUGGY]  setRecord(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  setRecord(newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	setRecord(newRecord);	  setRecord(true);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
463	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(4);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  LinkedHashMap  <  CSVFormat>(4);	  this.newRecord    =    new    LinkedHashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
464	[BUG]  [BUGGY]  AssertionError.println( "CSV  file: "  +  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  AssertionError.println( "CSV  file: "  +  out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	AssertionError.println( "CSV  file: "  +  out);	  if(newRecord    ==    false)    {    this.newRecord    =    true;    }    else    {    System.err.println(   "Unable    to    parse    CSV    file:   "    +    out);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
465	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVReader>();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVReader>();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  ArrayList  <  CSVReader>();	  this.newRecord    =    new    ArrayList();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
466	[BUG]  [BUGGY]  this.newRecord  =  Lists.newArrayListWithCapacity(out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  Lists.newArrayListWithCapacity(out);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  Lists.newArrayListWithCapacity(out);	  this.newRecord    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
467	[BUG]  [BUGGY]  this.newRecord  =  new  Record(this.print);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();      [BUGGY]  this.newRecord  =  new  Record(this.print);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	65	65	1	replace	this.newRecord  =  new  Record(this.print);	  this.newRecord    =    new    Record(this.out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
