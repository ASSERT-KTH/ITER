54	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_ERROR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_ERROR    [FE]                                    IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_ERROR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  MILLIS_PER_SECOND  ||  linkFlag  ==  MILLIS_PER_SECOND)  {  return  false;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_ERROR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    	plausible		142	0
54	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_ERROR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_ERROR    [FE]                                    IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_ERROR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  MAX_NAMELEN  ||  linkFlag  ==  MAX_NAMELEN)  {  return  false;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_ERROR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    	plausible		142	0
88	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_LIST    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    true;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_LIST    [FE]                                IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_LIST    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    true;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  LF_DIR  ||  linkFlag  ==  LF_DIR)  {  return  true;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_LIST    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    true;    }    	plausible		88	0
89	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_LIST    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    true;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_LIST    [FE]                                IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_LIST    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    true;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  MILLIS_PER_SECOND  ||  linkFlag  ==  MILLIS_PER_SECOND)  {  return  true;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_LIST    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    true;    }    	plausible		88	0
141	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    true;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_EXTENDS    [FE]                        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    true;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  MAX_NAMELEN  ||  linkFlag  ==  MAX_NAMELEN)  {  return  true;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    true;    }    	plausible		75	0
142	[BUG]    [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(   "./       ")||    getName().endsWith(   "/       "));    [CE]    unreachable    statement    [FE]            IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(   "./       ")||    getName().endsWith(   "/       "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( "/   ")||  getName().endsWith( "./   ")||  getName().endsWith( "/   "));	  return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(   "./       ")||    getName().endsWith(   "/       "));    	plausible		13	0
142	[BUG]    [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(   "./       ")||    getName().endsWith(   "/       "));    [CE]    unreachable    statement    [FE]            IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(   "./       ")||    getName().endsWith(   "/       "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( "./. ")||  getName().endsWith( "./.* "));	  return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(   "./       ")||    getName().endsWith(   "/       "));    	plausible		13	0
149	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_SECOND)    {    return    true;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_EXTENDS    [FE]                            IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_SECOND)    {    return    true;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  MILLIS_PER_SECOND  ||  linkFlag  ==  MAX_NAMELEN)  {  return  true;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_SECOND)    {    return    true;    }    	plausible		154	0
157	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_DIR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_DIR    [FE]                        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_DIR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  LF_DIR  ||  linkFlag  ==  LF_DIR)  {  return  false;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_DIR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    	plausible		157	0
180	[BUG]    [BUGGY]    if(getName().endsWith(       "/       "))    {    return    true;    }    if(getName().endsWith(   "/       "))    {    return    true;    }    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(getName().endsWith(       "/       "))    {    return    true;    }    if(getName().endsWith(   "/       "))    {    return    true;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	Thread.currentThread().setContextClassLoader(TarArchiveEntry.class.getClassLoader());	  if(getName().endsWith(       "/       "))    {    return    true;    }    if(getName().endsWith(   "/       "))    {    return    true;    }    	plausible		27	0
309	[BUG]    [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().startsWith( "./ ")||  getName().endsWith( "./ "));	  return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    	plausible		118	0
309	[BUG]    [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().startsWith( "/ ")||  getName().endsWith( "./ "));	  return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    	plausible		118	0
309	[BUG]    [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().startsWith( ".zip ")||  getName().endsWith( ".zip "));	  return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    	plausible		118	0
309	[BUG]    [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().startsWith( "/ ")||  getName().startsWith( "/ "));	  return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    	plausible		118	0
380	[BUG]    [BUGGY]    [Delete]    [CE]    illegal    start    of    expression    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    [Delete]    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(!getName().endsWith( "/ "))  {  return  false;  }	  [Delete]    	plausible		132	0
405	[BUG]    [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( "./ ")||  getName().startsWith( "./ "));	  return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    	plausible		56	0
405	[BUG]    [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( ".js ")||  getName().startsWith( ".js "));	  return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    	plausible		56	0
405	[BUG]    [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( ".zip ")||  getName().startsWith( ".zip "));	  return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    	plausible		56	0
464	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_LITERAL    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_LIST)    {    return    true;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_LITERAL    [FE]                                IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_LITERAL    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_LIST)    {    return    true;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  DEFAULT_FILE_MODE  ||  linkFlag  ==  DEFAULT_FILE_MODE)  {  return  true;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_LITERAL    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_LIST)    {    return    true;    }    	plausible		149	0
494	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_DIR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_DIR    [FE]                        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_DIR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  DEFAULT_FILE_MODE  ||  linkFlag  ==  DEFAULT_FILE_MODE)  {  return  false;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_DIR    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_ENTRIES)    {    return    false;    }    	plausible		157	0
495	[BUG]    [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS)    {    return    true;    }    [CE]    cannot    find    symbol    EMPTY_TAR_ARCHIVE_EXTENDS    [FE]                                IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS)    {    return    true;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(linkFlag  ==  LF_DIR)  {  return  true;  }	  if(linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS    ||    linkFlag    ==    EMPTY_TAR_ARCHIVE_EXTENDS)    {    return    true;    }    	plausible		77	0
514	[BUG]    [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "./       "));    [CE]    unreachable    statement    [FE]                IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "./       "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( "/   ")||  getName().endsWith( "./   ")||  getName().endsWith( "./   "));	  return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "./       "));    	plausible		14	0
514	[BUG]    [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "./       "));    [CE]    unreachable    statement    [FE]                IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "./       "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( "./   ")||  getName().endsWith( "./   ")||  getName().endsWith( "./   "));	  return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "./       "));    	plausible		14	0
544	[BUG]    [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "/       "));    [CE]    unreachable    statement    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "/       "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( "/   ")||  getName().endsWith( "/   ")||  getName().endsWith( "/   "));	  return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "/       "));    	plausible		12	0
545	[BUG]    [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "/       "));    [CE]    unreachable    statement    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "/       "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( ".js ")||  getName().endsWith( ".js ")||  getName().endsWith( ".js "));	  return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(       "/       ")||    getName().endsWith(   "/       "));    	plausible		12	0
557	[BUG]    [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().startsWith( "./ ")||  getName().startsWith( "./ "));	  return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    	plausible		56	0
565	[BUG]    [BUGGY]    [FE]    IOException    [FE]                IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    if(getName().endsWith(       "/       "))    {    return    true;    }    if(getName().endsWith(   ")/       "))    {    return    true;    }    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	add	if(getName().endsWith(       "/       "))        {        return        true;        }        if(getName().endsWith(   ")/       "))    {    return    true;    }    if(getName().endsWith(   "/   "))  {  return  true;  }  if(getName().endsWith(   "/   "))  {  return  true;  }  if(getName().endsWith(   "/   "))  {  return  true;  }  if(getName().endsWith(   ")/   "))	  	plausible		30	0
657	[BUG]    [BUGGY]    [Delete]    [CE]    illegal    start    of    expression    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    [Delete]    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(getName().endsWith( ".js ")||  getName().endsWith( ".js "))  {  return  true;  }	  [Delete]    	plausible		132	0
659	[BUG]    [BUGGY]    [Delete]    [CE]    illegal    start    of    expression    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    [Delete]    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(getName().endsWith( ".js ")||  getName().endsWith( ".js "))  {  return  false;  }	  [Delete]    	plausible		132	0
659	[BUG]    [BUGGY]    [Delete]    [CE]    illegal    start    of    expression    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    [Delete]    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(getName().endsWith( ".js ")||  getName().endsWith( ".js "))  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    	plausible		132	0
659	[BUG]    [BUGGY]    [Delete]    [CE]    illegal    start    of    expression    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    [Delete]    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	if(getName().endsWith( ".js ")||  getName().endsWith( ".js "))  {  throw  new  IllegalStateException( " ");  }	  [Delete]    	plausible		132	0
672	[BUG]    [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( ".jpg ")||  getName().startsWith( ".jpg "));	  return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    	plausible		56	0
672	[BUG]    [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( ".java ")||  getName().startsWith( ".java "));	  return(getName().endsWith(   "/   ")||    getName().startsWith(   "/   "));    	plausible		56	0
722	[BUG]    [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(   "./       ")||    getName().endsWith(   "/       "));    [CE]    unreachable    statement    [FE]            IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(   "./       ")||    getName().endsWith(   "/       "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( ".prototype. ")||  getName().endsWith( ".prototype. "));	  return(getName().endsWith(       "/       ")||    getName().endsWith(       "/       "));    return(getName().endsWith(   "./       ")||    getName().endsWith(   "/       "));    	plausible		13	0
761	[BUG]    [BUGGY]    return(getName().endsWith(   "/   ")||    getName().endsWith(   "./   "));    [FE]    IOException    [FE]                        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().endsWith(   "/   ")||    getName().endsWith(   "./   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().endsWith( ".java ")||  getName().endsWith( "./ "));	  return(getName().endsWith(   "/   ")||    getName().endsWith(   "./   "));    	plausible		58	0
796	[BUG]    [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().startsWith( ".js ")||  getName().endsWith( ".js "));	  return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    	plausible		118	0
796	[BUG]    [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [FE]    IOException    [FE]        IOException        [CONTEXT]        public    boolean    isDirectory()    {    if    (file    !=    null)    {    return    file.isDirectory();    }    if    (linkFlag    ==    LF_DIR)    {    return    true;    }    if    (getName().endsWith(       "/       "))    {        [BUGGY]    return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    [BUGGY]        }    return    false;    }    [CLASS]    TarArchiveEntry    [METHOD]    isDirectory    [RETURN_TYPE]    boolean    [VARIABLES]    boolean    checkSumOK    isDir    isExtended    paxGNUSparse    preserveLeadingSlashes    starSparse    byte    linkFlag    String    fileName    groupName    link    linkName    magic    name    normalizedName    user    userName    version    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    devNo    groupId    mode    nameLength    userId    long    groupId    modTime    realSize    size    time    userId    TarArchiveEntry[]    EMPTY_TAR_ARCHIVE_ENTRIES    	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	return(getName().startsWith( ".jpg ")||  getName().endsWith( ".jpg "));	  return(getName().startsWith(   "/   ")||    getName().endsWith(   "/   "));    	plausible		118	0
