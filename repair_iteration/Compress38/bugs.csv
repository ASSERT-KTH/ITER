bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return true; [FE] IOException [CONTEXT] public boolean isDirectory() { if (file != null) { return file.isDirectory(); } if (linkFlag == LF_DIR) { return true; } if (getName().endsWith("/")) { [BUGGY] return true; [BUGGY] } return false; } [CLASS] TarArchiveEntry [METHOD] isDirectory [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	replace	
2	[BUG] [BUGGY] [FE] IOException [CONTEXT] public boolean isDirectory() { if (file != null) { return file.isDirectory(); } if (linkFlag == LF_DIR) { return true; } if (getName().endsWith("/")) { [BUGGY] [BUGGY] return true; } return false; } [CLASS] TarArchiveEntry [METHOD] isDirectory [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	1.0	860	860	1	add	
3	[BUG] [BUGGY] final String prefix = oldStyle ? TarUtils.parseName(header, offset, PREFIXLEN)  : TarUtils.parseName(header, offset, PREFIXLEN, encoding); [FE] IOException [CONTEXT] final String xstarPrefix = oldStyle ? TarUtils.parseName(header, offset, PREFIXLEN_XSTAR) : TarUtils.parseName(header, offset, PREFIXLEN_XSTAR, encoding); if (xstarPrefix.length() > 0) { name = xstarPrefix + "/" + name; } break; } case FORMAT_POSIX: default: { [BUGGY] final String prefix = oldStyle    ? TarUtils.parseName(header, offset, PREFIXLEN)        : TarUtils.parseName(header, offset, PREFIXLEN, encoding); [BUGGY] ? TarUtils.parseName(header, offset, PREFIXLEN) : TarUtils.parseName(header, offset, PREFIXLEN, encoding);   if (isDirectory() && !name.endsWith("/")){ name = name + "/"; } if (prefix.length() > 0){ name = prefix + "/" + name; } [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	
4	[BUG] [BUGGY] [FE] IOException [CONTEXT] final String xstarPrefix = oldStyle ? TarUtils.parseName(header, offset, PREFIXLEN_XSTAR) : TarUtils.parseName(header, offset, PREFIXLEN_XSTAR, encoding); if (xstarPrefix.length() > 0) { name = xstarPrefix + "/" + name; } break; } case FORMAT_POSIX: default: { [BUGGY] [BUGGY] final String prefix = oldStyle    ? TarUtils.parseName(header, offset, PREFIXLEN)        : TarUtils.parseName(header, offset, PREFIXLEN, encoding); ? TarUtils.parseName(header, offset, PREFIXLEN) : TarUtils.parseName(header, offset, PREFIXLEN, encoding);   if (isDirectory() && !name.endsWith("/")){ name = name + "/"; } if (prefix.length() > 0){ name = prefix + "/" + name; } [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	
5	[BUG] [BUGGY] if (isDirectory() && !name.endsWith("/")){ [FE] IOException [CONTEXT] } break; } case FORMAT_POSIX: default: { final String prefix = oldStyle ? TarUtils.parseName(header, offset, PREFIXLEN) : TarUtils.parseName(header, offset, PREFIXLEN, encoding);   [BUGGY] if (isDirectory() && !name.endsWith("/")){ [BUGGY] name = name + "/"; } if (prefix.length() > 0){ name = prefix + "/" + name; } } } } [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	
6	[BUG] [BUGGY] [FE] IOException [CONTEXT] } break; } case FORMAT_POSIX: default: { final String prefix = oldStyle ? TarUtils.parseName(header, offset, PREFIXLEN) : TarUtils.parseName(header, offset, PREFIXLEN, encoding);   [BUGGY] [BUGGY] if (isDirectory() && !name.endsWith("/")){ name = name + "/"; } if (prefix.length() > 0){ name = prefix + "/" + name; } } } } [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	
7	[BUG] [BUGGY] if (prefix.length() > 0){ [FE] IOException [CONTEXT] case FORMAT_POSIX: default: { final String prefix = oldStyle ? TarUtils.parseName(header, offset, PREFIXLEN) : TarUtils.parseName(header, offset, PREFIXLEN, encoding);   if (isDirectory() && !name.endsWith("/")){ name = name + "/"; } [BUGGY] if (prefix.length() > 0){ [BUGGY] name = prefix + "/" + name; } } } } [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	
8	[BUG] [BUGGY] [FE] IOException [CONTEXT] case FORMAT_POSIX: default: { final String prefix = oldStyle ? TarUtils.parseName(header, offset, PREFIXLEN) : TarUtils.parseName(header, offset, PREFIXLEN, encoding);   if (isDirectory() && !name.endsWith("/")){ name = name + "/"; } [BUGGY] [BUGGY] if (prefix.length() > 0){ name = prefix + "/" + name; } } } } [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	
9	[BUG] [BUGGY] return FORMAT_POSIX; [FE] IOException [CONTEXT] private int evaluateType(final byte[] header) { if (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU, header, MAGIC_OFFSET, MAGICLEN)) { return FORMAT_OLDGNU; } if (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX, header, MAGIC_OFFSET, MAGICLEN)) { if (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR, header, XSTAR_MAGIC_OFFSET, XSTAR_MAGIC_LEN)) { return FORMAT_XSTAR; } [BUGGY] return FORMAT_POSIX; [BUGGY] } return 0; } [CLASS] TarArchiveEntry [METHOD] evaluateType [RETURN_TYPE] int  final byte[] header [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName osname prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c colon csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	
10	[BUG] [BUGGY] [FE] IOException [CONTEXT] private int evaluateType(final byte[] header) { if (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU, header, MAGIC_OFFSET, MAGICLEN)) { return FORMAT_OLDGNU; } if (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX, header, MAGIC_OFFSET, MAGICLEN)) { if (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR, header, XSTAR_MAGIC_OFFSET, XSTAR_MAGIC_LEN)) { return FORMAT_XSTAR; } [BUGGY] [BUGGY] return FORMAT_POSIX; } return 0; } [CLASS] TarArchiveEntry [METHOD] evaluateType [RETURN_TYPE] int  final byte[] header [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName osname prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c colon csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	
11	[BUG] [BUGGY] if (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX, header, MAGIC_OFFSET, MAGICLEN)) { [FE] IOException [CONTEXT] private int evaluateType(final byte[] header) { if (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU, header, MAGIC_OFFSET, MAGICLEN)) { return FORMAT_OLDGNU; } [BUGGY] if (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX, header, MAGIC_OFFSET, MAGICLEN)) { [BUGGY] if (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR, header, XSTAR_MAGIC_OFFSET, XSTAR_MAGIC_LEN)) { return FORMAT_XSTAR; } return FORMAT_POSIX; } return 0; } [CLASS] TarArchiveEntry [METHOD] evaluateType [RETURN_TYPE] int  final byte[] header [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName osname prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c colon csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.35355339059327373	1221	1221	1	replace	
12	[BUG] [BUGGY] [FE] IOException [CONTEXT] private int evaluateType(final byte[] header) { if (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU, header, MAGIC_OFFSET, MAGICLEN)) { return FORMAT_OLDGNU; } [BUGGY] [BUGGY] if (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX, header, MAGIC_OFFSET, MAGICLEN)) { if (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR, header, XSTAR_MAGIC_OFFSET, XSTAR_MAGIC_LEN)) { return FORMAT_XSTAR; } return FORMAT_POSIX; } return 0; } [CLASS] TarArchiveEntry [METHOD] evaluateType [RETURN_TYPE] int  final byte[] header [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName osname prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c colon csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.35355339059327373	1221	1221	1	add	
13	[BUG] [BUGGY] if (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR, header, XSTAR_MAGIC_OFFSET,   XSTAR_MAGIC_LEN)) { [FE] IOException [CONTEXT] private int evaluateType(final byte[] header) { if (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU, header, MAGIC_OFFSET, MAGICLEN)) { return FORMAT_OLDGNU; } if (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX, header, MAGIC_OFFSET, MAGICLEN)) { [BUGGY] if (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR, header, XSTAR_MAGIC_OFFSET,            XSTAR_MAGIC_LEN)) { [BUGGY] XSTAR_MAGIC_LEN)) { return FORMAT_XSTAR; } return FORMAT_POSIX; } return 0; } [CLASS] TarArchiveEntry [METHOD] evaluateType [RETURN_TYPE] int  final byte[] header [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName osname prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c colon csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.35355339059327373	1222	1223	1	replace	
14	[BUG] [BUGGY] [FE] IOException [CONTEXT] private int evaluateType(final byte[] header) { if (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU, header, MAGIC_OFFSET, MAGICLEN)) { return FORMAT_OLDGNU; } if (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX, header, MAGIC_OFFSET, MAGICLEN)) { [BUGGY] [BUGGY] if (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR, header, XSTAR_MAGIC_OFFSET,            XSTAR_MAGIC_LEN)) { XSTAR_MAGIC_LEN)) { return FORMAT_XSTAR; } return FORMAT_POSIX; } return 0; } [CLASS] TarArchiveEntry [METHOD] evaluateType [RETURN_TYPE] int  final byte[] header [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName osname prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c colon csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.35355339059327373	1222	1223	1	add	
15	[BUG] [BUGGY] if (file != null) { [FE] IOException [CONTEXT] public boolean isDirectory() { [BUGGY] if (file != null) { [BUGGY] return file.isDirectory(); } if (linkFlag == LF_DIR) { return true; } if (getName().endsWith("/")) { return true; } [CLASS] TarArchiveEntry [METHOD] isDirectory [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.30151134457776363	851	851	1	replace	
16	[BUG] [BUGGY] [FE] IOException [CONTEXT] public boolean isDirectory() { [BUGGY] [BUGGY] if (file != null) { return file.isDirectory(); } if (linkFlag == LF_DIR) { return true; } if (getName().endsWith("/")) { return true; } [CLASS] TarArchiveEntry [METHOD] isDirectory [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.30151134457776363	851	851	1	add	
17	[BUG] [BUGGY] if (linkFlag == LF_DIR) { [FE] IOException [CONTEXT] public boolean isDirectory() { if (file != null) { return file.isDirectory(); } [BUGGY] if (linkFlag == LF_DIR) { [BUGGY] return true; } if (getName().endsWith("/")) { return true; } return false; } [CLASS] TarArchiveEntry [METHOD] isDirectory [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.30151134457776363	855	855	1	replace	
18	[BUG] [BUGGY] [FE] IOException [CONTEXT] public boolean isDirectory() { if (file != null) { return file.isDirectory(); } [BUGGY] [BUGGY] if (linkFlag == LF_DIR) { return true; } if (getName().endsWith("/")) { return true; } return false; } [CLASS] TarArchiveEntry [METHOD] isDirectory [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.30151134457776363	855	855	1	add	
19	[BUG] [BUGGY] if (getName().endsWith("/")) { [FE] IOException [CONTEXT] public boolean isDirectory() { if (file != null) { return file.isDirectory(); } if (linkFlag == LF_DIR) { return true; } [BUGGY] if (getName().endsWith("/")) { [BUGGY] return true; } return false; } [CLASS] TarArchiveEntry [METHOD] isDirectory [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.30151134457776363	859	859	1	replace	
20	[BUG] [BUGGY] [FE] IOException [CONTEXT] public boolean isDirectory() { if (file != null) { return file.isDirectory(); } if (linkFlag == LF_DIR) { return true; } [BUGGY] [BUGGY] if (getName().endsWith("/")) { return true; } return false; } [CLASS] TarArchiveEntry [METHOD] isDirectory [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.30151134457776363	859	859	1	add	
21	[BUG] [BUGGY] private TarArchiveEntry() { [FE] IOException [CONTEXT] [BUGGY] private TarArchiveEntry() { [BUGGY] String user = System.getProperty("user.name", ""); if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } this.userName = user; this.file = null; } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	225	225	1	replace	
22	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private TarArchiveEntry() { String user = System.getProperty("user.name", ""); if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } this.userName = user; this.file = null; } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	225	225	1	add	
23	[BUG] [BUGGY] private String name = ""; [FE] IOException [CONTEXT] [BUGGY] private String name = ""; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	149	149	1	replace	
24	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private String name = ""; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	149	149	1	add	
25	[BUG] [BUGGY] private long userId = 0; [FE] IOException [CONTEXT] [BUGGY] private long userId = 0; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	158	158	1	replace	
26	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private long userId = 0; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	158	158	1	add	
27	[BUG] [BUGGY] private long groupId = 0; [FE] IOException [CONTEXT] [BUGGY] private long groupId = 0; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	161	161	1	replace	
28	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private long groupId = 0; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	161	161	1	add	
29	[BUG] [BUGGY] private long size = 0; [FE] IOException [CONTEXT] [BUGGY] private long size = 0; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	164	164	1	replace	
30	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private long size = 0; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	164	164	1	add	
31	[BUG] [BUGGY] private String linkName = ""; [FE] IOException [CONTEXT] [BUGGY] private String linkName = ""; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	176	176	1	replace	
32	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private String linkName = ""; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	176	176	1	add	
33	[BUG] [BUGGY] private String magic = MAGIC_POSIX; [FE] IOException [CONTEXT] [BUGGY] private String magic = MAGIC_POSIX; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	179	179	1	replace	
34	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private String magic = MAGIC_POSIX; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	179	179	1	add	
35	[BUG] [BUGGY] [FE] IOException [CONTEXT] private String magic = MAGIC_POSIX; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	181	181	1	replace	
36	[BUG] [BUGGY] [FE] IOException [CONTEXT] private String magic = MAGIC_POSIX; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	181	181	1	add	
37	[BUG] [BUGGY] private String groupName = ""; [FE] IOException [CONTEXT] [BUGGY] private String groupName = ""; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	187	187	1	replace	
38	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private String groupName = ""; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	187	187	1	add	
39	[BUG] [BUGGY] private int devMajor = 0; [FE] IOException [CONTEXT] [BUGGY] private int devMajor = 0; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	190	190	1	replace	
40	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private int devMajor = 0; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	190	190	1	add	
41	[BUG] [BUGGY] private int devMinor = 0; [FE] IOException [CONTEXT] [BUGGY] private int devMinor = 0; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	193	193	1	replace	
42	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private int devMinor = 0; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	193	193	1	add	
43	[BUG] [BUGGY] String user = System.getProperty("user.name", ""); [FE] IOException [CONTEXT] private TarArchiveEntry() { [BUGGY] String user = System.getProperty("user.name", ""); [BUGGY]  if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } this.userName = user; this.file = null; } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	226	226	1	replace	
44	[BUG] [BUGGY] [FE] IOException [CONTEXT] private TarArchiveEntry() { [BUGGY] [BUGGY] String user = System.getProperty("user.name", ""); if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } this.userName = user; this.file = null; } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	226	226	1	add	
45	[BUG] [BUGGY] if (user.length() > MAX_NAMELEN) { [FE] IOException [CONTEXT] private TarArchiveEntry() { String user = System.getProperty("user.name", ""); [BUGGY] if (user.length() > MAX_NAMELEN) { [BUGGY] user = user.substring(0, MAX_NAMELEN); } this.userName = user; this.file = null; } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	228	228	1	replace	
46	[BUG] [BUGGY] [FE] IOException [CONTEXT] private TarArchiveEntry() { String user = System.getProperty("user.name", ""); [BUGGY] [BUGGY] if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } this.userName = user; this.file = null; } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	228	228	1	add	
47	[BUG] [BUGGY] this.userName = user; [FE] IOException [CONTEXT] private TarArchiveEntry() { String user = System.getProperty("user.name", ""); if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } [BUGGY] this.userName = user; [BUGGY] this.file = null; } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	232	232	1	replace	
48	[BUG] [BUGGY] [FE] IOException [CONTEXT] private TarArchiveEntry() { String user = System.getProperty("user.name", ""); if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } [BUGGY] [BUGGY] this.userName = user; this.file = null; } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	232	232	1	add	
49	[BUG] [BUGGY] this.file = null; [FE] IOException [CONTEXT] private TarArchiveEntry() { String user = System.getProperty("user.name", ""); if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } this.userName = user; [BUGGY] this.file = null; [BUGGY] } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	233	233	1	replace	
50	[BUG] [BUGGY] [FE] IOException [CONTEXT] private TarArchiveEntry() { String user = System.getProperty("user.name", ""); if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } this.userName = user; [BUGGY] [BUGGY] this.file = null; } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	233	233	1	add	
51	[BUG] [BUGGY] } [FE] IOException [CONTEXT] private TarArchiveEntry() { String user = System.getProperty("user.name", ""); if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } this.userName = user; this.file = null; [BUGGY] } [BUGGY]  [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	234	234	1	replace	
52	[BUG] [BUGGY] [FE] IOException [CONTEXT] private TarArchiveEntry() { String user = System.getProperty("user.name", ""); if (user.length() > MAX_NAMELEN) { user = user.substring(0, MAX_NAMELEN); } this.userName = user; this.file = null; [BUGGY] [BUGGY] } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] TarArchiveEntry()  [VARIABLES] boolean checkSumOK isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String groupName linkName magic name user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	234	234	1	add	
53	[BUG] [BUGGY] this(); [FE] IOException [CONTEXT] public TarArchiveEntry(final byte[] headerBuf, final ZipEncoding encoding) throws IOException { [BUGGY] this(); [BUGGY] parseTarHeader(headerBuf, encoding); } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipEncoding)  final byte[] headerBuf ZipEncoding encoding [VARIABLES] byte[] headerBuf boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse ZipEncoding encoding byte linkFlag String fileName groupName linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode nameLength long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	367	367	1	replace	
54	[BUG] [BUGGY] [FE] IOException [CONTEXT] public TarArchiveEntry(final byte[] headerBuf, final ZipEncoding encoding) throws IOException { [BUGGY] [BUGGY] this(); parseTarHeader(headerBuf, encoding); } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipEncoding)  final byte[] headerBuf ZipEncoding encoding [VARIABLES] byte[] headerBuf boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse ZipEncoding encoding byte linkFlag String fileName groupName linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode nameLength long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	367	367	1	add	
55	[BUG] [BUGGY] parseTarHeader(headerBuf, encoding); [FE] IOException [CONTEXT] public TarArchiveEntry(final byte[] headerBuf, final ZipEncoding encoding) throws IOException { this(); [BUGGY] parseTarHeader(headerBuf, encoding); [BUGGY] } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipEncoding)  final byte[] headerBuf ZipEncoding encoding [VARIABLES] byte[] headerBuf boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse ZipEncoding encoding byte linkFlag String fileName groupName linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode nameLength long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	368	368	1	replace	
56	[BUG] [BUGGY] [FE] IOException [CONTEXT] public TarArchiveEntry(final byte[] headerBuf, final ZipEncoding encoding) throws IOException { this(); [BUGGY] [BUGGY] parseTarHeader(headerBuf, encoding); } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipEncoding)  final byte[] headerBuf ZipEncoding encoding [VARIABLES] byte[] headerBuf boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse ZipEncoding encoding byte linkFlag String fileName groupName linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode nameLength long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	368	368	1	add	
57	[BUG] [BUGGY] } [FE] IOException [CONTEXT] public TarArchiveEntry(final byte[] headerBuf, final ZipEncoding encoding) throws IOException { this(); parseTarHeader(headerBuf, encoding); [BUGGY] } [BUGGY]  [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipEncoding)  final byte[] headerBuf ZipEncoding encoding [VARIABLES] byte[] headerBuf boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse ZipEncoding encoding byte linkFlag String fileName groupName linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode nameLength long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	369	369	1	replace	
58	[BUG] [BUGGY] [FE] IOException [CONTEXT] public TarArchiveEntry(final byte[] headerBuf, final ZipEncoding encoding) throws IOException { this(); parseTarHeader(headerBuf, encoding); [BUGGY] [BUGGY] } [CLASS] TarArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipEncoding)  final byte[] headerBuf ZipEncoding encoding [VARIABLES] byte[] headerBuf boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse ZipEncoding encoding byte linkFlag String fileName groupName linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode nameLength long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	369	369	1	add	
59	[BUG] [BUGGY] private static final TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES = new TarArchiveEntry[0]; [FE] IOException [CONTEXT] [BUGGY] private static final TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES = new TarArchiveEntry[0]; [BUGGY]  [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	146	146	1	replace	
60	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] private static final TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES = new TarArchiveEntry[0]; [CLASS] TarArchiveEntry  [VARIABLES] 	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	146	146	1	add	
61	[BUG] [BUGGY] return name; [FE] IOException [CONTEXT] public String getName() { [BUGGY] return name; [BUGGY] } [CLASS] TarArchiveEntry [METHOD] getName [RETURN_TYPE] String  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode nameLength long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	426	426	1	replace	
62	[BUG] [BUGGY] [FE] IOException [CONTEXT] public String getName() { [BUGGY] [BUGGY] return name; } [CLASS] TarArchiveEntry [METHOD] getName [RETURN_TYPE] String  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor mode nameLength long groupId modTime realSize size userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	426	426	1	add	
63	[BUG] [BUGGY] return size; [FE] IOException [CONTEXT] public long getSize() { [BUGGY] return size; [BUGGY] } [CLASS] TarArchiveEntry [METHOD] getSize [RETURN_TYPE] long  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	676	676	1	replace	
64	[BUG] [BUGGY] [FE] IOException [CONTEXT] public long getSize() { [BUGGY] [BUGGY] return size; } [CLASS] TarArchiveEntry [METHOD] getSize [RETURN_TYPE] long  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	676	676	1	add	
65	[BUG] [BUGGY] return linkFlag == LF_GNUTYPE_LONGLINK; [FE] IOException [CONTEXT] public boolean isGNULongLinkEntry() { [BUGGY] return linkFlag == LF_GNUTYPE_LONGLINK; [BUGGY] } [CLASS] TarArchiveEntry [METHOD] isGNULongLinkEntry [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	808	808	1	replace	
66	[BUG] [BUGGY] [FE] IOException [CONTEXT] public boolean isGNULongLinkEntry() { [BUGGY] [BUGGY] return linkFlag == LF_GNUTYPE_LONGLINK; } [CLASS] TarArchiveEntry [METHOD] isGNULongLinkEntry [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	808	808	1	add	
67	[BUG] [BUGGY] return linkFlag == LF_GNUTYPE_LONGNAME; [FE] IOException [CONTEXT] public boolean isGNULongNameEntry() { [BUGGY] return linkFlag == LF_GNUTYPE_LONGNAME; [BUGGY] } [CLASS] TarArchiveEntry [METHOD] isGNULongNameEntry [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	817	817	1	replace	
68	[BUG] [BUGGY] [FE] IOException [CONTEXT] public boolean isGNULongNameEntry() { [BUGGY] [BUGGY] return linkFlag == LF_GNUTYPE_LONGNAME; } [CLASS] TarArchiveEntry [METHOD] isGNULongNameEntry [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	817	817	1	add	
69	[BUG] [BUGGY] return linkFlag == LF_PAX_EXTENDED_HEADER_LC || linkFlag == LF_PAX_EXTENDED_HEADER_UC; [FE] IOException [CONTEXT] public boolean isPaxHeader(){ [BUGGY] return linkFlag == LF_PAX_EXTENDED_HEADER_LC   || linkFlag == LF_PAX_EXTENDED_HEADER_UC; [BUGGY] || linkFlag == LF_PAX_EXTENDED_HEADER_UC; } [CLASS] TarArchiveEntry [METHOD] isPaxHeader [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	829	830	1	replace	
70	[BUG] [BUGGY] [FE] IOException [CONTEXT] public boolean isPaxHeader(){ [BUGGY] [BUGGY] return linkFlag == LF_PAX_EXTENDED_HEADER_LC   || linkFlag == LF_PAX_EXTENDED_HEADER_UC; || linkFlag == LF_PAX_EXTENDED_HEADER_UC; } [CLASS] TarArchiveEntry [METHOD] isPaxHeader [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	829	830	1	add	
71	[BUG] [BUGGY] return linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER; [FE] IOException [CONTEXT] public boolean isGlobalPaxHeader(){ [BUGGY] return linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER; [BUGGY] } [CLASS] TarArchiveEntry [METHOD] isGlobalPaxHeader [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	841	841	1	replace	
72	[BUG] [BUGGY] [FE] IOException [CONTEXT] public boolean isGlobalPaxHeader(){ [BUGGY] [BUGGY] return linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER; } [CLASS] TarArchiveEntry [METHOD] isGlobalPaxHeader [RETURN_TYPE] boolean  [VARIABLES] boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starSparse byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND devMajor devMinor devNo groupId mode nameLength userId long groupId modTime realSize size time userId TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	841	841	1	add	
73	[BUG] [BUGGY] parseTarHeader(header, encoding, false); [FE] IOException [CONTEXT] public void parseTarHeader(final byte[] header, final ZipEncoding encoding) throws IOException { [BUGGY] parseTarHeader(header, encoding, false); [BUGGY] } [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding [VARIABLES] byte[] header boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1085	1085	1	replace	
74	[BUG] [BUGGY] [FE] IOException [CONTEXT] public void parseTarHeader(final byte[] header, final ZipEncoding encoding) throws IOException { [BUGGY] [BUGGY] parseTarHeader(header, encoding, false); } [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding [VARIABLES] byte[] header boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1085	1085	1	add	
75	[BUG] [BUGGY] } [FE] IOException [CONTEXT] public void parseTarHeader(final byte[] header, final ZipEncoding encoding) throws IOException { parseTarHeader(header, encoding, false); [BUGGY] } [BUGGY]  [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding [VARIABLES] byte[] header boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1086	1086	1	replace	
76	[BUG] [BUGGY] [FE] IOException [CONTEXT] public void parseTarHeader(final byte[] header, final ZipEncoding encoding) throws IOException { parseTarHeader(header, encoding, false); [BUGGY] [BUGGY] } [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding [VARIABLES] byte[] header boolean checkSumOK isDir isExtended paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName user userName version File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1086	1086	1	add	
77	[BUG] [BUGGY] int offset = 0; [FE] IOException [CONTEXT] throws IOException { [BUGGY] int offset = 0; [BUGGY]  name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1091	1091	1	replace	
78	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { [BUGGY] [BUGGY] int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1091	1091	1	add	
79	[BUG] [BUGGY] name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); [FE] IOException [CONTEXT] throws IOException { int offset = 0; [BUGGY] name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN)   : TarUtils.parseName(header, offset, NAMELEN, encoding); [BUGGY] : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1093	1094	1	replace	
80	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { int offset = 0; [BUGGY] [BUGGY] name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN)   : TarUtils.parseName(header, offset, NAMELEN, encoding); : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1093	1094	1	add	
81	[BUG] [BUGGY] offset += NAMELEN; [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); [BUGGY] offset += NAMELEN; [BUGGY] mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1095	1095	1	replace	
82	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); [BUGGY] [BUGGY] offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1095	1095	1	add	
83	[BUG] [BUGGY] mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; [BUGGY] mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); [BUGGY] offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1096	1096	1	replace	
84	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; [BUGGY] [BUGGY] mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1096	1096	1	add	
85	[BUG] [BUGGY] offset += MODELEN; [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); [BUGGY] offset += MODELEN; [BUGGY] userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1097	1097	1	replace	
86	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); [BUGGY] [BUGGY] offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1097	1097	1	add	
87	[BUG] [BUGGY] userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; [BUGGY] userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); [BUGGY] offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1098	1098	1	replace	
88	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; [BUGGY] [BUGGY] userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1098	1098	1	add	
89	[BUG] [BUGGY] offset += UIDLEN; [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); [BUGGY] offset += UIDLEN; [BUGGY] groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1099	1099	1	replace	
90	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); [BUGGY] [BUGGY] offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1099	1099	1	add	
91	[BUG] [BUGGY] groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; [BUGGY] groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); [BUGGY] offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1100	1100	1	replace	
92	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; [BUGGY] [BUGGY] groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1100	1100	1	add	
93	[BUG] [BUGGY] offset += GIDLEN; [FE] IOException [CONTEXT] int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); [BUGGY] offset += GIDLEN; [BUGGY] size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1101	1101	1	replace	
94	[BUG] [BUGGY] [FE] IOException [CONTEXT] int offset = 0; name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); [BUGGY] [BUGGY] offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1101	1101	1	add	
95	[BUG] [BUGGY] size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); [FE] IOException [CONTEXT] name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; [BUGGY] size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); [BUGGY] offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; magic = TarUtils.parseName(header, offset, MAGICLEN); [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1102	1102	1	replace	
96	[BUG] [BUGGY] [FE] IOException [CONTEXT] name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; [BUGGY] [BUGGY] size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; magic = TarUtils.parseName(header, offset, MAGICLEN); [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1102	1102	1	add	
97	[BUG] [BUGGY] offset += SIZELEN; [FE] IOException [CONTEXT] name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); [BUGGY] offset += SIZELEN; [BUGGY] modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; magic = TarUtils.parseName(header, offset, MAGICLEN); offset += MAGICLEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1103	1103	1	replace	
98	[BUG] [BUGGY] [FE] IOException [CONTEXT] name = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); [BUGGY] [BUGGY] offset += SIZELEN; modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; magic = TarUtils.parseName(header, offset, MAGICLEN); offset += MAGICLEN; [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1103	1103	1	add	
99	[BUG] [BUGGY] modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); [FE] IOException [CONTEXT] : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; [BUGGY] modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); [BUGGY] offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; magic = TarUtils.parseName(header, offset, MAGICLEN); offset += MAGICLEN; version = TarUtils.parseName(header, offset, VERSIONLEN); [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1104	1104	1	replace	
100	[BUG] [BUGGY] [FE] IOException [CONTEXT] : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; mode = (int) TarUtils.parseOctalOrBinary(header, offset, MODELEN); offset += MODELEN; userId = (int) TarUtils.parseOctalOrBinary(header, offset, UIDLEN); offset += UIDLEN; groupId = (int) TarUtils.parseOctalOrBinary(header, offset, GIDLEN); offset += GIDLEN; size = TarUtils.parseOctalOrBinary(header, offset, SIZELEN); offset += SIZELEN; [BUGGY] [BUGGY] modTime = TarUtils.parseOctalOrBinary(header, offset, MODTIMELEN); offset += MODTIMELEN; checkSumOK = TarUtils.verifyCheckSum(header); offset += CHKSUMLEN; linkFlag = header[offset++]; linkName = oldStyle ? TarUtils.parseName(header, offset, NAMELEN) : TarUtils.parseName(header, offset, NAMELEN, encoding); offset += NAMELEN; magic = TarUtils.parseName(header, offset, MAGICLEN); offset += MAGICLEN; version = TarUtils.parseName(header, offset, VERSIONLEN); [CLASS] TarArchiveEntry [METHOD] parseTarHeader [RETURN_TYPE] void  final byte[] header ZipEncoding encoding final boolean oldStyle [VARIABLES] byte[] header boolean checkSumOK isDir isExtended oldStyle paxGNUSparse preserveLeadingSlashes starMode starSparse ZipEncoding encoding byte linkFlag String fileName groupName link linkName magic name normalizedName prefix user userName version xstarPrefix File file int DEFAULT_DIR_MODE DEFAULT_FILE_MODE MAX_NAMELEN MILLIS_PER_SECOND c csOffset devMajor devMinor devNo groupId i length mode nameLength offset type userId long chk groupId modTime realSize size time userId value TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.2886751345948129	1104	1104	1	add	
