bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
2	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
3	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  Final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  Final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    Final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  ';'  expected	10	None	add
4	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
5	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	11	1	replace
6	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	11	1	replace
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	7	replace
8	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	7	replace
9	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	11	None	replace
10	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	11	1	replace
11	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	11	1	replace
12	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	7	replace
13	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	7	replace
14	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	11	None	replace
15	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XSL  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XSL	16	None	replace
16	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XS  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XS	16	None	replace
17	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XTE  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XTE	16	None	replace
18	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XX  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XX	16	None	replace
19	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	5	None	replace
20	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	5	1	replace
21	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	5	1	replace
22	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDirectory  [FE]                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDirectory	5	None	replace
23	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
24	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
25	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
26	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
27	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
28	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	4	None	replace
29	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
30	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	4	1	replace
31	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	4	1	replace
32	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	4	1	replace
33	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	4	1	replace
34	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)	4	None	replace
35	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	3	None	add
36	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	3	None	add
37	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	3	None	add
38	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	3	None	add
39	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	14	None	replace
40	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	14	None	replace
41	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	14	None	replace
42	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	14	None	replace
43	[BUG]  [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	6	None	replace
44	[BUG]  [BUGGY]  final  String  prefix  =  nameStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  nameStyle  [FE]                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  nameStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  nameStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  nameStyle	6	None	replace
45	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(oldStyle,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(oldStyle,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(oldStyle,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	7	None	replace
46	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                  IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
47	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]                    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	7	None	replace
48	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [CE]  incompatible  types  [FE]                      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	7	None	replace
49	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	7	None	replace
50	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	2	None	replace
51	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	2	None	replace
52	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	2	None	replace
53	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
54	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
55	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_X  [FE]                  IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_X):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_X	8	None	replace
56	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XF  [FE]                    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_X):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XF	8	None	replace
57	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
58	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
59	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                  IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	15	None	replace
60	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
61	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	13	1	replace
62	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	13	1	replace
63	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	13	1	replace
64	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [FE]  IOException  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	13	1	replace
65	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
66	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_X  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_X	13	None	replace
67	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	1	None	add
68	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	1	None	add
69	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	1	None	add
70	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	1	None	add
71	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	1	None	add
72	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	1	None	add
73	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	1	None	add
74	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]                      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
76	[BUG]  [BUGGY]  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int)  [FE]                        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	      	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int)	9	None	replace
77	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
80	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
82	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
83	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
84	[BUG]  [BUGGY]  final  String  name  =  headerStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  headerStyle  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  name  =  headerStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  headerStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  headerStyle	6	None	replace
85	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
86	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
87	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
88	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
89	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
90	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
91	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
92	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	2	1	replace
93	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	2	1	replace
94	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	2	None	replace
95	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	14	None	replace
96	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROPERTY  [FE]                  IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_X):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	8	None	replace
97	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
98	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
99	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [CE]  illegal  start  of  expression  [FE]                        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
100	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [CE]  illegal  start  of  expression  [FE]                          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
101	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [CE]  illegal  start  of  expression  [FE]                            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
102	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [CE]  illegal  start  of  expression  [FE]                              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
103	[BUG]  [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	      	non-compiled	[CE]  cannot  find  symbol  prefix	9	None	replace
104	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	4	1	replace
105	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	4	1	replace
106	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	7	replace
107	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	7	replace
108	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	7	None	replace
109	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	7	None	replace
110	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	13	None	replace
111	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XML  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XML	16	None	replace
112	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	3	None	add
113	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	3	None	add
114	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	3	None	add
115	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	1	None	add
116	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	1	None	add
117	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
118	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XML  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XML	11	None	replace
119	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XMODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XMODE  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XMODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XMODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XMODE	11	None	replace
120	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XX  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XX	13	None	replace
121	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XML  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XML	13	None	replace
122	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPRESSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XPRESSION  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPRESSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPRESSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XPRESSION	13	None	replace
123	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	14	None	replace
124	[BUG]  [BUGGY]  final  String  prefix  =  currentStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  currentStyle  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  currentStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  currentStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  currentStyle	6	None	replace
125	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XL  [FE]                  IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_X):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XL	8	None	replace
126	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
127	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
128	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
129	[BUG]  [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
130	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
131	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
132	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	4	None	replace
133	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	4	None	replace
134	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]        IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	16	None	replace
135	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XML  [FE]          IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XML	16	None	replace
136	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
137	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	15	None	replace
138	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	2	None	replace
139	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROFIXLEN_XSTAR  [FE]      IOException    [CONTEXT]    final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +     "/   "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROFIXLEN_XSTAR	2	None	replace
