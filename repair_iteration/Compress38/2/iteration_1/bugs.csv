bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	compilable	  [FE]  IOException  	3	1	replace
2	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]    IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	compilable	  [FE]  IOException  	3	1	replace
3	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	compilable	  [FE]  IOException  	3	1	replace
4	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]      IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	compilable	  [FE]  IOException  	3	1	replace
5	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]        IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	non-compiled	[CE]  cannot  find  symbol  isDir	3	None	replace
6	[BUG]  [BUGGY]  final  String  prefix  =  headerStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  headerStyle  [FE]          IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  headerStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  headerStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	non-compiled	[CE]  cannot  find  symbol  headerStyle	3	None	replace
7	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]            IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
8	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_X  [FE]              IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_X	3	None	replace
9	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  prefix  [FE]                IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]    [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	  	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	non-compiled	[CE]  cannot  find  symbol  prefix	3	None	replace
10	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	compilable	  [FE]  IOException  	3	1	replace
11	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]    IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	compilable	  [FE]  IOException  	3	1	replace
12	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	compilable	  [FE]  IOException  	3	1	replace
13	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]      IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	compilable	  [FE]  IOException  	3	1	replace
14	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]        IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	non-compiled	[CE]  incompatible  types	3	None	replace
15	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]          IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	non-compiled	[CE]  incompatible  types	3	None	replace
16	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XML  [FE]    IOException  [CONTEXT]  final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +   "/ "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  if  (prefix.length()  >  0){  name  =  prefix  +   "/ "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)    :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XML	3	None	replace
