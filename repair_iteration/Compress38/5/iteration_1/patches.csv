bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_LEN;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_LEN  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_LEN;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_LEN;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_LEN	6	None	replace
2	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_EXPRESSION;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_EXPRESSION  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_TAR_ARCHIVE_EXPRESSION;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_EXPRESSION;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_EXPRESSION	6	None	replace
3	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_LEN;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_LEN  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_TAR_ARCHIVE_LEN;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_LEN;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_LEN	6	None	replace
4	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  MILLIS_PER_SECOND;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  MILLIS_PER_SECOND;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION;    	compilable	  [FE]  IOException  	6	1	replace
5	[BUG]  [BUGGY]  return  MILLIS_PER_SECOND;  [FE]  IOException  [FE]                    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  MILLIS_PER_SECOND;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  MILLIS_PER_SECOND;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION;    	compilable	  [FE]  IOException  	6	1	replace
6	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  1;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION  [FE]                      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  1;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION	6	None	replace
7	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  +  1;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  +  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_ENTRIES  +  1;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES	13	None	replace
8	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  -  1;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  -  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_ENTRIES  -  1;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES	13	None	replace
9	[BUG]  [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES;  [CE]  cannot  find  symbol  result  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  DEFAULT_TAR_ARCHIVE_ENTRIES;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  result	13	None	replace
10	[BUG]  [BUGGY]  result  =  EMPTY_TAR_ARCHIVE_ENTRIES;  [CE]  cannot  find  symbol  result  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  result  =  EMPTY_TAR_ARCHIVE_ENTRIES;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  EMPTY_TAR_ARCHIVE_ENTRIES;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  result	13	None	replace
11	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES.length;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_ENTRIES.length;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES	13	None	replace
12	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [CE]  not  a  statement  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length;	  	non-compiled	[CE]  not  a  statement	4	None	add
13	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  result.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [CE]  cannot  find  symbol  result  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  result.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    result.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;	  	non-compiled	[CE]  cannot  find  symbol  result	4	None	add
14	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;	  	non-compiled	[CE]  ';'  expected	4	None	add
15	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();	  	non-compiled	[CE]  ';'  expected	4	None	add
16	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  Arrays.fill(body,  EMPTY_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  body  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  Arrays.fill(body,  EMPTY_TAR_ARCHIVE_ENTRIES);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    Arrays.fill(body,  EMPTY_TAR_ARCHIVE_ENTRIES);	  	non-compiled	[CE]  cannot  find  symbol  body	4	None	add
17	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int  EMPTY_TAR_ARCHIVE_ENTRIES.length;	  	non-compiled	[CE]  ';'  expected	4	None	add
18	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  Arrays.fill(header,  EMPTY_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  Arrays  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  Arrays.fill(header,  EMPTY_TAR_ARCHIVE_ENTRIES);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    Arrays.fill(header,  EMPTY_TAR_ARCHIVE_ENTRIES);	  	non-compiled	[CE]  cannot  find  symbol  Arrays	4	None	add
19	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length  -  1;  [CE]  ';'  expected  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length  -  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length  -  1;	  	non-compiled	[CE]  ';'  expected	4	None	add
20	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIE;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIE  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIE;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_ENTRIE;	  return    EMPTY_TAR_ARCHIVE_ENTRY;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIE	7	None	replace
21	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFAULT_DIR_MODE;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
22	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	8	None	add
23	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	8	None	add
24	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	8	None	add
25	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	8	None	add
26	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFA  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFA  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	8	None	add
27	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAUL	  	non-compiled	[CE]  ';'  expected	8	None	add
28	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [CE]  unreachable  statement  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  unreachable  statement	8	None	add
29	[BUG]  [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
30	[BUG]  [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
31	[BUG]  [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
32	[BUG]  [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
33	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(!checkSumOK)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	        if(!checkSumOK)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IOException  	11	1	add
34	[BUG]  [BUGGY]      if(!checkSumOK)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IOException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(!checkSumOK)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(!checkSumOK)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IOException  	11	1	add
35	[BUG]  [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(OLDGNU,  header,  OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(OLDGNU,  header,  OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(OLDGNU,  header,  OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
36	[BUG]  [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
37	[BUG]  [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
38	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(!checkSumOK)  {  return  1;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(!checkSumOK)  {  return  1;  }	  return    1;    	compilable	  [FE]  IOException  	16	1	replace
39	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  1;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(!checkSumOK)  {  return  1;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  1;  }	  return    1;    	compilable	  [FE]  IOException  	16	1	replace
40	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  1;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null)  {  return  1;  }	  return    1;    	compilable	  [FE]  IOException  	16	1	replace
41	[BUG]  [BUGGY]  if(header  ==  null)  {  return  1;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  1;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  return  1;  }	  return    1;    	compilable	  [FE]  IOException  	16	1	replace
42	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  return  1;  }  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header.length()  ==  0)  {  return  1;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length()  ==  0)  {  return  1;  }	  return    1;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
43	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header!=  null)  {  return  1;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=  null)  {  return  1;  }	  return    1;    	compilable	  [FE]  IOException  	16	1	replace
44	[BUG]  [BUGGY]  if(header!=  null)  {  return  1;  }  [FE]  IOException  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header!=  null)  {  return  1;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  return  1;  }	  return    1;    	compilable	  [FE]  IOException  	16	1	replace
45	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_FILE_MODE;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  DEFAULT_FILE_MODE;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
46	[BUG]  [BUGGY]  return  DEFAULT_FILE_MODE;  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_FILE_MODE;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_FILE_MODE;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
47	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
48	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
49	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
50	[BUG]  [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
51	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  DEFAULT_DIR_MODE  +  1;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
52	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  [FE]  IOException  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_DIR_MODE  +  1;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
53	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  DEFAULT_DIR_MODE  -  1;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
54	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  [FE]  IOException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_DIR_MODE  -  1;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
55	[BUG]  [BUGGY]  return  FORMAT_LEN;  [CE]  cannot  find  symbol  FORMAT_LEN  [FE]                    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  FORMAT_LEN;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  FORMAT_LEN;	  return    header;    	non-compiled	[CE]  cannot  find  symbol  FORMAT_LEN	10	None	replace
56	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  XSTAR_MAGIC_LEN;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  XSTAR_MAGIC_LEN;	  return    header;    	compilable	  [FE]  IOException  	10	1	replace
57	[BUG]  [BUGGY]  return  XSTAR_MAGIC_LEN;  [FE]  IOException  [FE]                      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  XSTAR_MAGIC_LEN;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  XSTAR_MAGIC_LEN;	  return    header;    	compilable	  [FE]  IOException  	10	1	replace
58	[BUG]  [BUGGY]  return  header.indexOf(EMPTY_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(EMPTY_TAR_ARCHIVE_ENTRIES);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(EMPTY_TAR_ARCHIVE_ENTRIES);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
59	[BUG]  [BUGGY]  return  header.indexOf(empTY_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  empTY_TAR_ARCHIVE_ENTRIES  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(empTY_TAR_ARCHIVE_ENTRIES);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(empTY_TAR_ARCHIVE_ENTRIES);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  empTY_TAR_ARCHIVE_ENTRIES	14	None	replace
60	[BUG]  [BUGGY]  return  header.indexOf(eMPTY_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  eMPTY_TAR_ARCHIVE_ENTRIES  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(eMPTY_TAR_ARCHIVE_ENTRIES);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(eMPTY_TAR_ARCHIVE_ENTRIES);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  eMPTY_TAR_ARCHIVE_ENTRIES	14	None	replace
61	[BUG]  [BUGGY]  return  header.indexOf(EMBEDDED_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  EMBEDDED_TAR_ARCHIVE_ENTRIES  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(EMBEDDED_TAR_ARCHIVE_ENTRIES);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(EMBEDDED_TAR_ARCHIVE_ENTRIES);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  EMBEDDED_TAR_ARCHIVE_ENTRIES	14	None	replace
62	[BUG]  [BUGGY]  return  header.indexOf(emTY_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  emTY_TAR_ARCHIVE_ENTRIES  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(emTY_TAR_ARCHIVE_ENTRIES);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(emTY_TAR_ARCHIVE_ENTRIES);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  emTY_TAR_ARCHIVE_ENTRIES	14	None	replace
63	[BUG]  [BUGGY]  return  header.indexOf(emTYPE_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  emTYPE_TAR_ARCHIVE_ENTRIES  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(emTYPE_TAR_ARCHIVE_ENTRIES);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(emTYPE_TAR_ARCHIVE_ENTRIES);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  emTYPE_TAR_ARCHIVE_ENTRIES	14	None	replace
64	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
65	[BUG]  [BUGGY]  return  header.length;  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
66	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
67	[BUG]  [BUGGY]  if(header  ==  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
68	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
69	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1;  [FE]  IOException  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
70	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
71	[BUG]  [BUGGY]  if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [FE]  IOException  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
72	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
73	[BUG]  [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [FE]  IOException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
74	[BUG]  [BUGGY]  result  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [CE]  cannot  find  symbol  result  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  result  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	non-compiled	[CE]  cannot  find  symbol  result	5	None	replace
75	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
76	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  1;  [FE]  IOException  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
77	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
78	[BUG]  [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
79	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
80	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
81	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  MILLIS_PER_SECOND;  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  MILLIS_PER_SECOND;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  MILLIS_PER_SECOND;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
82	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
83	[BUG]  [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
84	[BUG]  [BUGGY]  return  1;  if(!checkSumOK)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(!checkSumOK)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(!checkSumOK)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
85	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
86	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG	  	non-compiled	[CE]  ';'  expected	2	None	add
87	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	  	non-compiled	[CE]  ';'  expected	2	None	add
88	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU	  	non-compiled	[CE]  ';'  expected	2	None	add
89	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FOR  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FOR  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FOR	  	non-compiled	[CE]  ';'  expected	2	None	add
90	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD	  	non-compiled	[CE]  ';'  expected	2	None	add
91	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
92	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
93	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(!checkSumOK)  {  return  0;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(!checkSumOK)  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
94	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  0;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(!checkSumOK)  {  return  0;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
95	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	throw  new  IllegalArgumentException( " ");	  return    0;    	compilable	  [FE]  IOException  	3	7	replace
96	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	throw  new  IllegalArgumentException( " ");	  return    0;    	compilable	  [FE]  IOException  	3	7	replace
97	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  0;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null)  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
98	[BUG]  [BUGGY]  if(header  ==  null)  {  return  0;  }  [FE]  IOException  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  0;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
99	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header!=  null)  {  return  0;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=  null)  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
100	[BUG]  [BUGGY]  if(header!=  null)  {  return  0;  }  [FE]  IOException  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header!=  null)  {  return  0;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
101	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	throw  new  IllegalStateException( " ");	  return    0;    	compilable	  [FE]  IllegalStateException  	3	7	replace
102	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  IllegalStateException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	throw  new  IllegalStateException( " ");	  return    0;    	compilable	  [FE]  IllegalStateException  	3	7	replace
103	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  +  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
104	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  -  1;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	1	None	replace
105	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
106	[BUG]  [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
107	[BUG]  [BUGGY]  return  0;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
108	[BUG]  [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
109	[BUG]  [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
110	[BUG]  [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
111	[BUG]  [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
112	[BUG]  [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XEND_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XEND_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XEND_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
113	[BUG]  [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
114	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
115	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	8	None	add
116	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	8	None	add
117	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_D  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_D  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_D	  	non-compiled	[CE]  ';'  expected	8	None	add
118	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAUL	  	non-compiled	[CE]  ';'  expected	8	None	add
119	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_D  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_D  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_D	  	non-compiled	[CE]  ';'  expected	8	None	add
120	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAUL	  	non-compiled	[CE]  ';'  expected	8	None	add
121	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	8	None	add
122	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	13	None	replace
123	[BUG]  [BUGGY]  return  DEFAULT_OLDGNU;  [CE]  cannot  find  symbol  DEFAULT_OLDGNU  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_OLDGNU;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_OLDGNU;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_OLDGNU	13	None	replace
124	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  DEFAULT_DIR_MODE  +  header.length;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
125	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_DIR_MODE  +  header.length;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
126	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  FORMAT_OLDGNU;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  FORMAT_OLDGNU;	  return    header;    	compilable	  [FE]  IOException  	10	1	replace
127	[BUG]  [BUGGY]  return  FORMAT_OLDGNU;  [FE]  IOException  [FE]                    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  FORMAT_OLDGNU;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  FORMAT_OLDGNU;	  return    header;    	compilable	  [FE]  IOException  	10	1	replace
128	[BUG]  [BUGGY]  return  FORMAT_LAST;  [CE]  cannot  find  symbol  FORMAT_LAST  [FE]                      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  FORMAT_LAST;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  FORMAT_LAST;	  return    header;    	non-compiled	[CE]  cannot  find  symbol  FORMAT_LAST	10	None	replace
129	[BUG]  [BUGGY]  return  EMPTY_TAR_OLDGNU;  [CE]  cannot  find  symbol  EMPTY_TAR_OLDGNU  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_OLDGNU;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_OLDGNU;	  return    EMPTY_TAR_ARCHIVE_ENTRY;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_OLDGNU	7	None	replace
130	[BUG]  [BUGGY]  return  header.indexOf(EOFTY_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  EOFTY_TAR_ARCHIVE_ENTRIES  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(EOFTY_TAR_ARCHIVE_ENTRIES);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(EOFTY_TAR_ARCHIVE_ENTRIES);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  EOFTY_TAR_ARCHIVE_ENTRIES	14	None	replace
131	[BUG]  [BUGGY]  return  header.indexOf(ERROR);  [CE]  cannot  find  symbol  ERROR  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(ERROR);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(ERROR);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  ERROR	14	None	replace
132	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(emplotSumOK);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  header.indexOf(emplotSumOK);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	compilable	  [FE]  IOException  	14	1	replace
133	[BUG]  [BUGGY]  return  header.indexOf(emplotSumOK);  [FE]  IOException  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(emplotSumOK);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(emplotSumOK);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	compilable	  [FE]  IOException  	14	1	replace
134	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
135	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
136	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
137	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  header.length;  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  +  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	5	1	replace
138	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
139	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
140	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
141	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCHIVE_ENTRIES.length);  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCHIVE_ENTRIES.length);  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCHIVE_ENTRIES.length);  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
142	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
143	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
144	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header))  {  return  FORMAT_OLDGNU;  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
145	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
146	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
147	[BUG]  [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
148	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
149	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
150	[BUG]  [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
151	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  1;  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  1;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
152	[BUG]  [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
153	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
154	[BUG]  [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
155	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  +  header.length;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  +  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_ENTRIES  +  header.length;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES	13	None	replace
156	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  +  header;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  +  header;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_ENTRIES  +  header;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES	13	None	replace
157	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])	2	None	add
158	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])	2	None	add
159	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int)  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int)	2	None	add
160	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int)  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int)	2	None	add
161	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  MAX_OLDGNU  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  cannot  find  symbol  MAX_OLDGNU	2	None	add
162	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  XSTAR_OLDGNU  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  cannot  find  symbol  XSTAR_OLDGNU	2	None	add
163	[BUG]  [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
164	[BUG]  [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  MAGIC_LEN  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  0;  if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    0;    if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  cannot  find  symbol  MAGIC_LEN	2	None	add
165	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[])  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[])	4	None	add
166	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[])  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[])	4	None	add
167	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LE  [CE]  ')'  expected  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LE  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LE	  	non-compiled	[CE]  ')'  expected	4	None	add
168	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN  [CE]  ')'  expected  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN	  	non-compiled	[CE]  ')'  expected	4	None	add
169	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAG  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAG  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAG	  	non-compiled	[CE]  ')'  expected	4	None	add
170	[BUG]  [BUGGY]      if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FOR  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FOR  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FOR	  	non-compiled	[CE]  ';'  expected	11	None	add
171	[BUG]  [BUGGY]      if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
172	[BUG]  [BUGGY]      if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT	  	non-compiled	[CE]  ';'  expected	11	None	add
173	[BUG]  [BUGGY]      if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	  	non-compiled	[CE]  ';'  expected	11	None	add
174	[BUG]  [BUGGY]      if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)	  	non-compiled	[CE]  ')'  expected	11	None	add
175	[BUG]  [BUGGY]      if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]      if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	        if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
176	[BUG]  [BUGGY]  return  header.indexOf(embeddedImage);  [CE]  cannot  find  symbol  embeddedImage  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(embeddedImage);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(embeddedImage);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  embeddedImage	14	None	replace
177	[BUG]  [BUGGY]  return  header.indexOf(embeddedName);  [CE]  cannot  find  symbol  embeddedName  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(embeddedName);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(embeddedName);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  embeddedName	14	None	replace
178	[BUG]  [BUGGY]  return  header.indexOf(embedded);  [CE]  cannot  find  symbol  embedded  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(embedded);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(embedded);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  embedded	14	None	replace
179	[BUG]  [BUGGY]  return  header.indexOf(embeddedHeader);  [CE]  cannot  find  symbol  embeddedHeader  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  header.indexOf(embeddedHeader);  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(embeddedHeader);	  return    EMPTY_TAR_ARCHIVE_ENTRIES.indexOf(header);    	non-compiled	[CE]  cannot  find  symbol  embeddedHeader	14	None	replace
180	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
181	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;	  return    DEFAULT_DIR_MODE;    	compilable	  [FE]  IOException  	9	1	replace
182	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  header.length;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  header.length;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION	6	None	replace
183	[BUG]  [BUGGY]  return  1;  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  MAX_OLDGNU  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  cannot  find  symbol  MAX_OLDGNU	15	None	add
184	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
185	[BUG]  [BUGGY]  return  1;  if(!checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(!checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(!checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
186	[BUG]  [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
187	[BUG]  [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
188	[BUG]  [BUGGY]  return  1;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])	15	None	add
189	[BUG]  [BUGGY]  return  1;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])	15	None	add
190	[BUG]  [BUGGY]  return  1;  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  ERROR  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  1;  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    1;    if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  cannot  find  symbol  ERROR	15	None	add
191	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])	8	None	add
192	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	  	non-compiled	[CE]  ';'  expected	8	None	add
193	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [CE]  unreachable  statement  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  unreachable  statement	8	None	add
194	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  DEFAULT_FILE_MODE))  {  return  DEFAULT_DIR_MODE;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int)  [FE]          IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  DEFAULT_FILE_MODE))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  DEFAULT_FILE_MODE))  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int)	8	None	add
195	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	  	non-compiled	[CE]  ';'  expected	8	None	add
196	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE  ==  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE  ==  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE  ==  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	  	non-compiled	[CE]  ';'  expected	8	None	add
197	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
198	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [CE]  cannot  find  symbol  deFAULT_DIR_MODE  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  cannot  find  symbol  deFAULT_DIR_MODE	8	None	add
199	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
200	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
201	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null)  {  return  FORMAT_OLDGNU;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
202	[BUG]  [BUGGY]  if(header  ==  null)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  FORMAT_OLDGNU;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  return  FORMAT_OLDGNU;  }	  return    0;    	compilable	  [FE]  IOException  	3	1	replace
203	[BUG]  [BUGGY]  if(header  ==  null)  {  return  FORMAT_LEN;  }  [CE]  cannot  find  symbol  FORMAT_LEN  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  if(header  ==  null)  {  return  FORMAT_LEN;  }  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  return  FORMAT_LEN;  }	  return    0;    	non-compiled	[CE]  cannot  find  symbol  FORMAT_LEN	3	None	replace
204	[BUG]  [BUGGY]  return  FORMAT_TAR_ARCHIVE_ENTRIES;  [CE]  cannot  find  symbol  FORMAT_TAR_ARCHIVE_ENTRIES  [FE]                IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  FORMAT_TAR_ARCHIVE_ENTRIES;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  FORMAT_TAR_ARCHIVE_ENTRIES;	  return    EMPTY_TAR_ARCHIVE_ENTRY;    	non-compiled	[CE]  cannot  find  symbol  FORMAT_TAR_ARCHIVE_ENTRIES	7	None	replace
205	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_LITERAL;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_LITERAL  [FE]                  IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_LITERAL;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_LITERAL;	  return    EMPTY_TAR_ARCHIVE_ENTRY;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_LITERAL	7	None	replace
206	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  &  header.length;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  &  header.length;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  &  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	1	None	replace
207	[BUG]  [BUGGY]  return  FORMAT_LEADING_SECOND;  [CE]  cannot  find  symbol  FORMAT_LEADING_SECOND  [FE]                    IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  FORMAT_LEADING_SECOND;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  FORMAT_LEADING_SECOND;	  return    header;    	non-compiled	[CE]  cannot  find  symbol  FORMAT_LEADING_SECOND	10	None	replace
208	[BUG]  [BUGGY]  return  FORMAT_COLLECTION;  [CE]  cannot  find  symbol  FORMAT_COLLECTION  [FE]                      IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  FORMAT_COLLECTION;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  FORMAT_COLLECTION;	  return    header;    	non-compiled	[CE]  cannot  find  symbol  FORMAT_COLLECTION	10	None	replace
209	[BUG]  [BUGGY]  return  FORMAT_LEADINGSECOND;  [CE]  cannot  find  symbol  FORMAT_LEADINGSECOND  [FE]                        IOException    [CONTEXT]    private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }    [BUGGY]  return  FORMAT_LEADINGSECOND;  [BUGGY]    }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  FORMAT_LEADINGSECOND;	  return    header;    	non-compiled	[CE]  cannot  find  symbol  FORMAT_LEADINGSECOND	10	None	replace
