bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MIN_OLDGNU,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
2	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MIN_OLDGNU,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
3	[BUG]  [BUGGY]  ||  header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MIN_OLDGNU,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
4	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MIN_OLDGNU,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
5	[BUG]  [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MIN_OLDGNU,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
6	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MIN_OLDGNU,  header,  XSTAR_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MIN_OLDGNU,  header,  XSTAR_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MIN_OLDGNU,  header,  XSTAR_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MIN_OLDGNU,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
7	[BUG]  [BUGGY]  if(header.length  ==  1)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  1)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  1)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MIN_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MIN_OLDGNU,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
8	[BUG]  [BUGGY]  return  header.indexOf(MAX_NAMELEN);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf(MAX_NAMELEN);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(MAX_NAMELEN);	  return    header.indexOf(embeddedName);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
9	[BUG]  [BUGGY]  return  header.indexOf(MAX_OLDGNU);  [CE]  cannot  find  symbol  MAX_OLDGNU  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf(MAX_OLDGNU);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(MAX_OLDGNU);	  return    header.indexOf(embeddedName);    	non-compiled	[CE]  cannot  find  symbol  MAX_OLDGNU	177	None	replace
10	[BUG]  [BUGGY]  return  header.indexOf('_');  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf('_');  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf('_');	  return    header.indexOf(embeddedName);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
11	[BUG]  [BUGGY]  return  header.indexOf('  ');  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf('  ');  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf('  ');	  return    header.indexOf(embeddedName);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
12	[BUG]  [BUGGY]  return  header.indexOf('/');  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf('/');  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf('/');	  return    header.indexOf(embeddedName);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
13	[BUG]  [BUGGY]  return  header.indexOf(SHORT_NAME);  [CE]  cannot  find  symbol  SHORT_NAME  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf(SHORT_NAME);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(SHORT_NAME);	  return    header.indexOf(embeddedName);    	non-compiled	[CE]  cannot  find  symbol  SHORT_NAME	177	None	replace
14	[BUG]  [BUGGY]  return  header.indexOf(FILE_NAME);  [CE]  cannot  find  symbol  FILE_NAME  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf(FILE_NAME);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(FILE_NAME);	  return    header.indexOf(embeddedName);    	non-compiled	[CE]  cannot  find  symbol  FILE_NAME	177	None	replace
15	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  header.length  -  1;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
16	[BUG]  [BUGGY]  return  header.length  -  1;  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  -  1;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
17	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  header.length  -  2;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
18	[BUG]  [BUGGY]  return  header.length  -  2;  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  -  2;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
19	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  header.length  +  1;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
20	[BUG]  [BUGGY]  return  header.length  +  1;  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  +  1;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
21	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  4;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  header.length  -  4;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
22	[BUG]  [BUGGY]  return  header.length  -  4;  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  4;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  -  4;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
23	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  3;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  header.length  -  3;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
24	[BUG]  [BUGGY]  return  header.length  -  3;  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  3;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  -  3;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
25	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  *  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  header.length  *  2;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
26	[BUG]  [BUGGY]  return  header.length  *  2;  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  *  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  *  2;	  return    header.length;    	compilable	  [FE]  IOException  	65	1	replace
27	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU    	non-compiled	[CE]  ';'  expected	88	None	replace
28	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU    	non-compiled	[CE]  ';'  expected	88	None	replace
29	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FOR  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FOR  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FOR	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU    	non-compiled	[CE]  ';'  expected	88	None	replace
30	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU    	non-compiled	[CE]  ';'  expected	88	None	replace
31	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
32	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU    	non-compiled	[CE]  ';'  expected	88	None	replace
33	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU    	non-compiled	[CE]  ';'  expected	88	None	replace
34	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null  ||  header.length!=  0)  {  return  0;  }	  if(header!=    null)    {    return    0;    }    	compilable	  [FE]  IOException  	100	1	replace
35	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  return  0;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length!=  0)  {  return  0;  }	  if(header!=    null)    {    return    0;    }    	compilable	  [FE]  IOException  	100	1	replace
36	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null  ||  header.length  <  2)  {  return  0;  }	  if(header!=    null)    {    return    0;    }    	compilable	  [FE]  IOException  	100	1	replace
37	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  return  0;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  return  0;  }	  if(header!=    null)    {    return    0;    }    	compilable	  [FE]  IOException  	100	1	replace
38	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  -1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null)  {  return  -1;  }	  if(header!=    null)    {    return    0;    }    	compilable	  [FE]  IOException  	100	1	replace
39	[BUG]  [BUGGY]  if(header  ==  null)  {  return  -1;  }  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  -1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  return  -1;  }	  if(header!=    null)    {    return    0;    }    	compilable	  [FE]  IOException  	100	1	replace
40	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  =  0)  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  =  0)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  =  0)  {  return  0;  }	  if(header!=    null)    {    return    0;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
41	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(checkSumOK)  {  return  DEFAULT_DIR_MODE;  }	  if(!checkSumOK)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	48	1	replace
42	[BUG]  [BUGGY]  if(checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(checkSumOK)  {  return  DEFAULT_DIR_MODE;  }	  if(!checkSumOK)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	48	1	replace
43	[BUG]  [BUGGY]  ||  checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  checkSumOK)  {  return  DEFAULT_DIR_MODE;  }	  if(!checkSumOK)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
44	[BUG]  [BUGGY]  ||!checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||!checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||!checkSumOK)  {  return  DEFAULT_DIR_MODE;  }	  if(!checkSumOK)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
45	[BUG]  [BUGGY]  safely())  {  return  DEFAULT_DIR_MODE;  }  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  safely())  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	safely())  {  return  DEFAULT_DIR_MODE;  }	  if(!checkSumOK)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  ';'  expected	48	None	replace
46	[BUG]  [BUGGY]  safely(checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  safely(checkSumOK)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	safely(checkSumOK)  {  return  DEFAULT_DIR_MODE;  }	  if(!checkSumOK)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  ';'  expected	48	None	replace
47	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_FILE_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(!checkSumOK)  {  return  DEFAULT_FILE_MODE;  }	  if(!checkSumOK)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	48	1	replace
48	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_FILE_MODE;  }  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_FILE_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_FILE_MODE;  }	  if(!checkSumOK)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	48	1	replace
49	[BUG]  [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length;    	non-compiled	[CE]  ';'  expected	14	None	replace
50	[BUG]  [BUGGY]  int  header.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  header.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  header.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length;    	non-compiled	[CE]  ';'  expected	14	None	replace
51	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  }  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length;    	non-compiled	[CE]  ';'  expected	14	None	replace
52	[BUG]  [BUGGY]  if(header.length!=  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  }  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length!=  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length;    	non-compiled	[CE]  ';'  expected	14	None	replace
53	[BUG]  [BUGGY]  Integer  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  Integer  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	Integer  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length;    	non-compiled	[CE]  ';'  expected	14	None	replace
54	[BUG]  [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length  -  1;  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length;    	non-compiled	[CE]  ';'  expected	14	None	replace
55	[BUG]  [BUGGY]  final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length;    	non-compiled	[CE]  ';'  expected	14	None	replace
56	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
57	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
58	[BUG]  [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null  ||  header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
59	[BUG]  [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
60	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
61	[BUG]  [BUGGY]  if(header!=  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
62	[BUG]  [BUGGY]  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
63	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFF  [CE]  ')'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFF  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFF	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE    ==    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  ')'  expected	196	None	replace
64	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE    ==    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
65	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header  [CE]  ')'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE    ==    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  ')'  expected	196	None	replace
66	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET  [CE]  ')'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE    ==    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  ')'  expected	196	None	replace
67	[BUG]  [BUGGY]  ||  header  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE    ==    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
68	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFF  [CE]  ')'  expected  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFF  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFF	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE    ==    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  ')'  expected	196	None	replace
69	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE    ==    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
70	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  [CE]  not  a  statement  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;	  	non-compiled	[CE]  not  a  statement	134	None	add
71	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  XSTAR_MAGIC_LEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  XSTAR_MAGIC_LEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  XSTAR_MAGIC_LEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
72	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length  ==  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  XSTAR_MAGIC_LEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length  ==  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  XSTAR_MAGIC_LEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    if(header.length  ==  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  XSTAR_MAGIC_LEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
73	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  0))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  0))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  0))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
74	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length  ==  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  0))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length  ==  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  0))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    if(header.length  ==  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  0))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
75	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [CE]  unreachable  statement  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length;  }	  	non-compiled	[CE]  unreachable  statement	134	None	add
76	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header    ==    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }	  	compilable	  [FE]  IOException  	49	1	add
77	[BUG]  [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }	  	compilable	  [FE]  IOException  	49	1	add
78	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header    ==    null)    {    return    DEFAULT_DIR_MODE;    }    if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }	  	compilable	  [FE]  IOException  	49	1	add
79	[BUG]  [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    DEFAULT_DIR_MODE;    }    if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }	  	compilable	  [FE]  IOException  	49	1	add
80	[BUG]  [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  If(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  If(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    DEFAULT_DIR_MODE;    }    If(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  ';'  expected	49	None	add
81	[BUG]  [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  >=  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  >=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  >=  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	49	None	add
82	[BUG]  [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  ||  header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  ||  header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    DEFAULT_DIR_MODE;    }    ||  header  ==  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
83	[BUG]  [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  [BUGGY]  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  [BUGGY]  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  [BUGGY]  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  ')'  expected	49	None	add
84	[BUG]  [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  >>  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  >>  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  >>  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	49	None	add
85	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    EMPTY_PER_SECOND,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
86	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    EMPTY_PER_SECOND,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
87	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    EMPTY_PER_SECOND,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
88	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    EMPTY_PER_SECOND,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
89	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    EMPTY_PER_SECOND,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
90	[BUG]  [BUGGY]  ||  header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  EMPTY_PER_SECOND,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    EMPTY_PER_SECOND,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
91	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    EMPTY_PER_SECOND,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
92	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
93	[BUG]  [BUGGY]  if(header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
94	[BUG]  [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
95	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
96	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
97	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGLNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGLNU;  }  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGLNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGLNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGLNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGLNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
98	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }	  	compilable	  [FE]  IOException  	153	1	add
99	[BUG]  [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }	  	compilable	  [FE]  IOException  	153	1	add
100	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }	  	compilable	  [FE]  IOException  	153	1	add
101	[BUG]  [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  ==  null)  {  return  DEFAULT_DIR_MODE;  }	  	compilable	  [FE]  IOException  	153	1	add
102	[BUG]  [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  >=  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  >=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  >=  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	153	None	add
103	[BUG]  [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  If(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  If(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    If(header!=  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  ';'  expected	153	None	add
104	[BUG]  [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  >>  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  >>  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  >>  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	153	None	add
105	[BUG]  [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  [Delete]  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  [Delete]  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  [Delete]  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  ')'  expected	153	None	add
106	[BUG]  [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  [BUGGY]  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_DIR_MODE;  }  if(header  [BUGGY]  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    if(header  [BUGGY]  null)  {  return  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  ')'  expected	153	None	add
107	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
108	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
109	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
110	[BUG]  [BUGGY]  return  header.indexOf(EOF_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  EOF_TAR_ARCHIVE_ENTRIES  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf(EOF_TAR_ARCHIVE_ENTRIES);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(EOF_TAR_ARCHIVE_ENTRIES);	  return    header.indexOf(EOFTY_TAR_ARCHIVE_ENTRIES);    	non-compiled	[CE]  cannot  find  symbol  EOF_TAR_ARCHIVE_ENTRIES	130	None	replace
111	[BUG]  [BUGGY]  return  header.indexOf(RELATIVE_TAR_ARCHIVE_ENTRIES);  [CE]  cannot  find  symbol  RELATIVE_TAR_ARCHIVE_ENTRIES  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf(RELATIVE_TAR_ARCHIVE_ENTRIES);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(RELATIVE_TAR_ARCHIVE_ENTRIES);	  return    header.indexOf(EOFTY_TAR_ARCHIVE_ENTRIES);    	non-compiled	[CE]  cannot  find  symbol  RELATIVE_TAR_ARCHIVE_ENTRIES	130	None	replace
112	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[])  [FE]        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[])	165	None	replace
113	[BUG]  [BUGGY]  final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  ';'  expected	165	None	replace
114	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  XSTAR_MAGIC_LEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[],int)  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  XSTAR_MAGIC_LEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header,  XSTAR_MAGIC_LEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[],int)	165	None	replace
115	[BUG]  [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[])  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(TarArchiveEntry[],byte[])	165	None	replace
116	[BUG]  [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES  =  header.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES  =  header.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  EMPTY_TAR_ARCHIVE_ENTRIES  =  header.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])	165	None	replace
117	[BUG]  [BUGGY]  final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  ';'  expected	165	None	replace
118	[BUG]  [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
119	[BUG]  [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHECK,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHECK,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHECK,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
120	[BUG]  [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
121	[BUG]  [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  EMPTY_TAR_ARCHIVE_ENTRIES;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
122	[BUG]  [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHECK,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHECK,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHECK,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
123	[BUG]  [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFAULT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFAULT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFAULT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
124	[BUG]  [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHARACTER,  header,  CHARACTER_OFFSET,  CHARACTER_LENGTH))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHARACTER,  header,  CHARACTER_OFFSET,  CHARACTER_LENGTH))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHARACTER,  header,  CHARACTER_OFFSET,  CHARACTER_LENGTH))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
125	[BUG]  [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHARACTER,  header,  CHARACTER_LENGTH,  CHARACTER_LENGTH))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHARACTER,  header,  CHARACTER_LENGTH,  CHARACTER_LENGTH))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(CHARACTER,  header,  CHARACTER_LENGTH,  CHARACTER_LENGTH))  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
126	[BUG]  [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length();    	non-compiled	[CE]  ';'  expected	15	None	replace
127	[BUG]  [BUGGY]  if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  }  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length();    	non-compiled	[CE]  ';'  expected	15	None	replace
128	[BUG]  [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length()  -  1;  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length()  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length()  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length();    	non-compiled	[CE]  ';'  expected	15	None	replace
129	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  }  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length()  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length()  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length();    	non-compiled	[CE]  ';'  expected	15	None	replace
130	[BUG]  [BUGGY]  Integer  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  Integer  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	Integer  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length();    	non-compiled	[CE]  ';'  expected	15	None	replace
131	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  }  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length()  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length()  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  final  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length();  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length();    	non-compiled	[CE]  ';'  expected	15	None	replace
132	[BUG]  [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length()  +  1;  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length()  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length()  +  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    int    EMPTY_TAR_ARCHIVE_ENTRIES.length    =    header.length();    	non-compiled	[CE]  ';'  expected	15	None	replace
133	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header  ==  null)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header    ==    null)    {    return    1;    }    if(header  ==  null)  {  return  1;  }	  	compilable	  [FE]  IOException  	40	1	add
134	[BUG]  [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header  ==  null)  {  return  1;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header  ==  null)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    1;    }    if(header  ==  null)  {  return  1;  }	  	compilable	  [FE]  IOException  	40	1	add
135	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header!=  null)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header    ==    null)    {    return    1;    }    if(header!=  null)  {  return  1;  }	  	compilable	  [FE]  IOException  	40	1	add
136	[BUG]  [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header!=  null)  {  return  1;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header!=  null)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    1;    }    if(header!=  null)  {  return  1;  }	  	compilable	  [FE]  IOException  	40	1	add
137	[BUG]  [BUGGY]  if(header  ==  null)  {  return  1;  }  If(header  ==  null)  {  return  1;  }  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  1;  }  If(header  ==  null)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    1;    }    If(header  ==  null)  {  return  1;  }	  	non-compiled	[CE]  ';'  expected	40	None	add
138	[BUG]  [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header  >=  null)  {  return  1;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header  >=  null)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    1;    }    if(header  >=  null)  {  return  1;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	40	None	add
139	[BUG]  [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header  ==  null)  {  return  1);  }  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  1;  }  if(header  ==  null)  {  return  1);  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    1;    }    if(header  ==  null)  {  return  1);  }	  	non-compiled	[CE]  ';'  expected	40	None	add
140	[BUG]  [BUGGY]  if(header  ==  null)  {  return  1;  }  for(header  ==  null)  {  return  1;  }  [CE]  not  a  statement  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  1;  }  for(header  ==  null)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    1;    }    for(header  ==  null)  {  return  1;  }	  	non-compiled	[CE]  not  a  statement	40	None	add
141	[BUG]  [BUGGY]  if(header  ==  null)  {  return  1;  }  ||  header  ==  null)  {  return  1;  }  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  1;  }  ||  header  ==  null)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header    ==    null)    {    return    1;    }    ||  header  ==  null)  {  return  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
142	[BUG]  [BUGGY]  return  header.length  +  EMPTY_TAR_ARCHIVE_ENTRIES;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  +  EMPTY_TAR_ARCHIVE_ENTRIES;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  +  EMPTY_TAR_ARCHIVE_ENTRIES;	  return    EMPTY_TAR_ARCHIVE_ENTRIES    +    header.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	105	None	replace
143	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length  -  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES    +    header.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	105	None	replace
144	[BUG]  [BUGGY]  return  header  +  EMPTY_TAR_ARCHIVE_ENTRIES;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header  +  EMPTY_TAR_ARCHIVE_ENTRIES;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header  +  EMPTY_TAR_ARCHIVE_ENTRIES;	  return    EMPTY_TAR_ARCHIVE_ENTRIES    +    header.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	105	None	replace
145	[BUG]  [BUGGY]  return  header  +  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header  +  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header  +  EMPTY_TAR_ARCHIVE_ENTRIES.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES    +    header.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	105	None	replace
146	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length  -  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length  -  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length  -  2;	  return    EMPTY_TAR_ARCHIVE_ENTRIES    +    header.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	105	None	replace
147	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length,  MAGICLEN;  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length,  MAGICLEN;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  +  header.length,  MAGICLEN;	  return    EMPTY_TAR_ARCHIVE_ENTRIES    +    header.length;    	non-compiled	[CE]  ';'  expected	105	None	replace
148	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCH  [CE]  <identifier>  expected  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCH  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCH	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
149	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCH  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCH  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARCH	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
150	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARC  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARC  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARC	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
151	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
152	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARC  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARC  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR_ARC	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	139	None	replace
153	[BUG]  [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES  +  1;  [CE]  cannot  find  symbol  result  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  DEFAULT_TAR_ARCHIVE_ENTRIES  +  1;	  result    =    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  result	9	None	replace
154	[BUG]  [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES.length;  [CE]  cannot  find  symbol  result  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  DEFAULT_TAR_ARCHIVE_ENTRIES.length;	  result    =    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  result	9	None	replace
155	[BUG]  [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES  -  1;  [CE]  cannot  find  symbol  result  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  DEFAULT_TAR_ARCHIVE_ENTRIES  -  1;	  result    =    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  result	9	None	replace
156	[BUG]  [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES  *  2;  [CE]  cannot  find  symbol  result  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIES  *  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  DEFAULT_TAR_ARCHIVE_ENTRIES  *  2;	  result    =    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  result	9	None	replace
157	[BUG]  [BUGGY]  Result  =  DEFAULT_TAR_ARCHIVE_ENTRIES;  [CE]  cannot  find  symbol  Result  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  Result  =  DEFAULT_TAR_ARCHIVE_ENTRIES;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	Result  =  DEFAULT_TAR_ARCHIVE_ENTRIES;	  result    =    DEFAULT_TAR_ARCHIVE_ENTRIES;    	non-compiled	[CE]  cannot  find  symbol  Result	9	None	replace
158	[BUG]  [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
159	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
160	[BUG]  [BUGGY]  if(header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
161	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
162	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOK)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(checkSumOK)  {  return  1;  }	  if(!checkSumOK)    {    return    1;    }    	compilable	  [FE]  IOException  	39	1	replace
163	[BUG]  [BUGGY]  if(checkSumOK)  {  return  1;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOK)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(checkSumOK)  {  return  1;  }	  if(!checkSumOK)    {    return    1;    }    	compilable	  [FE]  IOException  	39	1	replace
164	[BUG]  [BUGGY]  ||  checkSumOK)  {  return  1;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  checkSumOK)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  checkSumOK)  {  return  1;  }	  if(!checkSumOK)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
165	[BUG]  [BUGGY]  ||!checkSumOK)  {  return  1;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||!checkSumOK)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||!checkSumOK)  {  return  1;  }	  if(!checkSumOK)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
166	[BUG]  [BUGGY]  if(checkSumOperator)  {  return  1;  }  [CE]  cannot  find  symbol  checkSumOperator  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOperator)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(checkSumOperator)  {  return  1;  }	  if(!checkSumOK)    {    return    1;    }    	non-compiled	[CE]  cannot  find  symbol  checkSumOperator	39	None	replace
167	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  while(!checkSumOK)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	while(!checkSumOK)  {  return  1;  }	  if(!checkSumOK)    {    return    1;    }    	compilable	  [FE]  IOException  	39	1	replace
168	[BUG]  [BUGGY]  while(!checkSumOK)  {  return  1;  }  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  while(!checkSumOK)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	while(!checkSumOK)  {  return  1;  }	  if(!checkSumOK)    {    return    1;    }    	compilable	  [FE]  IOException  	39	1	replace
169	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_D  [CE]  ')'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_D  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_D	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	26	None	replace
170	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAUL  [CE]  ')'  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAUL  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAUL	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	26	None	replace
171	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA  [CE]  ')'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	26	None	replace
172	[BUG]  [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA  [CE]  ')'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	26	None	replace
173	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_  [CE]  ')'  expected  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	26	None	replace
174	[BUG]  [BUGGY]  ||  header!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFA  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFA	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    DEFA    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
175	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR  [CE]  ')'  expected  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	26	None	replace
176	[BUG]  [BUGGY]  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ';'  expected	115	None	replace
177	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_D  [CE]  ')'  expected  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_D  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_D	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	115	None	replace
178	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAUL  [CE]  ')'  expected  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAUL  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAUL	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	115	None	replace
179	[BUG]  [BUGGY]  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
180	[BUG]  [BUGGY]  if(deFAULT_DIR_MODE!=  header)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(deFAULT_DIR_MODE!=  header)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(deFAULT_DIR_MODE!=  header)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFA	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ';'  expected	115	None	replace
181	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA  [CE]  ')'  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	115	None	replace
182	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_  [CE]  ')'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	115	None	replace
183	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
184	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
185	[BUG]  [BUGGY]  parent  ==  null  ||!ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  [CE]  not  a  statement  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null  ||!ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null  ||!ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
186	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
187	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [CE]  not  a  statement  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
188	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG  [CE]  not  a  statement  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
189	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
190	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCH  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCH  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCH	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header)    ==    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	140	None	replace
191	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCH  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCH  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARCH	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header)    ==    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	140	None	replace
192	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARC  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARC  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR_ARC	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header)    ==    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	140	None	replace
193	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)  ==  return  EMPTY_TAR	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header)    ==    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	140	None	replace
194	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)!=  return  EMPTY_TAR_ARCH  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)!=  return  EMPTY_TAR_ARCH  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header)!=  return  EMPTY_TAR_ARCH	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header)    ==    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	140	None	replace
195	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
196	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
197	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
198	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
199	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
200	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
201	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [CE]  not  a  statement  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
202	[BUG]  [BUGGY]  return  DEFAULT_LEN;  [CE]  cannot  find  symbol  DEFAULT_LEN  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_LEN;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_LEN;	  return    DEFAULT_OLDGNU;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LEN	123	None	replace
203	[BUG]  [BUGGY]  return  DEFAULT_LAST;  [CE]  cannot  find  symbol  DEFAULT_LAST  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_LAST;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_LAST;	  return    DEFAULT_OLDGNU;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LAST	123	None	replace
204	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  MAX_NAMELEN;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  MAX_NAMELEN;	  return    DEFAULT_OLDGNU;    	compilable	  [FE]  IOException  	123	1	replace
205	[BUG]  [BUGGY]  return  MAX_NAMELEN;  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  MAX_NAMELEN;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  MAX_NAMELEN;	  return    DEFAULT_OLDGNU;    	compilable	  [FE]  IOException  	123	1	replace
206	[BUG]  [BUGGY]  racks.matchAsciiBuffer(MAGIC_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.matchAsciiBuffer(MAGIC_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.matchAsciiBuffer(MAGIC_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
207	[BUG]  [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
208	[BUG]  [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(MAGIC_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN));  [CE]  cannot  find  symbol  MAGIC_OLDGNU  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(MAGIC_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN));  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.add(ArchiveUtils.matchAsciiBuffer(MAGIC_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN));	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  cannot  find  symbol  MAGIC_OLDGNU	164	None	replace
209	[BUG]  [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
210	[BUG]  [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN));  [CE]  cannot  find  symbol  XSTAR_MAGIC_OLDGNU  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN));  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN));	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  cannot  find  symbol  XSTAR_MAGIC_OLDGNU	164	None	replace
211	[BUG]  [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN));  [CE]  cannot  find  symbol  racks  [FE]                                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN));  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.add(ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN));	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  cannot  find  symbol  racks	164	None	replace
212	[BUG]  [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN));  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)  [FE]                                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN));  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.add(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN));	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAGIC_LEN,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)	164	None	replace
213	[BUG]  [BUGGY]  ||!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
214	[BUG]  [BUGGY]  parent.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  ';'  expected	173	None	replace
215	[BUG]  [BUGGY]  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  ';'  expected	173	None	replace
216	[BUG]  [BUGGY]  ||!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
217	[BUG]  [BUGGY]  ettyPrinter.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ettyPrinter.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	ettyPrinter.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  ';'  expected	173	None	replace
218	[BUG]  [BUGGY]  parent.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  ';'  expected	173	None	replace
219	[BUG]  [BUGGY]  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_    	non-compiled	[CE]  ';'  expected	173	None	replace
220	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)!=  ')'  expected  [CE]  ')'  expected  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)!=  ')'  expected  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)!=  ')'  expected	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN)    	non-compiled	[CE]  ')'  expected	174	None	replace
221	[BUG]  [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)!=  '  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)!=  '	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN)    	non-compiled	[CE]  illegal  line  end  in  character  literal	174	None	replace
222	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)!=  ')'  [CE]  ')'  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)!=  ')'  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)!=  ')'	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN)    	non-compiled	[CE]  ')'  expected	174	None	replace
223	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  ')'  expected  [CE]  ')'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  ')'  expected  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  ')'  expected	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN)    	non-compiled	[CE]  ')'  expected	174	None	replace
224	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  ')'  [CE]  ')'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  ')'  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  ')'	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN)    	non-compiled	[CE]  ')'  expected	174	None	replace
225	[BUG]  [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  '  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  '	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN)    	non-compiled	[CE]  illegal  line  end  in  character  literal	174	None	replace
226	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  0)  {  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN)  ==  0)  {	          if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN)    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
227	[BUG]  [BUGGY]  return  header.length  +  EMPTY_TAR_ARCHIVE_EXPRESSION;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  +  EMPTY_TAR_ARCHIVE_EXPRESSION;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  +  EMPTY_TAR_ARCHIVE_EXPRESSION;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION    +    header.length;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION	182	None	replace
228	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_EXPRESSION  +  header.length;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_EXPRESSION  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_TAR_ARCHIVE_EXPRESSION  +  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_EXPRESSION  +  header.length;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION    +    header.length;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_EXPRESSION	182	None	replace
229	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  header.length  -  1;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  header.length  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  header.length  -  1;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION    +    header.length;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION	182	None	replace
230	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_LEN  +  header.length;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_LEN  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_LEN  +  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_LEN  +  header.length;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION    +    header.length;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_LEN	182	None	replace
231	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  header.length  -  2;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  header.length  -  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_EXPRESSION  +  header.length  -  2;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION    +    header.length;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_EXPRESSION	182	None	replace
232	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_LEN  +  header.length;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_LEN  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_TAR_ARCHIVE_LEN  +  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_LEN  +  header.length;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION    +    header.length;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_LEN	182	None	replace
233	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null  ||  header.length!=  0)  {  return  1;  }	  if(header    ==    null)    {    return    1;    }    	compilable	  [FE]  IOException  	41	1	replace
234	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  return  1;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length!=  0)  {  return  1;  }	  if(header    ==    null)    {    return    1;    }    	compilable	  [FE]  IOException  	41	1	replace
235	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null  ||  header.length  <  2)  {  return  1;  }	  if(header    ==    null)    {    return    1;    }    	compilable	  [FE]  IOException  	41	1	replace
236	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  return  1;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  return  1;  }	  if(header    ==    null)    {    return    1;    }    	compilable	  [FE]  IOException  	41	1	replace
237	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=  null  ||  header.length  ==  0)  {  return  1;  }	  if(header    ==    null)    {    return    1;    }    	compilable	  [FE]  IOException  	41	1	replace
238	[BUG]  [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  return  1;  }  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null  ||  header.length  ==  0)  {  return  1;  }	  if(header    ==    null)    {    return    1;    }    	compilable	  [FE]  IOException  	41	1	replace
239	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDG    	non-compiled	[CE]  ';'  expected	86	None	replace
240	[BUG]  [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDG    	non-compiled	[CE]  ';'  expected	86	None	replace
241	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header  [CE]  ')'  expected  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	22	None	replace
242	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE  [CE]  ')'  expected  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	22	None	replace
243	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_SECOND;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_SECOND  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_SECOND;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_SECOND;	  return    FORMAT_LEN;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_SECOND	55	None	replace
244	[BUG]  [BUGGY]  ||  header  ==  null)  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header  ==  null)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header  ==  null)  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
245	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=  null)  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	202	1	replace
246	[BUG]  [BUGGY]  if(header!=  null)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	202	1	replace
247	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null  ||  header.length  <  2)  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	202	1	replace
248	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	202	1	replace
249	[BUG]  [BUGGY]  ||  header!=  null)  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header!=  null)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header!=  null)  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
250	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(header    ==    null)    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	202	None	replace
251	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int)  [FE]        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header))    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int)	191	None	replace
252	[BUG]  [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header))    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])	191	None	replace
253	[BUG]  [BUGGY]  result  |=  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }  [CE]  cannot  find  symbol  result  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  |=  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  |=  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header))    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  cannot  find  symbol  result	191	None	replace
254	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN,  DEFAULT_DIR_MODE))  {  return  DEFAULT_DIR_MODE;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN,  DEFAULT_DIR_MODE))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN,  DEFAULT_DIR_MODE))  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header))    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)	191	None	replace
255	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XEND_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE;  }  [CE]  cannot  find  symbol  XEND_MAGIC_LEN  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XEND_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XEND_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header))    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  cannot  find  symbol  XEND_MAGIC_LEN	191	None	replace
256	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header))  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header))    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[])	191	None	replace
257	[BUG]  [BUGGY]  result  =  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_DIR_MODE;  }  [CE]  cannot  find  symbol  result  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  =  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  DEFAULT_DIR_MODE;  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header))    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  cannot  find  symbol  result	191	None	replace
258	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  0;  }  if(header!=  null)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=    null)    {    return    0;    }    if(header!=  null)  {  return  0;  }	  	compilable	  [FE]  IOException  	99	1	add
259	[BUG]  [BUGGY]  if(header!=  null)  {  return  0;  }  if(header!=  null)  {  return  0;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  0;  }  if(header!=  null)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    0;    }    if(header!=  null)  {  return  0;  }	  	compilable	  [FE]  IOException  	99	1	add
260	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  ==  null)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=    null)    {    return    0;    }    if(header  ==  null)  {  return  0;  }	  	compilable	  [FE]  IOException  	99	1	add
261	[BUG]  [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  ==  null)  {  return  0;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  ==  null)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    0;    }    if(header  ==  null)  {  return  0;  }	  	compilable	  [FE]  IOException  	99	1	add
262	[BUG]  [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  >=  null)  {  return  0;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  >=  null)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    0;    }    if(header  >=  null)  {  return  0;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	99	None	add
263	[BUG]  [BUGGY]  if(header!=  null)  {  return  0;  }  If(header!=  null)  {  return  0;  }  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  0;  }  If(header!=  null)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    0;    }    If(header!=  null)  {  return  0;  }	  	non-compiled	[CE]  ';'  expected	99	None	add
264	[BUG]  [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  >>  null)  {  return  0;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  >>  null)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    0;    }    if(header  >>  null)  {  return  0;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	99	None	add
265	[BUG]  [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  [Delete]  null)  {  return  0;  }  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  [Delete]  null)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    0;    }    if(header  [Delete]  null)  {  return  0;  }	  	non-compiled	[CE]  ')'  expected	99	None	add
266	[BUG]  [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  [BUGGY]  null)  {  return  0;  }  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  0;  }  if(header  [BUGGY]  null)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=    null)    {    return    0;    }    if(header  [BUGGY]  null)  {  return  0;  }	  	non-compiled	[CE]  ')'  expected	99	None	add
267	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  ERROR  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  cannot  find  symbol  ERROR	190	None	replace
268	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)	190	None	replace
269	[BUG]  [BUGGY]  result  =  1;  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  result  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  =  1;  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  1;  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  cannot  find  symbol  result	190	None	replace
270	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_OFFSET,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  ERROR  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_OFFSET,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_OFFSET,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  cannot  find  symbol  ERROR	190	None	replace
271	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)	190	None	replace
272	[BUG]  [BUGGY]  racks.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	190	None	replace
273	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(OR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  OR  [FE]                                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(OR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(OR,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  cannot  find  symbol  OR	190	None	replace
274	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  int  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  int  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    >    0?    DEFAULT_FILE_MODE    :    DEFAULT_DIR_MODE;    int  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;	  	non-compiled	[CE]  ';'  expected	180	None	add
275	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [CE]  not  a  statement  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    >    0?    DEFAULT_FILE_MODE    :    DEFAULT_DIR_MODE;    DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;	  	non-compiled	[CE]  not  a  statement	180	None	add
276	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [CE]  ')'  expected  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    >    0?    DEFAULT_FILE_MODE    :    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;	  	non-compiled	[CE]  ')'  expected	180	None	add
277	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [CE]  ')'  expected  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    >    0?    DEFAULT_FILE_MODE    :    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;	  	non-compiled	[CE]  ')'  expected	180	None	add
278	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  }  [CE]  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    >    0?    DEFAULT_FILE_MODE    :    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  	180	None	add
279	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  ||  header.length()  ==  0)  {  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  ||  header.length()  ==  0)  {  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    >    0?    DEFAULT_FILE_MODE    :    DEFAULT_DIR_MODE;    ||  header.length()  ==  0)  {  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;	  	non-compiled	[CE]  illegal  start  of  expression	180	None	add
280	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  }  [CE]  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    >    0?    DEFAULT_FILE_MODE    :    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  }	  	non-compiled	[CE]  	180	None	add
281	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE);  [CE]  cannot  find  symbol  deFAULT_DIR_MODE  [FE]                  IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    >    0?    DEFAULT_FILE_MODE    :    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE  >  0?  DEFAULT_FILE_MODE  :  DEFAULT_DIR_MODE);	  	non-compiled	[CE]  cannot  find  symbol  deFAULT_DIR_MODE	180	None	add
282	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE  +  header.length;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE  +  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    header.length;    if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE  +  header.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
283	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE  +  header.length;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE  +  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE  +  header.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
284	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  int  DEFAULT_DIR_MODE  +  header.length;  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  int  DEFAULT_DIR_MODE  +  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    header.length;    int  DEFAULT_DIR_MODE  +  header.length;	  	non-compiled	[CE]  ';'  expected	124	None	add
285	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    header.length;    if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	124	None	add
286	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    header.length;    if(header.length  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	124	None	add
287	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE  +  header.length;  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE  +  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    header.length;    if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_DIR_MODE  +  header.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
288	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    header.length;    if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAUL	  	non-compiled	[CE]  ';'  expected	124	None	add
289	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_D  [CE]  ';'  expected  [FE]                  IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  header.length;  if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_D  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    header.length;    if(header.length!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAULT_D	  	non-compiled	[CE]  ';'  expected	124	None	add
290	[BUG]  [BUGGY]  racks.matchAsciiBuffer(MAX_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.matchAsciiBuffer(MAX_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.matchAsciiBuffer(MAX_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
291	[BUG]  [BUGGY]  racks.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
292	[BUG]  [BUGGY]  racks.matchAsciiBuffer(WRITE_OLDGNU,  header,  WRITE_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.matchAsciiBuffer(WRITE_OLDGNU,  header,  WRITE_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.matchAsciiBuffer(WRITE_OLDGNU,  header,  WRITE_OLDGNU,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
293	[BUG]  [BUGGY]  racks.matchAsciiBuffer(MAX_LEN,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.matchAsciiBuffer(MAX_LEN,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.matchAsciiBuffer(MAX_LEN,  header,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
294	[BUG]  [BUGGY]  racks.matchAsciiBuffer(MAX_NAMELEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.matchAsciiBuffer(MAX_NAMELEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.matchAsciiBuffer(MAX_NAMELEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
295	[BUG]  [BUGGY]  racks.matchAsciiBuffer(MAX_NAMELEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_LEN;  }  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.matchAsciiBuffer(MAX_NAMELEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_LEN;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.matchAsciiBuffer(MAX_NAMELEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_LEN;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
296	[BUG]  [BUGGY]  racks.matchAsciiBuffer(MAX_NAMELEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_NAMELEN;  }  [CE]  ';'  expected  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  racks.matchAsciiBuffer(MAX_NAMELEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_NAMELEN;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	racks.matchAsciiBuffer(MAX_NAMELEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_NAMELEN;  }	  return    0;    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
297	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(header));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(header));  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	throw  new  IllegalArgumentException( " ".equals(header));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	96	None	replace
298	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
299	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(header));  [CE]  method  equalsIgnoreCase  in  class  String  cannot  be  applied  to  given  types;  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(header));  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	throw  new  IllegalArgumentException( " ".equalsIgnoreCase(header));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  method  equalsIgnoreCase  in  class  String  cannot  be  applied  to  given  types;	96	None	replace
300	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  throw  new  IllegalArgumentException( "Can  not  evaluate  type: "  +  header);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	throw  new  IllegalArgumentException( "Can  not  evaluate  type: "  +  header);	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IOException  	96	7	replace
301	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Can  not  evaluate  type: "  +  header);  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  throw  new  IllegalArgumentException( "Can  not  evaluate  type: "  +  header);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	throw  new  IllegalArgumentException( "Can  not  evaluate  type: "  +  header);	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IOException  	96	7	replace
302	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(header)?  1  :  0);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(int)  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(header)?  1  :  0);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	throw  new  IllegalArgumentException( " ".equals(header)?  1  :  0);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(int)	96	None	replace
303	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  0;  }  if(!checkSumOK)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(!checkSumOK)    {    return    0;    }    if(!checkSumOK)  {  return  0;  }	  	compilable	  [FE]  IOException  	93	1	add
304	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  0;  }  if(!checkSumOK)  {  return  0;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  0;  }  if(!checkSumOK)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)    {    return    0;    }    if(!checkSumOK)  {  return  0;  }	  	compilable	  [FE]  IOException  	93	1	add
305	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  0;  }  if(!checkSumok)  {  return  0;  }  [CE]  cannot  find  symbol  checkSumok  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  0;  }  if(!checkSumok)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)    {    return    0;    }    if(!checkSumok)  {  return  0;  }	  	non-compiled	[CE]  cannot  find  symbol  checkSumok	93	None	add
306	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  0;  }  If(!checkSumOK)  {  return  0;  }  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  0;  }  If(!checkSumOK)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)    {    return    0;    }    If(!checkSumOK)  {  return  0;  }	  	non-compiled	[CE]  ';'  expected	93	None	add
307	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  0;  }  if(!checkSumOK)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(!checkSumOK)    {    return    0;    }    if(!checkSumOK)  {  return  1;  }	  	compilable	  [FE]  IOException  	93	1	add
308	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  0;  }  if(!checkSumOK)  {  return  1;  }  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  0;  }  if(!checkSumOK)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)    {    return    0;    }    if(!checkSumOK)  {  return  1;  }	  	compilable	  [FE]  IOException  	93	1	add
309	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  0;  }  while(!checkSumOK)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(!checkSumOK)    {    return    0;    }    while(!checkSumOK)  {  return  0;  }	  	compilable	  [FE]  IOException  	93	1	add
310	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  0;  }  while(!checkSumOK)  {  return  0;  }  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  0;  }  while(!checkSumOK)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)    {    return    0;    }    while(!checkSumOK)  {  return  0;  }	  	compilable	  [FE]  IOException  	93	1	add
311	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  0;  }  ||  checkSumOK)  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  0;  }  ||  checkSumOK)  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)    {    return    0;    }    ||  checkSumOK)  {  return  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
312	[BUG]  [BUGGY]  return  header.indexOf(FIRST_OLDGNU);  [CE]  cannot  find  symbol  FIRST_OLDGNU  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf(FIRST_OLDGNU);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(FIRST_OLDGNU);	  return    header.indexOf(embedded);    	non-compiled	[CE]  cannot  find  symbol  FIRST_OLDGNU	178	None	replace
313	[BUG]  [BUGGY]  return  header.indexOf(':');  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf(':');  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(':');	  return    header.indexOf(embedded);    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
314	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
315	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
316	[BUG]  [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
317	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  0;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
318	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  1;  }  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  1;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
319	[BUG]  [BUGGY]  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length!=  0)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
320	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    YSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
321	[BUG]  [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    YSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
322	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    YSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
323	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  YSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    YSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
324	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  	compilable	  [FE]  IOException  	199	1	add
325	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  	compilable	  [FE]  IOException  	199	1	add
326	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }	  	compilable	  [FE]  IOException  	199	1	add
327	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }	  	compilable	  [FE]  IOException  	199	1	add
328	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  >=  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    if(header.length  >=  0)  {  return  FORMAT_OLDGNU;  }	  	compilable	  [FE]  IOException  	199	1	add
329	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  >=  0)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  >=  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    if(header.length  >=  0)  {  return  FORMAT_OLDGNU;  }	  	compilable	  [FE]  IOException  	199	1	add
330	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  If(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  If(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    If(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  ';'  expected	199	None	add
331	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  >>  0)  {  return  FORMAT_OLDGNU;  }  [CE]  incompatible  types  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  >>  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    if(header.length  >>  0)  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  incompatible  types	199	None	add
332	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  [BUGGY]  0)  {  return  FORMAT_OLDGNU;  }  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  [BUGGY]  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    if(header.length  [BUGGY]  0)  {  return  FORMAT_OLDGNU;  }	  	non-compiled	[CE]  ')'  expected	199	None	add
333	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  ==  0)  {  return  FORMAT_OLDGLNU;  }  [CE]  cannot  find  symbol  FORMAT_OLDGLNU  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  if(header.length  ==  0)  {  return  FORMAT_OLDGLNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    if(header.length  ==  0)  {  return  FORMAT_OLDGLNU;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLDGLNU	199	None	add
334	[BUG]  [BUGGY]  return  header  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	104	None	replace
335	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  /  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  /  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	104	None	replace
336	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  *  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES  *  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES  *  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	104	None	replace
337	[BUG]  [BUGGY]  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [CE]  not  a  statement  [FE]        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	EMPTY_TAR_ARCHIVE_ENTRIES.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	non-compiled	[CE]  not  a  statement	12	None	replace
338	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	12	1	replace
339	[BUG]  [BUGGY]  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	12	1	replace
340	[BUG]  [BUGGY]  if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  cannot  assign  a  value  to  final  variable  length  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	12	None	replace
341	[BUG]  [BUGGY]  if(header  ==  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  cannot  assign  a  value  to  final  variable  length  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	12	None	replace
342	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	12	1	replace
343	[BUG]  [BUGGY]  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length!=  EMPTY_TAR_ARCHIVE_ENTRIES.length)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	compilable	  [FE]  IOException  	12	1	replace
344	[BUG]  [BUGGY]  if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  }  [CE]  cannot  assign  a  value  to  final  variable  length  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  else  {  EMPTY_TAR_ARCHIVE_ENTRIES.length  =  header.length;  }	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    EMPTY_TAR_ARCHIVE_ENTRIES.length;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	12	None	replace
345	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
346	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	28	1	replace
347	[BUG]  [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	28	1	replace
348	[BUG]  [BUGGY]  [FE]  IOException  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	28	1	replace
349	[BUG]  [BUGGY]  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	28	1	replace
350	[BUG]  [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [CE]  variable  DEFAULT_DIR_MODE  might  not  have  been  initialized  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  DEFAULT_DIR_MODE  =  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  variable  DEFAULT_DIR_MODE  might  not  have  been  initialized	28	None	replace
351	[BUG]  [BUGGY]  [FE]  IOException  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE  ||  DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE  ||  DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	28	1	replace
352	[BUG]  [BUGGY]  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE  ||  DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE  ||  DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE  ||  DEFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	28	1	replace
353	[BUG]  [BUGGY]  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [CE]  cannot  find  symbol  deFAULT_DIR_MODE  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(deFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  cannot  find  symbol  deFAULT_DIR_MODE	28	None	replace
354	[BUG]  [BUGGY]  int  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [CE]  variable  DEFAULT_DIR_MODE  might  not  have  been  initialized  [FE]                                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  variable  DEFAULT_DIR_MODE  might  not  have  been  initialized	28	None	replace
355	[BUG]  [BUGGY]  [FE]  IOException  [FE]                                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	28	1	replace
356	[BUG]  [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]                                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	int  DEFAULT_DIR_MODE  =  DEFAULT_FILE_MODE;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	28	1	replace
357	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	          if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	171	None	replace
358	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [CE]  not  a  statement  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;	          if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	171	None	replace
359	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD	          if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	171	None	replace
360	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU	          if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	171	None	replace
361	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	          if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	171	None	replace
362	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	          if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	171	None	replace
363	[BUG]  [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
364	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
365	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
366	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIE;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_ENTRIE  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIE;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIE;	  return    DEFAULT_TAR_ARCHIVE_ENTRIE;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_ENTRIE	20	None	replace
367	[BUG]  [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIE;  [CE]  cannot  find  symbol  result  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  =  DEFAULT_TAR_ARCHIVE_ENTRIE;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  DEFAULT_TAR_ARCHIVE_ENTRIE;	  return    DEFAULT_TAR_ARCHIVE_ENTRIE;    	non-compiled	[CE]  cannot  find  symbol  result	20	None	replace
368	[BUG]  [BUGGY]  result  =  EMPTY_TAR_ARCHIVE_ENTRIE;  [CE]  cannot  find  symbol  result  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  =  EMPTY_TAR_ARCHIVE_ENTRIE;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  EMPTY_TAR_ARCHIVE_ENTRIE;	  return    DEFAULT_TAR_ARCHIVE_ENTRIE;    	non-compiled	[CE]  cannot  find  symbol  result	20	None	replace
369	[BUG]  [BUGGY]  return  header.indexOf(DEFAULT_DIR_MODE);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf(DEFAULT_DIR_MODE);  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf(DEFAULT_DIR_MODE);	  return    header.indexOf(embeddedImage);    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
370	[BUG]  [BUGGY]  return  header.indexOf('n');  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.indexOf('n');  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.indexOf('n');	  return    header.indexOf(embeddedImage);    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
371	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	145	None	replace
372	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDG	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	145	None	replace
373	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	145	None	replace
374	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_LEN,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_LEN,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_LEN,  0))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	145	None	replace
375	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	145	None	replace
376	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  0))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	145	None	replace
377	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	145	None	replace
378	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLD  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLD  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLD	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	91	None	replace
379	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_	  return    0;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  ';'  expected	91	None	replace
380	[BUG]  [BUGGY]  parent  ==  null  ||!ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [CE]  not  a  statement  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null  ||!ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null  ||!ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
381	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
382	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  0))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
383	[BUG]  [BUGGY]  parent  ==  null  ||!ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null  ||!ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null  ||!ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
384	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
385	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  MILLIS_PER_SECOND))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  MILLIS_PER_SECOND))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  MILLIS_PER_SECOND))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
386	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  DEFAULT_PER_SECOND))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  DEFAULT_PER_SECOND))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR,  header,  XSTAR_MAGIC_LEN,  DEFAULT_PER_SECOND))  {  return  FORMAT_OLDGNU;  }	  if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR,    header,    XSTAR_MAGIC_LEN,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	143	None	replace
387	[BUG]  [BUGGY]  result  =  1;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  result  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  =  1;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  =  1;  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  cannot  find  symbol  result	189	None	replace
388	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  DEFAULT_DIR_MODE))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)	189	None	replace
389	[BUG]  [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MILLIS_PER_SECOND))  {  return  FORMAT_OLDGNU;  }  [CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MILLIS_PER_SECOND))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MILLIS_PER_SECOND))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  no  suitable  method  found  for  matchAsciiBuffer(int,byte[],int,int)	189	None	replace
390	[BUG]  [BUGGY]  while(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  while(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	while(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;	  return    1;    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_LEN,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
391	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	compilable	  [FE]  IOException  	72	1	add
392	[BUG]  [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	compilable	  [FE]  IOException  	72	1	add
393	[BUG]  [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  If(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  If(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    If(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	non-compiled	[CE]  ';'  expected	72	None	add
394	[BUG]  [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  int  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  int  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    int  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	non-compiled	[CE]  ';'  expected	72	None	add
395	[BUG]  [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  for(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  not  a  statement  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  for(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    for(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	non-compiled	[CE]  not  a  statement	72	None	add
396	[BUG]  [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
397	[BUG]  [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR  [CE]  <identifier>  expected  [FE]        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	final  EMPTY_TAR_ARCHIVE_ENTRIES.length;  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,  header))  {  return  EMPTY_TAR	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_TAR_ARCHIVE_ENTRIES,    header))    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
398	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
399	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(DEFAULT_DIR_MODE!=  DEFAULT_FILE_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
400	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	193	1	replace
401	[BUG]  [BUGGY]  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(DEFAULT_FILE_MODE!=  DEFAULT_DIR_MODE)  {  return  DEFAULT_DIR_MODE;  }	  return    DEFAULT_DIR_MODE;    if(DEFAULT_DIR_MODE!=    DEFAULT_FILE_MODE)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	193	1	replace
402	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
403	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [CE]  not  a  statement  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
404	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDG	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
405	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
406	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    XSTAR_MAGIC_OFFSET,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
407	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_D  [CE]  ')'  expected  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_D  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_D	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	23	None	replace
408	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAUL  [CE]  ')'  expected  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAUL  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAUL	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	23	None	replace
409	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA  [CE]  ')'  expected  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFA	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	23	None	replace
410	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header  [CE]  ')'  expected  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	23	None	replace
411	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE  [CE]  ')'  expected  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	23	None	replace
412	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_  [CE]  ')'  expected  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	23	None	replace
413	[BUG]  [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR  [CE]  ')'  expected  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  return  DEFAULT_DIR_MODE;  if(deFAULT_DIR_MODE!=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR	  return    DEFAULT_DIR_MODE;    if(deFAULT_DIR_MODE!=    DEFAULT_DIR_MODE)    {    if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,    header,    XSTAR_MAGIC_OFFSET,    XSTAR_MAGIC_LEN))    {    return    DEFA    	non-compiled	[CE]  ')'  expected	23	None	replace
414	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
415	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_FILE_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null)  {  return  DEFAULT_FILE_MODE;  }	  if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	154	1	replace
416	[BUG]  [BUGGY]  if(header  ==  null)  {  return  DEFAULT_FILE_MODE;  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  return  DEFAULT_FILE_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  return  DEFAULT_FILE_MODE;  }	  if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	154	1	replace
417	[BUG]  [BUGGY]  ||  header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header!=  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header!=  null)  {  return  DEFAULT_DIR_MODE;  }	  if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
418	[BUG]  [BUGGY]  ||  header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header  ==  null)  {  return  DEFAULT_DIR_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header  ==  null)  {  return  DEFAULT_DIR_MODE;  }	  if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
419	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_FILE_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=  null)  {  return  DEFAULT_FILE_MODE;  }	  if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	154	1	replace
420	[BUG]  [BUGGY]  if(header!=  null)  {  return  DEFAULT_FILE_MODE;  }  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  return  DEFAULT_FILE_MODE;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  return  DEFAULT_FILE_MODE;  }	  if(header!=    null)    {    return    DEFAULT_DIR_MODE;    }    	compilable	  [FE]  IOException  	154	1	replace
421	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  DEFAULT_DIR_MODE  +  1;  [CE]  not  a  statement  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  DEFAULT_DIR_MODE  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    1;    DEFAULT_DIR_MODE  +  1;	  	non-compiled	[CE]  not  a  statement	51	None	add
422	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    1;    if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	51	None	add
423	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    1;    if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	51	None	add
424	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(deFAULT_DIR_MODE  >=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(deFAULT_DIR_MODE  >=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    1;    if(deFAULT_DIR_MODE  >=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	51	None	add
425	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(DEFAULT_DIR_MODE  >=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(DEFAULT_DIR_MODE  >=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    1;    if(DEFAULT_DIR_MODE  >=  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	51	None	add
426	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  int  DEFAULT_DIR_MODE  +  1;  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  int  DEFAULT_DIR_MODE  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    1;    int  DEFAULT_DIR_MODE  +  1;	  	non-compiled	[CE]  ';'  expected	51	None	add
427	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LE  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LE  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    1;    if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LE	  	non-compiled	[CE]  ')'  expected	51	None	add
428	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [CE]  ';'  expected  [FE]                  IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  +  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAUL  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    +    1;    if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFAUL	  	non-compiled	[CE]  ';'  expected	51	None	add
429	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  MILLIS_PER_SECOND  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  MILLIS_PER_SECOND  +  1;	  return    MILLIS_PER_SECOND;    	compilable	  [FE]  IOException  	5	1	replace
430	[BUG]  [BUGGY]  return  MILLIS_PER_SECOND  +  1;  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  MILLIS_PER_SECOND  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  MILLIS_PER_SECOND  +  1;	  return    MILLIS_PER_SECOND;    	compilable	  [FE]  IOException  	5	1	replace
431	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  MILLIS_PER_SECOND  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  MILLIS_PER_SECOND  -  1;	  return    MILLIS_PER_SECOND;    	compilable	  [FE]  IOException  	5	1	replace
432	[BUG]  [BUGGY]  return  MILLIS_PER_SECOND  -  1;  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  MILLIS_PER_SECOND  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  MILLIS_PER_SECOND  -  1;	  return    MILLIS_PER_SECOND;    	compilable	  [FE]  IOException  	5	1	replace
433	[BUG]  [BUGGY]  if(header.length()  ==  1)  {  return  1;  }  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length()  ==  1)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length()  ==  1)  {  return  1;  }	  if(header.length()    ==    0)    {    return    1;    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
434	[BUG]  [BUGGY]  if(header.length()!=  0)  {  return  1;  }  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length()!=  0)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length()!=  0)  {  return  1;  }	  if(header.length()    ==    0)    {    return    1;    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
435	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  return  FORMAT_OLDGNU;  }  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length()  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length()  ==  0)  {  return  FORMAT_OLDGNU;  }	  if(header.length()    ==    0)    {    return    1;    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
436	[BUG]  [BUGGY]  if(header.length()  ==  2)  {  return  1;  }  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length()  ==  2)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length()  ==  2)  {  return  1;  }	  if(header.length()    ==    0)    {    return    1;    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
437	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  return  2;  }  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length()  ==  0)  {  return  2;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length()  ==  0)  {  return  2;  }	  if(header.length()    ==    0)    {    return    1;    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
438	[BUG]  [BUGGY]  if(header.length()!=  1)  {  return  1;  }  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length()!=  1)  {  return  1;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length()!=  1)  {  return  1;  }	  if(header.length()    ==    0)    {    return    1;    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
439	[BUG]  [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null  ||  header.length  ==  0)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
440	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
441	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
442	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  <  2)  {  if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,  header,  0))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header!=    null)    {    if(ArchiveUtils.matchAsciiBuffer(EMPTY_OLDGNU,    header,    0))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
443	[BUG]  [BUGGY]  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
444	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
445	[BUG]  [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
446	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header  ==  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
447	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null  ||  header.length  ==  0)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
448	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  2)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length  ==  2)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
449	[BUG]  [BUGGY]  if(header.length  ==  2)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  2)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  2)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
450	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  1)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length  ==  1)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
451	[BUG]  [BUGGY]  if(header.length  ==  1)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  1)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  1)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
452	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
453	[BUG]  [BUGGY]  if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length!=  0)  {  return  FORMAT_OLDGNU;  }	  if(header.length    ==    0)    {    return    FORMAT_OLDGNU;    }    	compilable	  [FE]  IOException  	200	1	replace
454	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
455	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
456	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
457	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(MAX_OLDGNU,    header,    MAGICLEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
458	[BUG]  [BUGGY]  ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
459	[BUG]  [BUGGY]  result.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [CE]  not  a  statement  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	non-compiled	[CE]  not  a  statement	73	None	replace
460	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	compilable	  [FE]  IOException  	73	1	replace
461	[BUG]  [BUGGY]  if(header.length  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length  ==  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	compilable	  [FE]  IOException  	73	1	replace
462	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null  ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header!=  null  ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	compilable	  [FE]  IOException  	73	1	replace
463	[BUG]  [BUGGY]  if(header!=  null  ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null  ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null  ||  header.length  >  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	compilable	  [FE]  IOException  	73	1	replace
464	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	if(header.length!=  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	compilable	  [FE]  IOException  	73	1	replace
465	[BUG]  [BUGGY]  if(header.length!=  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header.length!=  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header.length!=  0)  {  return  EMPTY_TAR_ARCHIVE_ENTRIES.length;  }	  if(header.length    >    0)    {    return    EMPTY_TAR_ARCHIVE_ENTRIES.length;    }    	compilable	  [FE]  IOException  	73	1	replace
466	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,    header,    ERROR_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
467	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,    header,    ERROR_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
468	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,    header,    ERROR_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
469	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,    header,    ERROR_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
470	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,    header,    ERROR_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
471	[BUG]  [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,    header,    ERROR_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
472	[BUG]  [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(header!=  null)  {  if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,  header,  ERROR_LEN))  {  return  FORMAT_OLDGNU;  }	  return    0;    if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(ERROR_OLDGNU,    header,    ERROR_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
473	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  int  DEFAULT_DIR_MODE  -  1;  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  int  DEFAULT_DIR_MODE  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    -    1;    int  DEFAULT_DIR_MODE  -  1;	  	non-compiled	[CE]  ';'  expected	53	None	add
474	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  DEFAULT_DIR_MODE  -  1;  [CE]  not  a  statement  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  DEFAULT_DIR_MODE  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    -    1;    DEFAULT_DIR_MODE  -  1;	  	non-compiled	[CE]  not  a  statement	53	None	add
475	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    -    1;    if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	53	None	add
476	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    -    1;    if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	53	None	add
477	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(DEFAULT_DIR_MODE  >  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFA  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(DEFAULT_DIR_MODE  >  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFA  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    -    1;    if(DEFAULT_DIR_MODE  >  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFA	  	non-compiled	[CE]  ';'  expected	53	None	add
478	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(DEFAULT_DIR_MODE  >  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFAULT_D  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(DEFAULT_DIR_MODE  >  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFAULT_D  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    -    1;    if(DEFAULT_DIR_MODE  >  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  DEFAULT_D	  	non-compiled	[CE]  ';'  expected	53	None	add
479	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAG  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    -    1;    if(deFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAG	  	non-compiled	[CE]  ')'  expected	53	None	add
480	[BUG]  [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAG  [CE]  ')'  expected  [FE]                  IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_DIR_MODE  -  1;  if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAG  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return    DEFAULT_DIR_MODE    -    1;    if(DEFAULT_DIR_MODE  ==  DEFAULT_DIR_MODE)  {  if(ArchiveUtils.matchAsciiBuffer(DEFAULT_DIR_MODE,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAG	  	non-compiled	[CE]  ')'  expected	53	None	add
481	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
482	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                        IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent!=  null  &&  parent.equals(header))  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
483	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [CE]  not  a  statement  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
484	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [CE]  not  a  statement  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
485	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [CE]  not  a  statement  [FE]                              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLD	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
486	[BUG]  [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [CE]  not  a  statement  [FE]                                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	parent  ==  null)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }	          if(header    ==    null)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  not  a  statement	37	None	replace
487	[BUG]  [BUGGY]  return  header.length  -  EMPTY_TAR_ARCHIVE_ENTRIES;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  EMPTY_TAR_ARCHIVE_ENTRIES;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  -  EMPTY_TAR_ARCHIVE_ENTRIES;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	135	None	replace
488	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  header.length  -  EMPTY_TAR_ARCHIVE_ENTRIES.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
489	[BUG]  [BUGGY]  return  header.length  -  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header.length  -  EMPTY_TAR_ARCHIVE_ENTRIES.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header.length  -  EMPTY_TAR_ARCHIVE_ENTRIES.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
490	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
491	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  1;  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
492	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  +  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
493	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  +  1;  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  +  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
494	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  2;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
495	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  2;  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  header.length  -  2;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
496	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
497	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  header.length;  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    header.length;    	compilable	  [FE]  IOException  	135	1	replace
498	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  2;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    1;    	compilable	  [FE]  IOException  	69	1	replace
499	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  2;  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  2;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  2;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    1;    	compilable	  [FE]  IOException  	69	1	replace
500	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    1;    	compilable	  [FE]  IOException  	69	1	replace
501	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  1;  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  /  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    1;    	compilable	  [FE]  IOException  	69	1	replace
502	[BUG]  [BUGGY]  result  -=  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1;  [CE]  cannot  find  symbol  result  [FE]        IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  result  -=  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	result  -=  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  result	69	None	replace
503	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1  +  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	add	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1  +  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    1;    	compilable	  [FE]  IOException  	69	1	replace
504	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1  +  header.length;  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1  +  header.length;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_ENTRIES.length  -  1  +  header.length;	  return    EMPTY_TAR_ARCHIVE_ENTRIES.length    -    1;    	compilable	  [FE]  IOException  	69	1	replace
505	[BUG]  [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  /  1;  [CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  DEFAULT_TAR_ARCHIVE_ENTRIES  /  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  DEFAULT_TAR_ARCHIVE_ENTRIES  /  1;	  return    DEFAULT_TAR_ARCHIVE_ENTRIES    -    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TAR_ARCHIVE_ENTRIES	8	None	replace
506	[BUG]  [BUGGY]  if(checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(!checkSumOK)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
507	[BUG]  [BUGGY]  if(!checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(!checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(!checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(!checkSumOK)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
508	[BUG]  [BUGGY]  if(checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_OLDGNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(!checkSumOK)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
509	[BUG]  [BUGGY]  if(checkSumOperator)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOperator)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(checkSumOperator)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(!checkSumOK)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
510	[BUG]  [BUGGY]  if(checkSumOk)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOk)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(checkSumOk)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(!checkSumOK)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
511	[BUG]  [BUGGY]  if(checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  if(checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	if(checkSumOK)  {  if(ArchiveUtils.matchAsciiBuffer(XSTAR_GNU,  header,  XSTAR_MAGIC_LEN))  {  return  FORMAT_OLDGNU;  }	  return    1;    if(!checkSumOK)    {    if(ArchiveUtils.matchAsciiBuffer(XSTAR_MAGIC_OFFSET,    header,    XSTAR_MAGIC_LEN))    {    return    FORMAT_OLDGNU;    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
512	[BUG]  [BUGGY]  return  header  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  header  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  header  +  1;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
513	[BUG]  [BUGGY]  return  EMPTY_TAR_ARCHIVE_LEN  +  1;  [CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_LEN  [FE]                            IOException      [CONTEXT]      private  int  evaluateType(final  byte[]  header)  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU,  header,  MAGIC_OFFSET,  MAGICLEN))  {  return  FORMAT_OLDGNU;  }  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX,  header,  MAGIC_OFFSET,  MAGICLEN))  {  if  (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR,  header,  XSTAR_MAGIC_OFFSET,  XSTAR_MAGIC_LEN))  {  return  FORMAT_XSTAR;  }      [BUGGY]  return  EMPTY_TAR_ARCHIVE_LEN  +  1;  [BUGGY]      }  return  0;  }  [CLASS]  TarArchiveEntry  [METHOD]  evaluateType  [RETURN_TYPE]  int  final  byte[]  header  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  osname  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  colon  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1226	1226	1	replace	return  EMPTY_TAR_ARCHIVE_LEN  +  1;	  return    EMPTY_TAR_ARCHIVE_EXPRESSION    +    1;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_TAR_ARCHIVE_LEN	6	None	replace
