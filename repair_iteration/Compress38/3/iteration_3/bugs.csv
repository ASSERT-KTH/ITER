bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name!=    null    ||!name.endsWith(   "/   "))    {    if  (name!=  null  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
2	[BUG]  [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name!=    null    ||!name.endsWith(   "/   "))    {    if  (name!=  null  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
3	[BUG]  [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name!=    null    ||!name.endsWith(   "/   "))    {    if  (name  ==  null  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
4	[BUG]  [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name!=    null    ||!name.endsWith(   "/   "))    {    if  (name  ==  null  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
5	[BUG]  [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name!=    null    ||!name.endsWith(   "/   "))    {    if  (name!=  null  ||!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
6	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
7	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
8	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
9	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
10	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
11	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
12	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
13	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".js   "))    {    if(name!=  null  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
14	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  if(name  ==  null  &&!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  if(name  ==  null  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".js   "))    {    if(name  ==  null  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
15	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&!name.endsWith(. ".js   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&!name.endsWith(. ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".js   "))    {    if(name!=  null  &&!name.endsWith(. ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
16	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&!name.startsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&!name.startsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".js   "))    {    if(name!=  null  &&!name.startsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
17	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  If(name!=  null  &&!name.endsWith( ".js   "))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".js   "))  {  If(name!=  null  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".js   "))    {    If(name!=  null  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  	147	None	add
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( "/.js "))  {	  if    (!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	152	6	replace
19	[BUG]  [BUGGY]  if  (!name.endsWith( "/.js "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( "/.js "))  {	  if    (!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	152	6	replace
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( ".java "))  {	  if    (!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	152	6	replace
21	[BUG]  [BUGGY]  if  (!name.endsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( ".java "))  {	  if    (!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	152	6	replace
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&!name.endsWith( ".js "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
23	[BUG]  [BUGGY]  if(prefix!=  null  &&!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&!name.endsWith( ".js "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( "/.js "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
25	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( "/.js "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( "/.js "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||!name.endsWith( ".js "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
27	[BUG]  [BUGGY]  if(name!=  null  ||!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||!name.endsWith( ".js "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
28	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
29	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
30	[BUG]  [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  oldStyle);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  oldStyle);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  oldStyle);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
31	[BUG]  [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  ComparisonFailure  	26	6	replace
33	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  ComparisonFailure  	26	6	replace
34	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.endsWith( ".prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.endsWith( ".prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&!name.endsWith( ".prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
35	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name  ==  null  &&!name.endsWith( ".prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name  ==  null  &&!name.endsWith( ".prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    if(name  ==  null  &&!name.endsWith( ".prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
36	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.endsWith(. "prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.endsWith(. "prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&!name.endsWith(. "prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
37	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.startsWith( ".prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.startsWith( ".prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&!name.startsWith( ".prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
38	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  If(name!=  null  &&!name.endsWith( ".prototype.   "))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  If(name!=  null  &&!name.endsWith( ".prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    If(name!=  null  &&!name.endsWith( ".prototype.   "))  {	  	non-compiled	[CE]  	149	None	add
39	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
40	[BUG]  [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
41	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
42	[BUG]  [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
44	[BUG]  [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
45	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  ||  prefix.length()  ==  0)  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
46	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  prefix.length()  ==  0)  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
48	[BUG]  [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
50	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
52	[BUG]  [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [FE]  ComparisonFailure  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	35	6	replace
53	[BUG]  [BUGGY]  encoding  =  encoding.intermediateName(prefix);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.intermediateName(prefix);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intermediateName(prefix);	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
54	[BUG]  [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  PREFIXLEN);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  PREFIXLEN);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  TarUtils.parseName(header,  offset,  PREFIXLEN);	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
55	[BUG]  [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
56	[BUG]  [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
57	[BUG]  [BUGGY]  encoding  =  encoding.intermediateInterface();  [CE]  class,  interface,  or  enum  expected  [FE]                                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.intermediateInterface();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intermediateInterface();	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
58	[BUG]  [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  prefix);  [CE]  class,  interface,  or  enum  expected  [FE]                                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  prefix);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  TarUtils.parseName(header,  offset,  prefix);	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
59	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
60	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
61	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
62	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
63	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
64	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.equals( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.equals( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.equals( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
65	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (prefix!=  null  ||!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (prefix!=  null  ||!prefix.endsWith( "/   "))  {	  if    (name!=    null    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	114	6	replace
67	[BUG]  [BUGGY]  if  (prefix!=  null  ||!prefix.endsWith( "/   "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (prefix!=  null  ||!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (prefix!=  null  ||!prefix.endsWith( "/   "))  {	  if    (name!=    null    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	114	6	replace
68	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
69	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
70	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
71	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "/   "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	153	1	replace
72	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "/   "))  {  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "/   "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	153	1	replace
73	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
74	[BUG]  [BUGGY]  if(prefix.length()  >  0)  {  If  (!name.endsWith( "/ "))  {  [CE]  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix.length()  >  0)  {  If  (!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix.length()  >  0)  {  If  (!name.endsWith( "/ "))  {	  if    (!name.endsWith(       "/       "))    {    If    (!name.endsWith(       "/       "))    {    	non-compiled	[CE]  	133	None	replace
75	[BUG]  [BUGGY]  if(name.length()  >  0)  {  If  (!name.endsWith( "/ "))  {  [CE]  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  If  (!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  If  (!name.endsWith( "/ "))  {	  if    (!name.endsWith(       "/       "))    {    If    (!name.endsWith(       "/       "))    {    	non-compiled	[CE]  	133	None	replace
76	[BUG]  [BUGGY]  If  (!name.endsWith( "/ "))  {  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  If  (!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	If  (!name.endsWith( "/ "))  {	  if    (!name.endsWith(       "/       "))    {    If    (!name.endsWith(       "/       "))    {    	non-compiled	[CE]  	133	None	replace
77	[BUG]  [BUGGY]  if(prefix.length()  >  0)  {  if  (!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix.length()  >  0)  {  if  (!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix.length()  >  0)  {  if  (!name.endsWith( "/   "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
78	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!name.endsWith( "/   "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
79	[BUG]  [BUGGY]  if(name!=  null)  {  if  (!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if  (!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if  (!name.endsWith( "/ "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
80	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
81	[BUG]  [BUGGY]  if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( "/   "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (prefix!=  null  &&!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (prefix!=  null  &&!prefix.endsWith( "/   "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
83	[BUG]  [BUGGY]  if  (prefix!=  null  &&!prefix.endsWith( "/   "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (prefix!=  null  &&!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (prefix!=  null  &&!prefix.endsWith( "/   "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
84	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!prefix.startsWith( "/ "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
85	[BUG]  [BUGGY]  if  (!prefix.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!prefix.startsWith( "/ "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
86	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.endsWith( "/ ")||  prefix.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!prefix.endsWith( "/ ")||  prefix.endsWith( "/ "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
87	[BUG]  [BUGGY]  if  (!prefix.endsWith( "/ ")||  prefix.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.endsWith( "/ ")||  prefix.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!prefix.endsWith( "/ ")||  prefix.endsWith( "/ "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
88	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!prefix.equals( "/ "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
89	[BUG]  [BUGGY]  if  (!prefix.equals( "/ "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!prefix.equals( "/ "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
90	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  ||!name.endsWith( ".js "))  {	  if    (!isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	132	6	replace
91	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  ||!name.endsWith( ".js "))  {	  if    (!isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	132	6	replace
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  &&!name.endsWith( "/.js "))  {	  if    (!isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	132	6	replace
93	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith( "/.js "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  &&!name.endsWith( "/.js "))  {	  if    (!isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	132	6	replace
94	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   ".js   "))  {  if  (!isDirectory()  &&!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   ".js   "))  {  if  (!isDirectory()  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   ".js   "))    {    if  (!isDirectory()  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	131	None	add
95	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   ".js   "))  {  if  (!isDirectory()  &&!name.endsWith(. ".js   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   ".js   "))  {  if  (!isDirectory()  &&!name.endsWith(. ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   ".js   "))    {    if  (!isDirectory()  &&!name.endsWith(. ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	131	None	add
96	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   ".js   "))  {  If  (!isDirectory()  &&!name.endsWith( ".js   "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   ".js   "))  {  If  (!isDirectory()  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   ".js   "))    {    If  (!isDirectory()  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  	131	None	add
97	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.'))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.'))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
98	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.'))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.'))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
99	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.'))  {  [CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith('.'))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('./       "))    {    	non-compiled	[CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;	129	None	replace
100	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('./       "))    {    	compilable	  [FE]  IOException  	129	1	replace
101	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "./ "))  {  [FE]  IOException  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!prefix.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('./       "))    {    	compilable	  [FE]  IOException  	129	1	replace
102	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('./       "))    {    	compilable	  [FE]  IOException  	129	1	replace
103	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('./       "))    {    	compilable	  [FE]  IOException  	129	1	replace
104	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    	compilable	  [FE]  IOException  	118	1	replace
105	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    	compilable	  [FE]  IOException  	118	1	replace
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    	compilable	  [FE]  ComparisonFailure  	118	6	replace
107	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/. "))  {  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    	compilable	  [FE]  ComparisonFailure  	118	6	replace
108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    	compilable	  [FE]  ComparisonFailure  	118	6	replace
109	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/. "))  {  [FE]  ComparisonFailure  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    	compilable	  [FE]  ComparisonFailure  	118	6	replace
110	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
111	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
112	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
113	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
114	[BUG]  [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
115	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
116	[BUG]  [BUGGY]  Preconditions.checkState(encoding!=  oldStyle);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(encoding!=  oldStyle);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(encoding!=  oldStyle);	  Preconditions.checkState(oldStyle!=    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkState(prefix!=  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(prefix!=  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(prefix!=  encoding);	  Preconditions.checkState(oldStyle!=    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle!=  encoding,  checkSumOK);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(oldStyle!=  encoding,  checkSumOK);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle!=  encoding,  checkSumOK);	  Preconditions.checkState(oldStyle!=    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  checkSumOK);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  checkSumOK);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle  ==  encoding,  checkSumOK);	  Preconditions.checkState(oldStyle!=    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  false);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle  ==  encoding,  false);	  Preconditions.checkState(oldStyle!=    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
121	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
122	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
123	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
124	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
125	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  prefix.length()  ==  0)  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  ComparisonFailure  	83	6	replace
127	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  ComparisonFailure  	83	6	replace
128	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  IOException  	83	1	replace
129	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  IOException  	83	1	replace
130	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  IOException  	83	1	replace
131	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  IOException  	83	1	replace
132	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
133	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
134	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  checkSumOK);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  checkSumOK);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  checkSumOK);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
135	[BUG]  [BUGGY]  final  String  name  =  prefix.getName();  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix.getName();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix.getName();	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
136	[BUG]  [BUGGY]  final  String  name  =  encoding.getName()  + "/ ";  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  encoding.getName()  + "/ ";  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  encoding.getName()  + "/ ";	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
137	[BUG]  [BUGGY]  final  String  name  =  encoding.getName()  + ": ";  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  encoding.getName()  + ": ";  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  encoding.getName()  + ": ";	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
138	[BUG]  [BUGGY]  final  String  name  =  encoding.getSimpleName();  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  encoding.getSimpleName();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  encoding.getSimpleName();	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
139	[BUG]  [BUGGY]  final  String  name  =  encoding.getQualifiedName();  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  encoding.getQualifiedName();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  encoding.getQualifiedName();	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
140	[BUG]  [BUGGY]  final  String  name  =  oldStyle.getName();  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle.getName();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle.getName();	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
141	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
142	[BUG]  [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
143	[BUG]  [BUGGY]  if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.startsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
144	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (isDirectory()  ||!name.startsWith( "/   "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
145	[BUG]  [BUGGY]  if(prefix!=  null)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
146	[BUG]  [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if  (isDirectory()  ||!name.startsWith( "/   "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
147	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
148	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.endsWith( "./   ")||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.endsWith( "./   ")||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    if  (!name.endsWith( "./   ")||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
149	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.endsWith(   "/   ")||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.endsWith(   "/   ")||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    if  (!name.endsWith(   "/   ")||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
150	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
151	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
152	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( ")/   "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
153	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
154	[BUG]  [BUGGY]  if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.endsWith( ")/ "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.endsWith( ")/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.endsWith( ")/ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
155	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||  prefix.length()  ==  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	137	6	replace
156	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||  prefix.length()  ==  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	137	6	replace
157	[BUG]  [BUGGY]  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  prefix.length()  >  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
158	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  >  0)  {  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  prefix.length()  >  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
159	[BUG]  [BUGGY]  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  prefix.length()!=  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
160	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()!=  0)  {  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  prefix.length()!=  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
161	[BUG]  [BUGGY]  [FE]  IOException  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  prefix.length()!=  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
162	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  [FE]  IOException  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()!=  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
163	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
164	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  IOException  	84	1	replace
165	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  IOException  	84	1	replace
166	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
167	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
168	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
169	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
170	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "./       "))    {    	compilable	  [FE]  IOException  	13	1	replace
171	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "./       "))    {    	compilable	  [FE]  IOException  	13	1	replace
172	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;	124	None	replace
173	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
174	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||  isDirectory()  &&!name.endsWith('/'))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;	124	None	replace
175	[BUG]  [BUGGY]  [FE]  IOException  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  IOException  	124	1	replace
176	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [FE]  IOException  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  IOException  	124	1	replace
177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	124	6	replace
178	[BUG]  [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	124	6	replace
179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	124	6	replace
180	[BUG]  [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	124	6	replace
181	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
182	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
183	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
184	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith('/'))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
185	[BUG]  [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith('/'))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
186	[BUG]  [BUGGY]  if(name  ==  null)  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null)  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null)  {  if  (isDirectory()  ||!name.endsWith('/'))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
187	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  ==  0)  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  ==  0)  {  if  (isDirectory()  ||!name.endsWith('/'))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
188	[BUG]  [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
189	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  ||!name.startsWith( "/ "))  {	  if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	93	6	replace
190	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  ||!name.startsWith( "/ "))  {	  if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	93	6	replace
191	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  &&!name.equals( "/ "))  {	  if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	93	6	replace
192	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.equals( "/ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  &&!name.equals( "/ "))  {	  if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	93	6	replace
193	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  &&!name.startsWith( "./ "))  {	  if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	93	5	replace
194	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.startsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  &&!name.startsWith( "./ "))  {	  if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	93	5	replace
195	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
196	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
197	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
198	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
199	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
200	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  Prefix):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  Prefix):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  Prefix):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
201	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
202	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
203	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
204	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
205	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
206	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
207	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./.   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
208	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
209	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "/.   "))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "/.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "/.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
210	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  if  (isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  if  (isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "./   "))    {    if  (isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
211	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  if  (isDirectory()  ||!name.endsWith(. "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  if  (isDirectory()  ||!name.endsWith(. "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "./   "))    {    if  (isDirectory()  ||!name.endsWith(. "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
212	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  If  (isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  If  (isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "./   "))    {    If  (isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  	86	None	add
213	[BUG]  [BUGGY]  if(prefix.length()  >  0)  {  if  (!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix.length()  >  0)  {  if  (!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix.length()  >  0)  {  if  (!name.endsWith( "./ "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
214	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!name.endsWith( "./ "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
215	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
216	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
217	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".js   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
218	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
219	[BUG]  [BUGGY]  encoding.encode(header,  offset);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.encode(header,  offset);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(header,  offset);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
220	[BUG]  [BUGGY]  encoding.encode(buffer,  header);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.encode(buffer,  header);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(buffer,  header);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
221	[BUG]  [BUGGY]  encoding.encode(header,  0,  header.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.encode(header,  0,  header.length);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(header,  0,  header.length);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
222	[BUG]  [BUGGY]  encoding.encode(buffer,  offset,  header);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.encode(buffer,  offset,  header);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(buffer,  offset,  header);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
223	[BUG]  [BUGGY]  encoding.encode(header,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.encode(header,  false);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(header,  false);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
224	[BUG]  [BUGGY]  encoding.encode(file,  header);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.encode(file,  header);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(file,  header);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
225	[BUG]  [BUGGY]  encoding.encode(header,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.encode(header,  true);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(header,  true);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
226	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( ",/ "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( ",/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( ",/ "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
227	[BUG]  [BUGGY]  if(oldStyle)  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(oldStyle)  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(oldStyle)  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
228	[BUG]  [BUGGY]  if(oldStyle)  {  if  (!isDirectory()  &&!name.endsWith( ",/ "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(oldStyle)  {  if  (!isDirectory()  &&!name.endsWith( ",/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(oldStyle)  {  if  (!isDirectory()  &&!name.endsWith( ",/ "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
229	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.zip "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    	compilable	  [FE]  IOException  	30	1	replace
230	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.zip "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.zip "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    	compilable	  [FE]  IOException  	30	1	replace
231	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".zip "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    	compilable	  [FE]  ComparisonFailure  	30	6	replace
232	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".zip "))  {  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".zip "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    	compilable	  [FE]  ComparisonFailure  	30	6	replace
233	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
234	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	22	6	replace
236	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	22	6	replace
237	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	22	6	replace
238	[BUG]  [BUGGY]  if(prefix!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	22	6	replace
239	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  IOException  	146	1	replace
240	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  IOException  	146	1	replace
241	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".prototype. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	146	6	replace
242	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".prototype. "))  {  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".prototype. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	146	6	replace
243	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.prototype. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  IOException  	146	1	replace
244	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.prototype. "))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.prototype. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  IOException  	146	1	replace
245	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  IOException  	85	1	replace
246	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  IOException  	85	1	replace
247	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
248	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( "./ "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
249	[BUG]  [BUGGY]  if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( "./ "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
250	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
251	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
252	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
253	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
254	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
255	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
256	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
257	[BUG]  [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
258	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
259	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
260	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
261	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
262	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
263	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
264	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
265	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  ||!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
266	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
267	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
268	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  if  (!isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  if  (!isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "./   "))    {    if  (!isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
269	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  if  (!isDirectory()  &&!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  if  (!isDirectory()  &&!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "./   "))    {    if  (!isDirectory()  &&!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
270	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  If  (!isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  If  (!isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "./   "))    {    If  (!isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  	90	None	add
271	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
272	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
273	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  ||!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
274	[BUG]  [BUGGY]  if(prefix.length()  >  0)  {  if  (!name.endsWith( ". "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix.length()  >  0)  {  if  (!name.endsWith( ". "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix.length()  >  0)  {  if  (!name.endsWith( ". "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
275	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!name.endsWith( ". "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!name.endsWith( ". "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!name.endsWith( ". "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
276	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  IOException  	40	1	replace
277	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  IOException  	40	1	replace
278	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  ||!name.startsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	40	6	replace
279	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  ||!name.startsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	40	6	replace
280	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.equals( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  IOException  	40	1	replace
281	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.equals( "/ "))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.equals( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    	compilable	  [FE]  IOException  	40	1	replace
282	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
283	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
284	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
285	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
286	[BUG]  [BUGGY]  Preconditions.checkState(encoding  ==  oldStyle);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(encoding  ==  oldStyle);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(encoding  ==  oldStyle);	  Preconditions.checkState(oldStyle    ==    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkState(prefix  ==  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(prefix  ==  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(prefix  ==  encoding);	  Preconditions.checkState(oldStyle    ==    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
288	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  true);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle  ==  encoding,  true);	  Preconditions.checkState(oldStyle    ==    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
289	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	75	1	replace
290	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	75	1	replace
291	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
292	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
293	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
294	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
295	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
296	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
297	[BUG]  [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
298	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
299	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
300	[BUG]  [BUGGY]  [FE]  IOException  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name!=  null  &&  name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  name!=  null  &&  name.endsWith( "/   "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  IOException  	68	1	replace
301	[BUG]  [BUGGY]  if(name!=  null  &&  name!=  null  &&  name.endsWith( "/   "))  {  [FE]  IOException  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name!=  null  &&  name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  name!=  null  &&  name.endsWith( "/   "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  IOException  	68	1	replace
302	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
303	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;	123	None	replace
304	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  IOException  	42	1	replace
305	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  IOException  	42	1	replace
306	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	42	6	replace
307	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	42	6	replace
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	38	6	replace
309	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	38	6	replace
310	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  IOException  	127	1	replace
311	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  IOException  	127	1	replace
312	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	127	6	replace
313	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  ||!name.endsWith( ".java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	127	6	replace
314	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!name.endsWith('/'))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
315	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
316	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
317	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
318	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
319	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
320	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
321	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
322	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
323	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
324	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  If(name!=  null  &&!name.endsWith( "/   "))  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  If(name!=  null  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    If(name!=  null  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  	111	None	add
325	[BUG]  [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.startsWith(   "/   "))    {    if  (!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
326	[BUG]  [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.startsWith(   "/   "))    {    if  (!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
327	[BUG]  [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.startsWith(   "/   "))    {    if  (!name.startsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
328	[BUG]  [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.startsWith(   "/   "))    {    if  (!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
329	[BUG]  [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.startsWith(   "/   "))    {    if  (!name.startsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	5	None	add
330	[BUG]  [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.startsWith( ",/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.startsWith(   "/   "))    {    if  (!name.startsWith( ",/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
331	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith('/'))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
332	[BUG]  [BUGGY]  if(name!=  null)  {  if  (!isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if  (!isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if  (!isDirectory()  &&!name.endsWith('/'))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
333	[BUG]  [BUGGY]  if(name!=  null)  {  if  (!isDirectory()  &&!name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if  (!isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if  (!isDirectory()  &&!name.endsWith( ".jpg "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
334	[BUG]  [BUGGY]  if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( ".zip "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( ".zip "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
335	[BUG]  [BUGGY]  if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
336	[BUG]  [BUGGY]  if(name  ==  null)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
337	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    prefix.length()    ==    0)    {    if(name  ==  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
338	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    prefix.length()    ==    0)    {    if(name!=  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
339	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    prefix.length()    ==    0)    {    if(name  ==  null  ||  prefix.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
340	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    prefix.length()    ==    0)    {    if(name  ==  null  ||  prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
341	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  If(name  ==  null  ||  prefix.length()  ==  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  If(name  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    prefix.length()    ==    0)    {    If(name  ==  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	136	None	add
342	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    prefix.length()    ==    0)    {    if(name  ==  null  ||  name.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
343	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  >=  null  ||  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  >=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    prefix.length()    ==    0)    {    if(name  >=  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
344	[BUG]  [BUGGY]  if(!name.endsWith( "/ "))  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( "/ "))  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!name.endsWith( "/ "))  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    If    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  	72	None	replace
345	[BUG]  [BUGGY]  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	If  (isDirectory()  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    If    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  	72	None	replace
346	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  ==  0)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  ==  0)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    If    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  	72	None	replace
347	[BUG]  [BUGGY]  if(name.length()  >  0)  {  If  (isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  If  (isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  If  (isDirectory()  ||!name.endsWith( "/   "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    If    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  	72	None	replace
348	[BUG]  [BUGGY]  if(name!=  null)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    If    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  	72	None	replace
349	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (prefix  ==  null  ||!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (prefix  ==  null  ||!prefix.endsWith( "/   "))  {	  if    (name    ==    null    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	116	6	replace
350	[BUG]  [BUGGY]  if  (prefix  ==  null  ||!prefix.endsWith( "/   "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (prefix  ==  null  ||!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (prefix  ==  null  ||!prefix.endsWith( "/   "))  {	  if    (name    ==    null    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	116	6	replace
351	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	36	6	replace
352	[BUG]  [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  isDirectory()  &&!prefix.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	36	6	replace
353	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	36	6	replace
354	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	36	6	replace
355	[BUG]  [BUGGY]  final  String  name  =  header.getName()  + "/ ";  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header.getName()  + "/ ";  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header.getName()  + "/ ";	  final    String    name    =    header.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
356	[BUG]  [BUGGY]  final  String  name  =  header.getSimpleName();  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header.getSimpleName();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header.getSimpleName();	  final    String    name    =    header.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
357	[BUG]  [BUGGY]  final  String  name  =  header.getName()  + ": ";  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header.getName()  + ": ";  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header.getName()  + ": ";	  final    String    name    =    header.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
358	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(prefix)||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith(prefix)||!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
359	[BUG]  [BUGGY]  if  (!name.endsWith(prefix)||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(prefix)||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith(prefix)||!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
360	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "./ ")||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( "./ ")||!name.endsWith( "./ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
361	[BUG]  [BUGGY]  if  (!name.endsWith( "./ ")||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "./ ")||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( "./ ")||!name.endsWith( "./ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
362	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "/ ")||!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( "/ ")||!name.startsWith( "/ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
363	[BUG]  [BUGGY]  if  (!name.endsWith( "/ ")||!name.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "/ ")||!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( "/ ")||!name.startsWith( "/ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
364	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "/ ")&&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( "/ ")&&!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
365	[BUG]  [BUGGY]  if  (!name.endsWith( "/ ")&&!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "/ ")&&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( "/ ")&&!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
366	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith( "/ ")||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.startsWith( "/ ")||!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
367	[BUG]  [BUGGY]  if  (!name.startsWith( "/ ")||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith( "/ ")||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.startsWith( "/ ")||!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
368	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(!isDirectory()  &&!name.endsWith( ".zip "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	121	6	replace
369	[BUG]  [BUGGY]  if(!isDirectory()  &&!name.endsWith( ".zip "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!isDirectory()  &&!name.endsWith( ".zip "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	121	6	replace
370	[BUG]  [BUGGY]  if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( ".js "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if(!isDirectory()  &&!name.endsWith( ".js "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
371	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!isDirectory()  &&!name.endsWith( ".jar "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(!isDirectory()  &&!name.endsWith( ".jar "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	121	6	replace
372	[BUG]  [BUGGY]  if(!isDirectory()  &&!name.endsWith( ".jar "))  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!isDirectory()  &&!name.endsWith( ".jar "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!isDirectory()  &&!name.endsWith( ".jar "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	121	6	replace
373	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||  prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	109	6	replace
374	[BUG]  [BUGGY]  if(name!=  null  ||  prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||  prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	109	6	replace
375	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
376	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
377	[BUG]  [BUGGY]  final  String  name  =  prefix  ||  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ||  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ||  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
378	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
379	[BUG]  [BUGGY]  if(name!=  null)  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
380	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(.   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
381	[BUG]  [BUGGY]  if  (!name.endsWith(   ".prototype   "))  {  if  (!name.endsWith(   ".prototype   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   ".prototype   "))  {  if  (!name.endsWith(   ".prototype   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   ".prototype   "))    {    if  (!name.endsWith(   ".prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
382	[BUG]  [BUGGY]  if  (!name.endsWith(   ".prototype   "))  {  if  (!name.endsWith(. ".prototype   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   ".prototype   "))  {  if  (!name.endsWith(. ".prototype   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   ".prototype   "))    {    if  (!name.endsWith(. ".prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
383	[BUG]  [BUGGY]  if  (!name.endsWith(   ".prototype   "))  {  If  (!name.endsWith(   ".prototype   "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   ".prototype   "))  {  If  (!name.endsWith(   ".prototype   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   ".prototype   "))    {    If  (!name.endsWith(   ".prototype   "))  {	  	non-compiled	[CE]  	9	None	add
384	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
385	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
386	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".zip   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".zip   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".zip   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
387	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "zip   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "zip   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "zip   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
388	[BUG]  [BUGGY]  if(oldStyle)  {  if  (!isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(oldStyle)  {  if  (!isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(oldStyle)  {  if  (!isDirectory()  &&!name.endsWith( "./ "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
389	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  if  (!isDirectory()  &&!name.endsWith( ")/   "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
390	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
391	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
392	[BUG]  [BUGGY]  if(prefix!=  null)  {  if  (!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  if  (!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null)  {  if  (!name.endsWith( "/   "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
393	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    if  (!isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
394	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    if  (!isDirectory()  &&!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
395	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    if  (!isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
396	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    if  (!isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
397	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  If  (!isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  If  (!isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    If  (!isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  	92	None	add
398	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
399	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
400	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
401	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
402	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
403	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
404	[BUG]  [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.endsWith(   "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.endsWith(   "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "./   "))    {    if  (!name.endsWith(   "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
405	[BUG]  [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.endsWith(. "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.endsWith(. "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "./   "))    {    if  (!name.endsWith(. "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
406	[BUG]  [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "./   "))    {    if  (!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
407	[BUG]  [BUGGY]  if  (!name.endsWith(   "./   "))  {  If  (!name.endsWith(   "./   "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "./   "))  {  If  (!name.endsWith(   "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "./   "))    {    If  (!name.endsWith(   "./   "))  {	  	non-compiled	[CE]  	3	None	add
408	[BUG]  [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.endsWith('./   "))  {  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.endsWith('./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "./   "))    {    if  (!name.endsWith('./   "))  {	  	non-compiled	[CE]  unclosed  character  literal	3	None	add
409	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "/.prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( "/.prototype "))  {	  if    (!name.endsWith(   ".prototype   "))    {    	compilable	  [FE]  ComparisonFailure  	10	6	replace
410	[BUG]  [BUGGY]  if  (!name.endsWith( "/.prototype "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "/.prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( "/.prototype "))  {	  if    (!name.endsWith(   ".prototype   "))    {    	compilable	  [FE]  ComparisonFailure  	10	6	replace
411	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( "prototype "))  {	  if    (!name.endsWith(   ".prototype   "))    {    	compilable	  [FE]  ComparisonFailure  	10	6	replace
412	[BUG]  [BUGGY]  if  (!name.endsWith( "prototype "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( "prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( "prototype "))  {	  if    (!name.endsWith(   ".prototype   "))    {    	compilable	  [FE]  ComparisonFailure  	10	6	replace
413	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".java   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
414	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".java   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
415	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".java   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
416	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "java   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "java   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
417	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "java   "))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "java   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
418	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    	compilable	  [FE]  ComparisonFailure  	28	6	replace
419	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    	compilable	  [FE]  ComparisonFailure  	28	6	replace
420	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "/   "))    {    if  (!isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
421	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "/   "))    {    if  (!isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
422	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "/   "))    {    if  (!isDirectory()  ||!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
423	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "/   "))    {    if  (!isDirectory()  ||!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
424	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "/   "))    {    if  (!isDirectory()  ||!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
425	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "/   "))    {    if  (!isDirectory()  ||!name.endsWith('/'))  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
426	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
427	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&!name.endsWith( "/ "))  {	  if(name!=    null    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	112	6	replace
428	[BUG]  [BUGGY]  if(prefix!=  null  &&!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&!name.endsWith( "/ "))  {	  if(name!=    null    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	112	6	replace
429	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
430	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith('/'))  {  [CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  isDirectory()  ||!name.endsWith('/'))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;	108	None	replace
431	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  IOException  	108	1	replace
432	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  IOException  	108	1	replace
433	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;	108	None	replace
434	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
435	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
436	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
437	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(. ".js   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(. ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(. ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
438	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
439	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( "prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
440	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( "prototype. "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( "prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
441	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&!name.endsWith( ".prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
442	[BUG]  [BUGGY]  if(prefix!=  null  &&!name.endsWith( ".prototype. "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&!name.endsWith( ".prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
443	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||!name.endsWith( ".prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
444	[BUG]  [BUGGY]  if(name!=  null  ||!name.endsWith( ".prototype. "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||!name.endsWith( ".prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
445	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "/.prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( "/.prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
446	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( "/.prototype. "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "/.prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( "/.prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
447	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( "prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&!name.endsWith( "prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
448	[BUG]  [BUGGY]  if(prefix!=  null  &&!name.endsWith( "prototype. "))  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( "prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&!name.endsWith( "prototype. "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
449	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
450	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
451	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
452	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
453	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
454	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
455	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
456	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
457	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
458	[BUG]  [BUGGY]  if(prefix.length()  >  0)  {  if  (!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix.length()  >  0)  {  if  (!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix.length()  >  0)  {  if  (!name.startsWith( "/   "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
459	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "./   "))    {    if  (!isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
460	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.endsWith(. "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.endsWith(. "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "./   "))    {    if  (!isDirectory()  ||!name.endsWith(. "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
461	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "./   "))    {    if  (!isDirectory()  ||!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
462	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "./   "))    {    if  (!isDirectory()  ||!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
463	[BUG]  [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name    ==    null    ||!name.endsWith(   "/   "))    {    if  (name  ==  null  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
464	[BUG]  [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name    ==    null    ||!name.endsWith(   "/   "))    {    if  (name  ==  null  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
465	[BUG]  [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name    ==    null    ||!name.endsWith(   "/   "))    {    if  (name!=  null  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
466	[BUG]  [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name    ==    null    ||!name.endsWith(   "/   "))    {    if  (name  ==  null  ||!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
467	[BUG]  [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name    ==    null    ||!name.endsWith(   "/   "))    {    if  (name  ==  null  ||!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
468	[BUG]  [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]              ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name  ==  null  ||!name.endsWith(   "/   "))  {  if  (name  ==  null  ||!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name    ==    null    ||!name.endsWith(   "/   "))    {    if  (name  ==  null  ||!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	115	None	add
469	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	120	1	replace
470	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	120	1	replace
471	[BUG]  [BUGGY]  if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!name.endsWith( "/ "))  {  if  (isDirectory()  ||!name.endsWith('/'))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/'))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
472	[BUG]  [BUGGY]  if(name  ==  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/'))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
473	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	106	6	replace
474	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( ".js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	106	6	replace
475	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  IOException  	106	1	replace
476	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/.js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  IOException  	106	1	replace
477	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
478	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
479	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
480	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
481	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  ||!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
482	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
483	[BUG]  [BUGGY]  encoding  =  encoding.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.clone();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.clone();	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
484	[BUG]  [BUGGY]  encoding  =  encoding.intermediate();  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.intermediate();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intermediate();	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
485	[BUG]  [BUGGY]  encoding  =  zipEncoding.intern();  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  zipEncoding.intern();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  zipEncoding.intern();	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
486	[BUG]  [BUGGY]  encoding  =  encoding.cloneTarEncoding();  [CE]  class,  interface,  or  enum  expected  [FE]                                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.cloneTarEncoding();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.cloneTarEncoding();	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
487	[BUG]  [BUGGY]  encoding  =  encoding.cloneTar();  [CE]  class,  interface,  or  enum  expected  [FE]                                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.cloneTar();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.cloneTar();	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
488	[BUG]  [BUGGY]  encoding  =  encoding.url();  [CE]  class,  interface,  or  enum  expected  [FE]                                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.url();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.url();	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
489	[BUG]  [BUGGY]  if(prefix.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
490	[BUG]  [BUGGY]  if(prefix.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix.length()  >  0)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
491	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
492	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
493	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
494	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
495	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  ||!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
496	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix  >=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix  >=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix  >=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
497	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
498	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith( "/ ")||!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.startsWith( "/ ")||!name.startsWith( "/ "))  {	  if    (!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
499	[BUG]  [BUGGY]  if  (!name.startsWith( "/ ")||!name.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith( "/ ")||!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.startsWith( "/ ")||!name.startsWith( "/ "))  {	  if    (!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
500	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.equals( "/ "))  {	  if    (!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
501	[BUG]  [BUGGY]  if  (!name.equals( "/ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.equals( "/ "))  {	  if    (!name.startsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
502	[BUG]  [BUGGY]  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith(prefix))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.startsWith(prefix))  {	  if    (!name.startsWith(   "/   "))    {    	compilable	  [FE]  IOException  	6	1	replace
503	[BUG]  [BUGGY]  if  (!name.startsWith(prefix))  {  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith(prefix))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.startsWith(prefix))  {	  if    (!name.startsWith(   "/   "))    {    	compilable	  [FE]  IOException  	6	1	replace
504	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/'))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
505	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  IOException  	97	1	replace
506	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  IOException  	97	1	replace
507	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('/'))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
508	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('/'))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
509	[BUG]  [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!prefix.endsWith(   "/   "))    {    if  (!prefix.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
510	[BUG]  [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!prefix.endsWith(   "/   "))    {    if  (!prefix.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
511	[BUG]  [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!prefix.endsWith(   "/   "))    {    if  (!prefix.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
512	[BUG]  [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!prefix.endsWith(   "/   "))    {    if  (!prefix.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	7	None	add
513	[BUG]  [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!prefix.endsWith(   "/   "))    {    if  (!prefix.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
514	[BUG]  [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!prefix.endsWith(   "/   "))  {  if  (!prefix.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!prefix.endsWith(   "/   "))    {    if  (!prefix.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
515	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
516	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
517	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
518	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
519	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  ||!prefix.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory()  ||!prefix.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
520	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  ||!prefix.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  ||!prefix.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  ||!prefix.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
521	[BUG]  [BUGGY]  if  (!name.endsWith(   ".js   "))  {  if  (!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   ".js   "))  {  if  (!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   ".js   "))    {    if  (!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
522	[BUG]  [BUGGY]  if  (!name.endsWith(   ".js   "))  {  if  (!name.endsWith(. ".js   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   ".js   "))  {  if  (!name.endsWith(. ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   ".js   "))    {    if  (!name.endsWith(. ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
523	[BUG]  [BUGGY]  if  (!name.endsWith(   ".js   "))  {  If  (!name.endsWith(   ".js   "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   ".js   "))  {  If  (!name.endsWith(   ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   ".js   "))    {    If  (!name.endsWith(   ".js   "))  {	  	non-compiled	[CE]  	151	None	add
524	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
525	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
526	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
527	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
528	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
529	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( ".prototype "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
530	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( ".prototype "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( ".prototype "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
531	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&!name.endsWith( ".prototype "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
532	[BUG]  [BUGGY]  if(prefix!=  null  &&!name.endsWith( ".prototype "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&!name.endsWith( ".prototype "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
533	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( "prototype "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
534	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( "prototype "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( "prototype "))  {	  if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  ComparisonFailure  	150	6	replace
535	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
536	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  oldStyle);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  oldStyle);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  oldStyle);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
537	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
538	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
539	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (prefix!=  null  &&!prefix.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (prefix!=  null  &&!prefix.endsWith( ".prototype. "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
540	[BUG]  [BUGGY]  if  (prefix!=  null  &&!prefix.endsWith( ".prototype. "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (prefix!=  null  &&!prefix.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (prefix!=  null  &&!prefix.endsWith( ".prototype. "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
541	[BUG]  [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  TarUtils.parseName(header,  offset,  FORMAT_POSIX);	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
542	[BUG]  [BUGGY]  encoding  =  ZipEncoding.parseZipEncoding(header);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  ZipEncoding.parseZipEncoding(header);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  ZipEncoding.parseZipEncoding(header);	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
543	[BUG]  [BUGGY]  Preconditions.checkState(!oldStyle  &&  oldStyle  ==  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(!oldStyle  &&  oldStyle  ==  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(!oldStyle  &&  oldStyle  ==  encoding);	  Preconditions.checkState(oldStyle    ==    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
544	[BUG]  [BUGGY]  Preconditions.checkState(!oldStyle  &&  oldStyle!=  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(!oldStyle  &&  oldStyle!=  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(!oldStyle  &&  oldStyle!=  encoding);	  Preconditions.checkState(oldStyle    ==    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
545	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
546	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
547	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
548	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null)  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	52	6	replace
549	[BUG]  [BUGGY]  if(name!=  null)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	52	6	replace
550	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( ".jar "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(!name.endsWith( ".jar "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	52	6	replace
551	[BUG]  [BUGGY]  if(!name.endsWith( ".jar "))  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( ".jar "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!name.endsWith( ".jar "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	52	6	replace
552	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".zip   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".zip   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".zip   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
553	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
554	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
555	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
556	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
557	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( ".jpg "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
558	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
559	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
560	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
561	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  &&  name.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
562	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
563	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  name.endsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
564	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
565	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name  ==  null  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (name  ==  null  ||!name.endsWith( "./ "))  {	  if    (name    ==    null    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	116	6	replace
566	[BUG]  [BUGGY]  if  (name  ==  null  ||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name  ==  null  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (name  ==  null  ||!name.endsWith( "./ "))  {	  if    (name    ==    null    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	116	6	replace
567	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
568	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  name!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  ComparisonFailure  	67	6	replace
569	[BUG]  [BUGGY]  if(name!=  null  &&  name!=  null  &&  name.length()  >  0)  {  [FE]  ComparisonFailure  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  name!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  ComparisonFailure  	67	6	replace
570	[BUG]  [BUGGY]  if  (!name.endsWith(   ".prototype   "))  {  if  (!name.startsWith( ".prototype   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   ".prototype   "))  {  if  (!name.startsWith( ".prototype   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   ".prototype   "))    {    if  (!name.startsWith( ".prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
571	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
572	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
573	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
574	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
575	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
576	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
577	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
578	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
579	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  encoding.getName()  :  encoding.getName();  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  encoding.getName()  :  encoding.getName();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  encoding.getName()  :  encoding.getName();	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
580	[BUG]  [BUGGY]  final  String  name  =  fileName.getName();  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  fileName.getName();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  fileName.getName();	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
581	[BUG]  [BUGGY]  final  String  name  =  encoding.getName()  +  File.separator;  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  encoding.getName()  +  File.separator;  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  encoding.getName()  +  File.separator;	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
582	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
583	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
584	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
585	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
586	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  ComparisonFailure  	63	6	replace
587	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [FE]  ComparisonFailure  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  ComparisonFailure  	63	6	replace
588	[BUG]  [BUGGY]  if(prefix!=  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/'))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
589	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null)  {  if  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/'))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
590	[BUG]  [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.startsWith(   "/   "))  {  if  (!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.startsWith(   "/   "))    {    if  (!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
591	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
592	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
593	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||  name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||  name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
594	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
595	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
596	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.charAt(prefix.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.charAt(prefix.length()  -  1)  ==  '/')  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.charAt(prefix.length()  -  1)  ==  '/')  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
597	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  name.endsWith( ".jpg "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
598	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
599	[BUG]  [BUGGY]  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	38	1	replace
600	[BUG]  [BUGGY]  if(name!=  null  &&  name.endsWith( "/ "))  {  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	38	1	replace
601	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
602	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
603	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
604	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
605	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()!=  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
606	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./.* "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./.* "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./.* "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
607	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  IOException  	106	1	replace
608	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  IOException  	106	1	replace
609	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
610	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
611	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
612	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  IOException  	127	1	replace
613	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.java "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  IOException  	127	1	replace
614	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  IOException  	127	1	replace
615	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".java "))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.startsWith( ".java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  IOException  	127	1	replace
616	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
617	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
618	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
619	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
620	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
621	[BUG]  [BUGGY]  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  prefix.length()  >  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
622	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >  0)  {  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  >  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
623	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  prefix.length()  >=  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	137	6	replace
624	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  >=  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	137	6	replace
625	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
626	[BUG]  [BUGGY]  [FE]  IOException  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  prefix.length()  >  0)  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  IOException  	32	1	replace
627	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  [FE]  IOException  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  prefix.length()  >  0)  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  IOException  	32	1	replace
628	[BUG]  [BUGGY]  if(prefix!=  null  &&  nameLength  >  0)  {  if(name!=  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  nameLength  >  0)  {  if(name!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  nameLength  >  0)  {  if(name!=  null  &&  name.length()  >  0)  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
629	[BUG]  [BUGGY]  if(prefix!=  null  &&  nameLength  >  0)  {  if(name!=  null  &&  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  nameLength  >  0)  {  if(name!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  nameLength  >  0)  {  if(name!=  null  &&  name.endsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
630	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( ". "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( ". "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
631	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( ". "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( ". "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( ". "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
632	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  prefix.length()  ==  0)  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	102	6	replace
633	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  prefix.length()  ==  0)  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	102	6	replace
634	[BUG]  [BUGGY]  [FE]  IOException  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  prefix.length()  >  0)  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	102	1	replace
635	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  [FE]  IOException  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  prefix.length()  >  0)  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	102	1	replace
636	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
637	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
638	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(   "./   "))    {    	compilable	  [FE]  ComparisonFailure  	87	6	replace
639	[BUG]  [BUGGY]  if(name!=  null  ||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(   "./   "))    {    	compilable	  [FE]  ComparisonFailure  	87	6	replace
640	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()!=  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
641	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  name.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  ||  name.length()  ==  0)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	134	6	replace
642	[BUG]  [BUGGY]  if(name!=  null  ||  name.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||  name.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||  name.length()  ==  0)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	134	6	replace
643	[BUG]  [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith( ".zip "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  if  (isDirectory()  ||!name.endsWith( ".zip "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
644	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix!=  null  &&  name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  prefix!=  null  &&  name.endsWith( "/   "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  IOException  	68	1	replace
645	[BUG]  [BUGGY]  if(name!=  null  &&  prefix!=  null  &&  name.endsWith( "/   "))  {  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix!=  null  &&  name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  prefix!=  null  &&  name.endsWith( "/   "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.startsWith(   "/       "))    {    	compilable	  [FE]  IOException  	68	1	replace
646	[BUG]  [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
647	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
648	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
649	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  ||!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	78	None	add
650	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  ||!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
651	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
652	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
653	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith('/'))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
654	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( ".jpg "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
655	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( ".prototype. "))  {	  if    (!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	152	6	replace
656	[BUG]  [BUGGY]  if  (!name.endsWith( ".prototype. "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( ".prototype. "))  {	  if    (!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	152	6	replace
657	[BUG]  [BUGGY]  encoding  =  zipEncoding.intermediateName();  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  zipEncoding.intermediateName();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  zipEncoding.intermediateName();	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
658	[BUG]  [BUGGY]  encoding  =  TarEncoding.intermediateName(header);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  TarEncoding.intermediateName(header);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  TarEncoding.intermediateName(header);	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
659	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
660	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
661	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( "./ "))  {	  if(name!=    null    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	112	6	replace
662	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( "./ "))  {	  if(name!=    null    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	112	6	replace
663	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.startsWith( "/ "))  {	  if(name!=    null    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	112	6	replace
664	[BUG]  [BUGGY]  if(name!=  null  &&!name.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.startsWith( "/ "))  {	  if(name!=    null    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	112	6	replace
665	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith( "./. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  &&!name.endsWith( "./. "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	53	6	replace
666	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith( "./. "))  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith( "./. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  &&!name.endsWith( "./. "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	53	6	replace
667	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  if  (isDirectory()  ||!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  if  (isDirectory()  ||!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "./   "))    {    if  (isDirectory()  ||!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
668	[BUG]  [BUGGY]  encoding.encode(header,  prefix);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.encode(header,  prefix);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(header,  prefix);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
669	[BUG]  [BUGGY]  encoding.reportCodeChange();  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.reportCodeChange();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.reportCodeChange();	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
670	[BUG]  [BUGGY]  encoding.encode(header,  nameLength);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.encode(header,  nameLength);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(header,  nameLength);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
671	[BUG]  [BUGGY]  encoding.append('n');  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.append('n');  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.append('n');	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
672	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
673	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	39	None	add
674	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  prefix!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	110	6	replace
675	[BUG]  [BUGGY]  if(name!=  null  &&  prefix!=  null  &&  name.length()  >  0)  {  [FE]  ComparisonFailure  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  prefix!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	110	6	replace
676	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
677	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
678	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
679	[BUG]  [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "./   "))  {  if  (!name.startsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "./   "))    {    if  (!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
680	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  IOException  	146	1	replace
681	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  IOException  	146	1	replace
682	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  IOException  	146	1	replace
683	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    	compilable	  [FE]  IOException  	146	1	replace
684	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  name.startsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
685	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "./       "))    {    	compilable	  [FE]  IOException  	13	1	replace
686	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "./       "))    {    	compilable	  [FE]  IOException  	13	1	replace
687	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    if  (!isDirectory()  &&!name.startsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	92	None	add
688	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
689	[BUG]  [BUGGY]  if(prefix!=  null)  {  if  (!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  if  (!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null)  {  if  (!name.endsWith( "./ "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
690	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.endsWith(. ".prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.endsWith(. ".prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&!name.endsWith(. ".prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
691	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
692	[BUG]  [BUGGY]  Preconditions.checkState(value!=  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(value!=  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(value!=  encoding);	  Preconditions.checkState(oldStyle!=    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
693	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle  >=  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(oldStyle  >=  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle  >=  encoding);	  Preconditions.checkState(oldStyle!=    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
694	[BUG]  [BUGGY]  [FE]  IOException  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	71	1	replace
695	[BUG]  [BUGGY]  if(name  ==  null)  {  [FE]  IOException  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	71	1	replace
696	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	71	6	replace
697	[BUG]  [BUGGY]  if(prefix!=  null)  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	71	6	replace
698	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
699	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
700	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( ". "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( ". "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( ". "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
701	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  name.endsWith( ".java "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
702	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
703	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
704	[BUG]  [BUGGY]  if(prefix!=  null)  {  if  (!name.endsWith( ". "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  if  (!name.endsWith( ". "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null)  {  if  (!name.endsWith( ". "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
705	[BUG]  [BUGGY]  if(prefix!=  null)  {  if  (!name.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  if  (!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null)  {  if  (!name.endsWith( ".java "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
706	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith('/'))  {  [CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  &&!name.endsWith('/'))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;	130	None	replace
707	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(!name.endsWith( ".zip "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	130	6	replace
708	[BUG]  [BUGGY]  if(!name.endsWith( ".zip "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!name.endsWith( ".zip "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	130	6	replace
709	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  name.endsWith( "./ "))  {	  if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	120	1	replace
710	[BUG]  [BUGGY]  if(prefix  ==  null  ||  name.endsWith( "./ "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  name.endsWith( "./ "))  {	  if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	120	1	replace
711	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
712	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
713	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
714	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  ||!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	21	None	add
715	[BUG]  [BUGGY]  if(name!=  null)  {  If  (isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null)  {  If  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null)  {  If  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    If    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  	72	None	replace
716	[BUG]  [BUGGY]  if(prefix!=  null)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    If    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  	72	None	replace
717	[BUG]  [BUGGY]  if(name  ==  null)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null)  {  If  (isDirectory()  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    If    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  	72	None	replace
718	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   ".js   "))  {  if  (!isDirectory()  &&!name.startsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   ".js   "))  {  if  (!isDirectory()  &&!name.startsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   ".js   "))    {    if  (!isDirectory()  &&!name.startsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	131	None	add
719	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( ".jpg "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
720	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( ".js "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( ".js "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
721	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(. "./   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(. "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(. "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
722	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
723	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  name.endsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
724	[BUG]  [BUGGY]  final  String  name  =  header.toString();  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header.toString();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header.toString();	  final    String    name    =    header.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
725	[BUG]  [BUGGY]  final  String  name  =  header.getName()  + "/. ";  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header.getName()  + "/. ";  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header.getName()  + "/. ";	  final    String    name    =    header.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
726	[BUG]  [BUGGY]  final  String  name  =  header.getName()  +  encoding;  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header.getName()  +  encoding;  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header.getName()  +  encoding;	  final    String    name    =    header.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
727	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
728	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
729	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.endsWith( "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
730	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
731	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name!=  null  ||  name.endsWith( ".jpg "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
732	[BUG]  [BUGGY]  if(name!=  null  ||!name.endsWith( "/ "))  {  If  (!name.endsWith( "/ "))  {  [CE]  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  ||!name.endsWith( "/ "))  {  If  (!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  ||!name.endsWith( "/ "))  {  If  (!name.endsWith( "/ "))  {	  if    (!name.endsWith(       "/       "))    {    If    (!name.endsWith(       "/       "))    {    	non-compiled	[CE]  	133	None	replace
733	[BUG]  [BUGGY]  if(prefix!=  null)  {  If  (!name.endsWith( "/ "))  {  [CE]  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null)  {  If  (!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null)  {  If  (!name.endsWith( "/ "))  {	  if    (!name.endsWith(       "/       "))    {    If    (!name.endsWith(       "/       "))    {    	non-compiled	[CE]  	133	None	replace
734	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".prototype.   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".prototype.   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
735	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "   "))  {  [CE]  unclosed  string  literal  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "   "))  {	  	non-compiled	[CE]  unclosed  string  literal	145	None	add
736	[BUG]  [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.startsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name!=    null    ||!name.endsWith(   "/   "))    {    if  (name!=  null  ||!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
737	[BUG]  [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (name!=  null  ||!name.endsWith(   "/   "))  {  if  (name!=  null  ||!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (name!=    null    ||!name.endsWith(   "/   "))    {    if  (name!=  null  ||!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	113	None	add
738	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
739	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
740	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
741	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
742	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith(. "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith(. "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith(. "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
743	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
744	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&!name.endsWith( "/   "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
745	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  if  (isDirectory()  ||!name.endsWith('./   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "./   "))  {  if  (isDirectory()  ||!name.endsWith('./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "./   "))    {    if  (isDirectory()  ||!name.endsWith('./   "))  {	  	non-compiled	[CE]  unclosed  character  literal	86	None	add
746	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
747	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
748	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory())  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	107	1	replace
749	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	107	1	replace
750	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ")/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
751	[BUG]  [BUGGY]  encoding.setStyle(style);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.setStyle(style);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.setStyle(style);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
752	[BUG]  [BUGGY]  encoding.parse(header);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.parse(header);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.parse(header);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
753	[BUG]  [BUGGY]  encoding.write(name);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding.write(name);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.write(name);	  encoding.encode(header);    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
754	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory())  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	compilable	  [FE]  IOException  	62	1	replace
755	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	compilable	  [FE]  IOException  	62	1	replace
756	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.endsWith(   "/   ")||! "name.endsWith(   "/   "))  {  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.endsWith(   "/   ")||! "name.endsWith(   "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    if  (!name.endsWith(   "/   ")||! "name.endsWith(   "/   "))  {	  	non-compiled	[CE]  unclosed  string  literal	1	None	add
757	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.startsWith(   "/   ")||!name.endsWith(   "/   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))  {  if  (!name.startsWith(   "/   ")||!name.endsWith(   "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    if  (!name.startsWith(   "/   ")||!name.endsWith(   "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
758	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
759	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
760	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
761	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
762	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ",/ "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ",/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ",/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
763	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ",/ "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ",/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ",/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
764	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
765	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  header.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  header.length);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle  ==  encoding,  header.length);	  Preconditions.checkState(oldStyle    ==    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
766	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  name);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle  ==  encoding,  name);	  Preconditions.checkState(oldStyle    ==    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
767	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  header);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding,  header);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle  ==  encoding,  header);	  Preconditions.checkState(oldStyle    ==    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
768	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name.length()  >  0)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	71	6	replace
769	[BUG]  [BUGGY]  if(name.length()  >  0)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	compilable	  [FE]  ComparisonFailure  	71	6	replace
770	[BUG]  [BUGGY]  [FE]  IOException  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  name.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  name.length()  ==  0)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	71	1	replace
771	[BUG]  [BUGGY]  if(name  ==  null  ||  name.length()  ==  0)  {  [FE]  IOException  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  name.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  name.length()  ==  0)  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith(   ")/       "))    {    	compilable	  [FE]  IOException  	71	1	replace
772	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( ".java "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	46	6	replace
773	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( ".java "))  {	  if    (!name.endsWith(       "/       "))    {    if    (!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	46	6	replace
774	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.endsWith( ".prototype. "   "))  {  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&!name.endsWith( ".prototype. "   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&!name.endsWith( ".prototype. "   "))  {	  	non-compiled	[CE]  unclosed  string  literal	149	None	add
775	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
776	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
777	[BUG]  [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
778	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
779	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle!=  encoding,  header);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(oldStyle!=  encoding,  header);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle!=  encoding,  header);	  Preconditions.checkState(oldStyle!=    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
780	[BUG]  [BUGGY]  Preconditions.checkState(name!=  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  Preconditions.checkState(name!=  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(name!=  encoding);	  Preconditions.checkState(oldStyle!=    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
781	[BUG]  [BUGGY]  encoding  =  encoding.intermediateName(header);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.intermediateName(header);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intermediateName(header);	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
782	[BUG]  [BUGGY]  encoding  =  encoding.intermediatePath();  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.intermediatePath();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intermediatePath();	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
783	[BUG]  [BUGGY]  encoding  =  encoding.intermediateTarEncoding();  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.intermediateTarEncoding();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intermediateTarEncoding();	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
784	[BUG]  [BUGGY]  encoding  =  encoding.intermediatePrefix();  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.intermediatePrefix();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intermediatePrefix();	  encoding    =    encoding.intermediateName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
785	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(. "./   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(. "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(. "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
786	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith('./   "))  {  [CE]  unclosed  character  literal  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith('./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith('./   "))  {	  	non-compiled	[CE]  unclosed  character  literal	119	None	add
787	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "))  {  [CE]  unclosed  string  literal  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "))  {	  	non-compiled	[CE]  unclosed  string  literal	119	None	add
788	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
789	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ",/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( ",/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
790	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
791	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
792	[BUG]  [BUGGY]  final  String  name  =  prefix  >=  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  >=  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  >=  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
793	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
794	[BUG]  [BUGGY]  final  String  name  =  prefix!=  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    prefix):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
795	[BUG]  [BUGGY]  final  String  name  =  encoding.toString();  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  encoding.toString();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  encoding.toString();	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
796	[BUG]  [BUGGY]  final  String  name  =  encoding.getNamespaceURI();  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  encoding.getNamespaceURI();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  encoding.getNamespaceURI();	  final    String    name    =    encoding.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
797	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".js "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".js "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
798	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
799	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".zip "))  {  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ".zip "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
800	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
801	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
802	[BUG]  [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
803	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
804	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(. "./   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(. "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith(. "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
805	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith('./   "))  {  [CE]  unclosed  character  literal  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith('./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith('./   "))  {	  	non-compiled	[CE]  unclosed  character  literal	76	None	add
806	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('./   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith('./   "))  {	  	non-compiled	[CE]  unclosed  character  literal	27	None	add
807	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||! "name.endsWith( "./   "))  {  [CE]  <identifier>  expected  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  ||! "name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  ||! "name.endsWith( "./   "))  {	  	non-compiled	[CE]  <identifier>  expected	27	None	add
808	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  If(name!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "./   "))  {  If(name!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "./   "))    {    If(name!=  null  &&  isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  	27	None	add
809	[BUG]  [BUGGY]  [FE]  IOException  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!checkSumOK  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(!checkSumOK  &&!name.endsWith( "/ "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  IOException  	51	1	replace
810	[BUG]  [BUGGY]  if(!checkSumOK  &&!name.endsWith( "/ "))  {  [FE]  IOException  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!checkSumOK  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!checkSumOK  &&!name.endsWith( "/ "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(   "./       "))    {    	compilable	  [FE]  IOException  	51	1	replace
811	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name!=  null  ||  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
812	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  prefix.length()  ==  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	137	6	replace
813	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  prefix.length()  ==  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	137	6	replace
814	[BUG]  [BUGGY]  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  <  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  prefix.length()  <  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
815	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  <  0)  {  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  prefix.length()  <  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  prefix.length()  <  0)  {	  if(name    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	137	1	replace
816	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
817	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
818	[BUG]  [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
819	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
820	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.endsWith('./   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "./   "))  {  if  (!isDirectory()  ||!name.endsWith('./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "./   "))    {    if  (!isDirectory()  ||!name.endsWith('./   "))  {	  	non-compiled	[CE]  unclosed  character  literal	94	None	add
821	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
822	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
823	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
824	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
825	[BUG]  [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
826	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
827	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('./   "))  {  [CE]  unclosed  character  literal  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('./   "))  {	  	non-compiled	[CE]  unclosed  character  literal	25	None	add
828	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  >=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(prefix  >=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(prefix  >=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
829	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
830	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	74	None	add
831	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
832	[BUG]  [BUGGY]  if(name.length()  >  0)  {  If  (isDirectory()  ||!name.endsWith( "./ "))  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name.length()  >  0)  {  If  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name.length()  >  0)  {  If  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    If    (isDirectory()    ||!name.endsWith(   "/       "))    {    	non-compiled	[CE]  	72	None	replace
833	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
834	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name!=    null    ||    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
835	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_NAMELEN);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_NAMELEN);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_NAMELEN);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
836	[BUG]  [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
837	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
838	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
839	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.startsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
840	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  ||!name.endsWith(   "/   "))  {  if  (!isDirectory()  ||!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    ||!name.endsWith(   "/   "))    {    if  (!isDirectory()  ||!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	88	None	add
841	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||! "name.endsWith( "/   "))  {  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  ||! "name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  ||! "name.endsWith( "/   "))  {	  	non-compiled	[CE]  unclosed  string  literal	21	None	add
842	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  ||  name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  ||  name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  ||  name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
843	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.prototype.   "))  {  [CE]  unclosed  character  literal  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".prototype.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.prototype.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".prototype.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith('.prototype.   "))  {	  	non-compiled	[CE]  unclosed  character  literal	145	None	add
844	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "- "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( "- "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
845	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( "- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( "- "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( "- "))  {	  if(name!=    null    &&!name.endsWith(   ".js   "))    {    	compilable	  [FE]  ComparisonFailure  	148	6	replace
846	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ",/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ",/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
847	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||! "name.endsWith( "/   "))  {  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  ||! "name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  ||! "name.endsWith( "/   "))  {	  	non-compiled	[CE]  unclosed  string  literal	78	None	add
848	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  prefix.length()  {  0)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  prefix.length()  {  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    prefix.length()    ==    0)    {    if(name  ==  null  ||  prefix.length()  {  0)  {	  	non-compiled	[CE]  ')'  expected	136	None	add
849	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  Prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  if(name  ==  null  ||  Prefix.length()  ==  0)  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    prefix.length()    ==    0)    {    if(name  ==  null  ||  Prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
850	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
851	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
852	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
853	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  prefix,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    prefix,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
854	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  ||  name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  ||  name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  ||  name.endsWith( "./ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
855	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
856	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
857	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".jpg "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(.   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
858	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name  >=  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  if(name  >=  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    if(name  >=  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
859	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  If(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {  [CE]  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".zip   "))  {  If(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".zip   "))    {    If(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip   "))  {	  	non-compiled	[CE]  	29	None	add
860	[BUG]  [BUGGY]  final  String  name  =  header.getName()  + "/ ".getBytes();  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header.getName()  + "/ ".getBytes();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header.getName()  + "/ ".getBytes();	  final    String    name    =    header.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
861	[BUG]  [BUGGY]  final  String  name  =  header.getName()  + "/ ".trim();  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header.getName()  + "/ ".trim();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header.getName()  + "/ ".trim();	  final    String    name    =    header.getName();    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
862	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
863	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix  >=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   ".js   "))  {  if(prefix  >=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   ".js   "))    {    if(prefix  >=  null  &&  isDirectory()  &&!name.endsWith( ".js   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
864	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
865	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
866	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||!name.endsWith( ".zip "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	134	6	replace
867	[BUG]  [BUGGY]  if(name  ==  null  ||!name.endsWith( ".zip "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||!name.endsWith( ".zip "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	134	6	replace
868	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||!name.endsWith( ".js "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	134	6	replace
869	[BUG]  [BUGGY]  if(name  ==  null  ||!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||!name.endsWith( ".js "))  {	  if    (isDirectory()    ||!name.endsWith(       "/       "))    {    if    (isDirectory()    ||!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	134	6	replace
870	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	111	None	add
871	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&!name.endsWith( ",/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&!name.endsWith( ",/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
872	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".java   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".java   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
873	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.java   "))  {  [CE]  unclosed  character  literal  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('.java   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith('.java   "))  {	  	non-compiled	[CE]  unclosed  character  literal	126	None	add
874	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name  >=  null  &&  isDirectory()  &&!name.endsWith( ".java   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   ".java   "))  {  if(name  >=  null  &&  isDirectory()  &&!name.endsWith( ".java   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    if(name  >=  null  &&  isDirectory()  &&!name.endsWith( ".java   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
875	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  if  (!isDirectory()  &&!name.endsWith(. "./   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  if  (!isDirectory()  &&!name.endsWith(. "./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "./   "))    {    if  (!isDirectory()  &&!name.endsWith(. "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
876	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  if  (!isDirectory()  &&!name.endsWith('./   "))  {  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "./   "))  {  if  (!isDirectory()  &&!name.endsWith('./   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "./   "))    {    if  (!isDirectory()  &&!name.endsWith('./   "))  {	  	non-compiled	[CE]  unclosed  character  literal	90	None	add
877	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/.   "))  {  [CE]  unclosed  character  literal  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/.   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/.   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/.   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith('/.   "))  {	  	non-compiled	[CE]  unclosed  character  literal	117	None	add
878	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  ||!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	37	None	add
879	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||! "name.endsWith( "/   "))  {  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  ||! "name.endsWith( "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    ||!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  ||! "name.endsWith( "/   "))  {	  	non-compiled	[CE]  unclosed  string  literal	37	None	add
880	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
881	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
882	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
883	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(       "/       "))    {    if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
884	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   ",/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
885	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
886	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "./ "))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "./ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.startsWith(   "/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
887	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!prefix.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&!prefix.endsWith( ".js "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
888	[BUG]  [BUGGY]  if(prefix!=  null  &&!prefix.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&!prefix.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&!prefix.endsWith( ".js "))  {	  if    (!prefix.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
889	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!isDirectory()  &&!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(!isDirectory()  &&!name.endsWith( ".java "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	121	6	replace
890	[BUG]  [BUGGY]  if(!isDirectory()  &&!name.endsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!isDirectory()  &&!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!isDirectory()  &&!name.endsWith( ".java "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith(.   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	121	6	replace
891	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".js "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
892	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".js "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".js "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
893	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".java "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
894	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  isDirectory()  ||!name.endsWith( ".java "))  {	  if(name    ==    null    ||    isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	79	6	replace
895	[BUG]  [BUGGY]  if(!isDirectory()  ||!name.endsWith('/'))  {  [CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!isDirectory()  ||!name.endsWith('/'))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  method  endsWith  in  class  String  cannot  be  applied  to  given  types;	130	None	replace
896	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( ".zip "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	130	6	replace
897	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( ".zip "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.endsWith( ".zip "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( ".zip "))  {	  if    (!isDirectory()    &&!name.endsWith(       "/       "))    {    if    (!isDirectory()    &&!name.endsWith('/       "))    {    	compilable	  [FE]  ComparisonFailure  	130	6	replace
898	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( ".java ")||!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(!name.endsWith( ".java ")||!name.endsWith( ".java "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
899	[BUG]  [BUGGY]  if(!name.endsWith( ".java ")||!name.endsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( ".java ")||!name.endsWith( ".java "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!name.endsWith( ".java ")||!name.endsWith( ".java "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
900	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( ".prototype ")||!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(!name.endsWith( ".prototype ")||!name.endsWith( ".prototype "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
901	[BUG]  [BUGGY]  if(!name.endsWith( ".prototype ")||!name.endsWith( ".prototype "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(!name.endsWith( ".prototype ")||!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(!name.endsWith( ".prototype ")||!name.endsWith( ".prototype "))  {	  if    (!name.endsWith(   "/   ")||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
902	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "java/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "java/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  IOException  	127	1	replace
903	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "java/ "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "java/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "java/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   ".java   "))    {    	compilable	  [FE]  IOException  	127	1	replace
904	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||!name.endsWith( ".prototype. "))  {	  if    (name    ==    null    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	116	6	replace
905	[BUG]  [BUGGY]  if(name  ==  null  ||!name.endsWith( ".prototype. "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||!name.endsWith( ".prototype. "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||!name.endsWith( ".prototype. "))  {	  if    (name    ==    null    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	116	6	replace
906	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory())  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
907	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/'))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
908	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  ||  name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  ||  name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  ||  name.endsWith('/'))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
909	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory())  {  if(name  ==  null  ||  isDirectory()  ||!name.endsWith('/'))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(       "/       "))    {    if(name    ==    null    ||    isDirectory()    &&!name.endsWith('/       "))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
910	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory())  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/.* "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(       "./       "))    {    if(name    ==    null    &&    isDirectory()    &&!name.endsWith(   "./       "))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
911	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory())  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  isDirectory())  {	  if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	75	1	replace
912	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory())  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name  ==  null  ||  isDirectory())  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  isDirectory())  {	  if(prefix    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	75	1	replace
913	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
914	[BUG]  [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
915	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
916	[BUG]  [BUGGY]  final  String  name  =  header  >>  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                      IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header  >>  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header  >>  null?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
917	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
918	[BUG]  [BUGGY]  encoding  =  encoding.toUpperCase();  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.toUpperCase();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.toUpperCase();	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
919	[BUG]  [BUGGY]  encoding  =  header.intern();  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  header.intern();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  header.intern();	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
920	[BUG]  [BUGGY]  encoding  =  encoding.intermediately();  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  encoding  =  encoding.intermediately();  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intermediately();	  encoding    =    encoding.intern();    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
921	[BUG]  [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
922	[BUG]  [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix!=  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
923	[BUG]  [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  prefix  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
924	[BUG]  [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header  ==  null?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
925	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.equals( "/ "))  {	  if(name!=    null    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	112	6	replace
926	[BUG]  [BUGGY]  if(name!=  null  &&!name.equals( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(name!=  null  &&!name.equals( "/ "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.equals( "/ "))  {	  if(name!=    null    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	112	6	replace
927	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith('/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	103	None	add
928	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix    ==    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
929	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);        [BUGGY]  if  (!isDirectory()  &&!name.startsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith( ")/   "))  {  [BUGGY]      name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.startsWith(   "/   "))    {    if  (!isDirectory()  &&!name.startsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
