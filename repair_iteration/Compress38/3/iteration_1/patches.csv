bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith( "/ ")||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( "/ ")||!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
2	[BUG]  [BUGGY]  if  (!name.endsWith( "/ ")||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith( "/ ")||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( "/ ")||!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( "./ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
4	[BUG]  [BUGGY]  if  (!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( "./ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.startsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.startsWith( "/ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
6	[BUG]  [BUGGY]  if  (!name.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.startsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.startsWith( "/ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!prefix.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!prefix.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
8	[BUG]  [BUGGY]  if  (!prefix.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!prefix.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!prefix.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith( ".prototype "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( ".prototype "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
10	[BUG]  [BUGGY]  if  (!name.endsWith( ".prototype "))  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith( ".prototype "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( ".prototype "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
11	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
12	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
13	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
14	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
15	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
16	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
17	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
18	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
19	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
20	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	17	6	replace
22	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	17	6	replace
23	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	17	1	replace
24	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	17	1	replace
25	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	15	1	replace
26	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	15	1	replace
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  ComparisonFailure  	15	6	replace
28	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  ||!name.endsWith( "./ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  ComparisonFailure  	15	6	replace
29	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	15	1	replace
30	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".zip "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	15	1	replace
31	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
32	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
33	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
34	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
35	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
36	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	11	6	replace
38	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	11	6	replace
39	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	11	1	replace
40	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.startsWith( "/ "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	11	1	replace
41	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	11	1	replace
42	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	11	1	replace
43	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   "))    {    if  (!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
44	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   "))    {    if  (!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
45	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith( ")/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   "))    {    if  (!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
46	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith(. "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   "))    {    if  (!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
47	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith( ",/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   "))    {    if  (!name.endsWith( ",/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
48	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.endsWith('/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   "))    {    if  (!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	7	None	add
49	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith(   "/   "))  {  if  (!name.startsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   "))    {    if  (!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
50	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    if  (!isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
51	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    if  (!isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
52	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    if  (!isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
53	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    if  (!isDirectory()  &&!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
54	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith( ",/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    if  (!isDirectory()  &&!name.endsWith( ",/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
55	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
56	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
57	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
58	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
59	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
60	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  prefix,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
61	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
62	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
63	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
64	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
65	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
66	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
67	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
68	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
69	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "/   "))    {    if  (isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
70	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "/   "))    {    if  (isDirectory()  ||!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
71	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith( ")/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "/   "))    {    if  (isDirectory()  ||!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
72	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  If  (isDirectory()  ||!name.endsWith( "/   "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  If  (isDirectory()  ||!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "/   "))    {    If  (isDirectory()  ||!name.endsWith( "/   "))  {	  	non-compiled	[CE]  	1	None	add
73	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith('/'))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "/   "))    {    if  (isDirectory()  ||!name.endsWith('/'))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
74	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	13	1	replace
75	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	13	1	replace
76	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	13	1	replace
77	[BUG]  [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  &&  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	13	1	replace
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	13	6	replace
79	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  isDirectory()  ||!name.endsWith( "/ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	13	6	replace
80	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
81	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
82	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
83	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith( "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
84	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
85	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
86	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
87	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (isDirectory()  ||!name.endsWith( "./ "))  {	  if    (isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
88	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  ||!name.endsWith( "/ "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
89	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  ||!name.endsWith( "/ "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
90	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  &&!name.endsWith( "./ "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
91	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  &&!name.endsWith( "./ "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  &&!name.startsWith( "/ "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
93	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.startsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  &&!name.startsWith( "/ "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  ||!name.endsWith( "./ "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
95	[BUG]  [BUGGY]  if  (!isDirectory()  ||!name.endsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  ||!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  ||!name.endsWith( "./ "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
96	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
97	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	10	None	add
98	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
99	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
100	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
101	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
102	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
103	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	17	1	replace
104	[BUG]  [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  &&  isDirectory()  &&!name.endsWith( "/ "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	17	1	replace
105	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	17	1	replace
106	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ".js "))  {	  if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	17	1	replace
107	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
108	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	12	None	add
109	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
110	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
112	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( "/ "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (name!=  null  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (name!=  null  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
114	[BUG]  [BUGGY]  if  (name!=  null  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (name!=  null  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (name!=  null  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (name  ==  null  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (name  ==  null  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
116	[BUG]  [BUGGY]  if  (name  ==  null  ||!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (name  ==  null  ||!name.endsWith( "/ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (name  ==  null  ||!name.endsWith( "/ "))  {	  if    (isDirectory()    ||!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	2	6	replace
117	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	15	1	replace
118	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( "/. "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    	compilable	  [FE]  IOException  	15	1	replace
119	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	13	1	replace
120	[BUG]  [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix  ==  null  ||  isDirectory()  &&!name.endsWith( "./ "))  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	13	1	replace
121	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith(. "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    if  (!isDirectory()  &&!name.endsWith(. "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
122	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.startsWith( "/   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.startsWith( "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "/   "))    {    if  (isDirectory()  ||!name.startsWith( "/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
123	[BUG]  [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(prefix!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(prefix!=  null  &&  isDirectory()  &&!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	16	None	add
124	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith('/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	3	None	add
125	[BUG]  [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  ||  isDirectory()  &&!name.endsWith( ",/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  ||  isDirectory()  &&!name.endsWith( ",/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
126	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	11	1	replace
127	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".java "))  {	  if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	11	1	replace
128	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "./   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith(. "./   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
129	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('./   "))  {  [CE]  unclosed  character  literal  [FE]      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "./   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith('./   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "./   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith('./   "))  {	  	non-compiled	[CE]  unclosed  character  literal	14	None	add
130	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith(   "/   "))  {  if  (!isDirectory()  &&!name.endsWith('/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    if  (!isDirectory()  &&!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	5	None	add
131	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!isDirectory()  &&!name.endsWith( ".js "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
132	[BUG]  [BUGGY]  if  (!isDirectory()  &&!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!isDirectory()  &&!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!isDirectory()  &&!name.endsWith( ".js "))  {	  if    (!isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	6	6	replace
133	[BUG]  [BUGGY]  if  (!name.endsWith(   "/   "))  {  If  (!name.endsWith(   "/   "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith(   "/   "))  {  If  (!name.endsWith(   "/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (!name.endsWith(   "/   "))    {    If  (!name.endsWith(   "/   "))  {	  	non-compiled	[CE]  	7	None	add
134	[BUG]  [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith('/   "))  {  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (isDirectory()  ||!name.endsWith(   "/   "))  {  if  (isDirectory()  ||!name.endsWith('/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if    (isDirectory()    ||!name.endsWith(   "/   "))    {    if  (isDirectory()  ||!name.endsWith('/   "))  {	  	non-compiled	[CE]  unclosed  character  literal	1	None	add
135	[BUG]  [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name  ==  null  ||  isDirectory()  &&!name.endsWith( ",/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
136	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name  ==  null  ||  prefix.length()  ==  0)  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	13	6	replace
137	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name  ==  null  ||  prefix.length()  ==  0)  {	  if(name    ==    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	13	6	replace
138	[BUG]  [BUGGY]  final  String  name  =  encoding.getName();  [CE]  class,  interface,  or  enum  expected  [FE]                IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  encoding.getName();  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  encoding.getName();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
139	[BUG]  [BUGGY]  encoding.encode(header);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  encoding.encode(header);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding.encode(header);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  Preconditions.checkState(oldStyle  ==  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle  ==  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
141	[BUG]  [BUGGY]  final  String  name  =  header.getName();  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  final  String  name  =  header.getName();  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	final  String  name  =  header.getName();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(oldStyle!=  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  Preconditions.checkState(oldStyle!=  encoding);  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	Preconditions.checkState(oldStyle!=  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
143	[BUG]  [BUGGY]  encoding  =  encoding.intermediateName();  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  encoding  =  encoding.intermediateName();  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intermediateName();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
144	[BUG]  [BUGGY]  encoding  =  encoding.intern();  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  encoding  =  encoding.intern();  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	encoding  =  encoding.intern();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
145	[BUG]  [BUGGY]  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	4	1	replace
146	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&  isDirectory()  &&!name.endsWith( ".prototype. "))  {	  if(name!=    null    ||    isDirectory()    &&!name.endsWith(   "/   "))    {    	compilable	  [FE]  IOException  	4	1	replace
147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( ".js "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
148	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( ".js "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&!name.endsWith( ".prototype. "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if(name!=  null  &&!name.endsWith( ".prototype. "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
150	[BUG]  [BUGGY]  if(name!=  null  &&!name.endsWith( ".prototype. "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&!name.endsWith( ".prototype. "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=  null  &&!name.endsWith( ".prototype. "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
151	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	add	if  (!name.endsWith( ".js "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
152	[BUG]  [BUGGY]  if  (!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if  (!name.endsWith( ".js "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if  (!name.endsWith( ".js "))  {	  if    (!name.endsWith(   "/   "))    {    	compilable	  [FE]  ComparisonFailure  	8	6	replace
153	[BUG]  [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  break;  }  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);      [BUGGY]  if(name!=  null  &&  isDirectory()  &&!name.endsWith(   "/   "))  {  if(name!=  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {  [BUGGY]    name  =  name  +     "/   ";  }  if  (prefix.length()  >  0){  name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1158	1158	1	replace	if(name!=    null    &&    isDirectory()    &&!name.endsWith(   "/   "))    {    if(name!=  null  &&  isDirectory()  &&!name.endsWith( ")/   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
